// NEED TO CHECK NONE OF THE NONCOLINEAR HAVE GHOSTS
// NEED TO CHECK NCHUNKS WHERE THERE ARE MAT/QUANT

// NEED EXAMPLE OF NON-COLINEAR WITH CHUNKS AND/OR AMR
// NEED EXAMPLE OF UNSTR

// POINT & AMR GHOSTS


#ifndef __tio_generator_data_h__
#define __tio_generator_data_h__

#include <typhonio.h>

// Define all dummy info here so we can modify it easily
// Can add new dummy data simply by adding to FILES[]

typedef struct
{
  void         *mat;
  void         *ncomp;
  void         *ptr;
  void         *mixmat;
  void         *vf;
} matchunk;

typedef struct
{
  char name[TIO_STRLEN];
  TIO_Size_t   nmats;
  char (*matnames)[TIO_STRLEN];
  TIO_Size_t nghosts;
  TIO_Bool_t ismixed;
  TIO_Data_t  ncomp_datatype;
  TIO_Data_t  ptr_datatype;
  TIO_Data_t  vf_datatype;
  TIO_Size_t nchunks;
  matchunk *chunk;
} matinfo;

typedef struct
{
  double *quant;
  double *mix;
} quantchunk;

typedef struct
{
  char name[TIO_STRLEN];
  TIO_Centre_t centre;
  TIO_Size_t nghosts;
  TIO_Bool_t ismixed;
  char units[TIO_STRLEN];
  TIO_Size_t nchunks;
  quantchunk *chunk;
} quantinfo;


// would like to make chunkinfo a union
// probably should remove ndims
typedef struct
{
  TIO_Dims_t ndims;
  TIO_Size_t xl; // nl for Point mesh
  TIO_Size_t xh; // nh for Point mesh
  TIO_Size_t yl; // nghosts for Point mesh
  TIO_Size_t yh;
  TIO_Size_t zl;
  TIO_Size_t zh;
  double *x;     // Note: colinear quad mesh uses coords in chunk 0
  double *y;
  double *z;
  TIO_Size_t nmixcell;
  TIO_Size_t nmixcomp;
} chunkinfo;

typedef struct
{
  char name[25];
  TIO_Mesh_t type;
  TIO_Coord_t coordtype;
  TIO_Bool_t isAMR;
  char group[TIO_STRLEN];
  TIO_Size_t order;
  TIO_Dims_t ndims;
  TIO_Size_t n1; // nx for quad, nnodes for point/unstr
  TIO_Size_t n2; // ny for quad, ncells for unstr
  TIO_Size_t n3; // nz for quad, nshapes for unstr
  TIO_Size_t n4; // nghosts for noncolinear quad, nconn for unstr
  TIO_Size_t nchunks;
  chunkinfo *chunk;
  const char *iunits;
  const char *junits;
  const char *kunits;
  const char *ilabel;
  const char *jlabel;
  const char *klabel;
  matinfo *material;
  int nquants;
  quantinfo *quant;
} meshinfo;

typedef struct
{
  char name[TIO_STRLEN];
  TIO_Step_t step;
  TIO_Time_t time;
  char units[TIO_STRLEN];
  int nmeshes;
  meshinfo *mesh;
} stateinfo;

typedef struct
{
  char name[TIO_STRLEN];
  char version[TIO_STRLEN];
  char date[TIO_STRLEN];
  char title[TIO_STRLEN];
  int nstates;
  stateinfo *state;
} fileinfo;

// Use same coordinates for all cases
double x[] = {-5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0};
double y[] = {0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0};
double z[] = {0.0, 1.0, 2.0, 3.0, 4.0};
double x2[] = {-5.0, -3.0, -1.0, 1.0, 3.0, 5.0};
double y2[] = {0.0, 2.0, 4.0, 7.0};

double r[] = {0.0, 1.0, 2.0, 3.0, 4.0};
double theta[] = {0.0, 45.0, 90.0, 135.0, 180.0};
double thi[] = {0.0, 45.0, 90.0, 135.0, 180.0, 225.0, 270.0, 315.0, 360.0}; 

double point_r[161] = {0.0, 1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0,
                            1.0, 2.0, 3.0, 4.0};
                       
                    
double point_theta[161] = {  0.0,  0.0,  0.0,  0.0,  0.0,
                                  45.0, 45.0, 45.0, 45.0,
                                  90.0, 90.0, 90.0, 90.0,
                                 135.0,135.0,135.0,135.0,
                                 180.0,180.0,180.0,180.0,
                                   0.0,  0.0,  0.0,  0.0,
                                  45.0, 45.0, 45.0, 45.0,
                                  90.0, 90.0, 90.0, 90.0,
                                 135.0,135.0,135.0,135.0,
                                 180.0,180.0,180.0,180.0,
                                   0.0,  0.0,  0.0,  0.0,
                                  45.0, 45.0, 45.0, 45.0,
                                  90.0, 90.0, 90.0, 90.0,
                                 135.0,135.0,135.0,135.0,
                                 180.0,180.0,180.0,180.0,
                                   0.0,  0.0,  0.0,  0.0,
                                  45.0, 45.0, 45.0, 45.0,
                                  90.0, 90.0, 90.0, 90.0,
                                 135.0,135.0,135.0,135.0,
                                 180.0,180.0,180.0,180.0,
                                   0.0,  0.0,  0.0,  0.0,
                                  45.0, 45.0, 45.0, 45.0,
                                  90.0, 90.0, 90.0, 90.0,
                                 135.0,135.0,135.0,135.0,
                                 180.0,180.0,180.0,180.0,
                                   0.0,  0.0,  0.0,  0.0,
                                  45.0, 45.0, 45.0, 45.0,
                                  90.0, 90.0, 90.0, 90.0,
                                 135.0,135.0,135.0,135.0,
                                 180.0,180.0,180.0,180.0,
                                   0.0,  0.0,  0.0,  0.0,
                                  45.0, 45.0, 45.0, 45.0,
                                  90.0, 90.0, 90.0, 90.0,
                                 135.0,135.0,135.0,135.0,
                                 180.0,180.0,180.0,180.0,
                                   0.0,  0.0,  0.0,  0.0,
                                  45.0, 45.0, 45.0, 45.0,
                                  90.0, 90.0, 90.0, 90.0,
                                 135.0,135.0,135.0,135.0,
                                 180.0,180.0,180.0,180.0};
                                
                          
double point_thisph[161] = {  0.0,  0.0,  0.0,  0.0,  0.0,
                                    0.0,  0.0,  0.0,  0.0,
                                    0.0,  0.0,  0.0,  0.0,
                                    0.0,  0.0,  0.0,  0.0,
                                    0.0,  0.0,  0.0,  0.0,
                                   45.0, 45.0, 45.0, 45.0,
                                   45.0, 45.0, 45.0, 45.0,
                                   45.0, 45.0, 45.0, 45.0,
                                   45.0, 45.0, 45.0, 45.0,
                                   45.0, 45.0, 45.0, 45.0,
                                   90.0, 90.0, 90.0, 90.0,
                                   90.0, 90.0, 90.0, 90.0,
                                   90.0, 90.0, 90.0, 90.0,
                                   90.0, 90.0, 90.0, 90.0,
                                   90.0, 90.0, 90.0, 90.0,
                                  135.0,135.0,135.0,135.0,
                                  135.0,135.0,135.0,135.0,
                                  135.0,135.0,135.0,135.0,
                                  135.0,135.0,135.0,135.0,
                                  135.0,135.0,135.0,135.0,
                                  180.0,180.0,180.0,180.0,
                                  180.0,180.0,180.0,180.0,
                                  180.0,180.0,180.0,180.0,
                                  180.0,180.0,180.0,180.0,
                                  180.0,180.0,180.0,180.0,
                                  225.0,225.0,225.0,225.0,
                                  225.0,225.0,225.0,225.0,
                                  225.0,225.0,225.0,225.0,
                                  225.0,225.0,225.0,225.0,
                                  225.0,225.0,225.0,225.0,
                                  270.0,270.0,270.0,270.0,
                                  270.0,270.0,270.0,270.0,
                                  270.0,270.0,270.0,270.0,
                                  270.0,270.0,270.0,270.0,
                                  315.0,315.0,315.0,315.0,
                                  315.0,315.0,315.0,315.0,
                                  315.0,315.0,315.0,315.0,
                                  315.0,315.0,315.0,315.0,
                                  315.0,315.0,315.0,315.0};


double point_rcyl[165] = {0.0, 1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0,
                               1.0, 2.0, 3.0, 4.0};

double point_thicyl[165] = {  0.0,  0.0,  0.0,  0.0,  0.0,
                                   45.0, 45.0, 45.0, 45.0,
                                   90.0, 90.0, 90.0, 90.0,
                                  135.0,135.0,135.0,135.0,
                                  180.0,180.0,180.0,180.0,
                                  225.0,225.0,225.0,225.0,
                                  270.0,270.0,270.0,270.0,
                                  315.0,315.0,315.0,315.0,
                               0.0, 0.0,  0.0,  0.0,  0.0,
                                   45.0, 45.0, 45.0, 45.0,
                                   90.0, 90.0, 90.0, 90.0,
                                  135.0,135.0,135.0,135.0,
                                  180.0,180.0,180.0,180.0,
                                  225.0,225.0,225.0,225.0,
                                  270.0,270.0,270.0,270.0,
                                  315.0,315.0,315.0,315.0,
                               0.0, 0.0,  0.0,  0.0,  0.0,
                                   45.0, 45.0, 45.0, 45.0,
                                   90.0, 90.0, 90.0, 90.0,
                                  135.0,135.0,135.0,135.0,
                                  180.0,180.0,180.0,180.0,
                                  225.0,225.0,225.0,225.0,
                                  270.0,270.0,270.0,270.0,
                                  315.0,315.0,315.0,315.0,
                               0.0, 0.0,  0.0,  0.0,  0.0,
                                   45.0, 45.0, 45.0, 45.0,
                                   90.0, 90.0, 90.0, 90.0,
                                  135.0,135.0,135.0,135.0,
                                  180.0,180.0,180.0,180.0,
                                  225.0,225.0,225.0,225.0,
                                  270.0,270.0,270.0,270.0,
                                  315.0,315.0,315.0,315.0,
                               0.0, 0.0,  0.0,  0.0,  0.0,
                                   45.0, 45.0, 45.0, 45.0,
                                   90.0, 90.0, 90.0, 90.0,
                                  135.0,135.0,135.0,135.0,
                                  180.0,180.0,180.0,180.0,
                                  225.0,225.0,225.0,225.0,
                                  270.0,270.0,270.0,270.0,
                                  315.0,315.0,315.0,315.0};

double point_z[165] = {0.0, 0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0,
                            0.0, 0.0, 0.0, 0.0,
                       1.0, 1.0, 1.0, 1.0, 1.0,
                            1.0, 1.0, 1.0, 1.0,
                            1.0, 1.0, 1.0, 1.0,
                            1.0, 1.0, 1.0, 1.0,
                            1.0, 1.0, 1.0, 1.0,
                            1.0, 1.0, 1.0, 1.0,
                            1.0, 1.0, 1.0, 1.0,
                            1.0, 1.0, 1.0, 1.0,
                       2.0, 2.0, 2.0, 2.0, 2.0,
                            2.0, 2.0, 2.0, 2.0,
                            2.0, 2.0, 2.0, 2.0,
                            2.0, 2.0, 2.0, 2.0,
                            2.0, 2.0, 2.0, 2.0,
                            2.0, 2.0, 2.0, 2.0,
                            2.0, 2.0, 2.0, 2.0,
                            2.0, 2.0, 2.0, 2.0,
                       3.0, 3.0, 3.0, 3.0, 3.0,
                            3.0, 3.0, 3.0, 3.0,
                            3.0, 3.0, 3.0, 3.0,
                            3.0, 3.0, 3.0, 3.0,
                            3.0, 3.0, 3.0, 3.0,
                            3.0, 3.0, 3.0, 3.0,
                            3.0, 3.0, 3.0, 3.0,
                            3.0, 3.0, 3.0, 3.0,
                       4.0, 4.0, 4.0, 4.0, 4.0,
                            4.0, 4.0, 4.0, 4.0,
                            4.0, 4.0, 4.0, 4.0,
                            4.0, 4.0, 4.0, 4.0,
                            4.0, 4.0, 4.0, 4.0,
                            4.0, 4.0, 4.0, 4.0,
                            4.0, 4.0, 4.0, 4.0,
                            4.0, 4.0, 4.0, 4.0};
                             
double noncol_rcyl[200] = {0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0,
                          0.0, 1.0, 2.0, 3.0, 4.0};

double noncol_thicyl[200] = { 0.0,  0.0,  0.0,  0.0,  0.0,
                              0.0, 45.0, 45.0, 45.0, 45.0,
                              0.0, 90.0, 90.0, 90.0, 90.0,
                              0.0,135.0,135.0,135.0,135.0,
                              0.0,180.0,180.0,180.0,180.0,
                              0.0,225.0,225.0,225.0,225.0,
                              0.0,270.0,270.0,270.0,270.0,
                              0.0,315.0,315.0,315.0,315.0,
                              0.0,  0.0,  0.0,  0.0,  0.0,
                              0.0, 45.0, 45.0, 45.0, 45.0,
                              0.0, 90.0, 90.0, 90.0, 90.0,
                              0.0,135.0,135.0,135.0,135.0,
                              0.0,180.0,180.0,180.0,180.0,
                              0.0,225.0,225.0,225.0,225.0,
                              0.0,270.0,270.0,270.0,270.0,
                              0.0,315.0,315.0,315.0,315.0,
                              0.0,  0.0,  0.0,  0.0,  0.0,
                              0.0, 45.0, 45.0, 45.0, 45.0,
                              0.0, 90.0, 90.0, 90.0, 90.0,
                              0.0,135.0,135.0,135.0,135.0,
                              0.0,180.0,180.0,180.0,180.0,
                              0.0,225.0,225.0,225.0,225.0,
                              0.0,270.0,270.0,270.0,270.0,
                              0.0,315.0,315.0,315.0,315.0,
                              0.0,  0.0,  0.0,  0.0,  0.0,
                              0.0, 45.0, 45.0, 45.0, 45.0,
                              0.0, 90.0, 90.0, 90.0, 90.0,
                              0.0,135.0,135.0,135.0,135.0,
                              0.0,180.0,180.0,180.0,180.0,
                              0.0,225.0,225.0,225.0,225.0,
                              0.0,270.0,270.0,270.0,270.0,
                              0.0,315.0,315.0,315.0,315.0,
                              0.0,  0.0,  0.0,  0.0,  0.0,
                              0.0, 45.0, 45.0, 45.0, 45.0,
                              0.0, 90.0, 90.0, 90.0, 90.0,
                              0.0,135.0,135.0,135.0,135.0,
                              0.0,180.0,180.0,180.0,180.0,
                              0.0,225.0,225.0,225.0,225.0,
                              0.0,270.0,270.0,270.0,270.0,
                              0.0,315.0,315.0,315.0,315.0};

double noncol_z[200] = {0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0,
                        1.0, 1.0, 1.0, 1.0, 1.0,
                        1.0, 1.0, 1.0, 1.0, 1.0,
                        1.0, 1.0, 1.0, 1.0, 1.0,
                        1.0, 1.0, 1.0, 1.0, 1.0,
                        1.0, 1.0, 1.0, 1.0, 1.0,
                        1.0, 1.0, 1.0, 1.0, 1.0,
                        1.0, 1.0, 1.0, 1.0, 1.0,
                        1.0, 1.0, 1.0, 1.0, 1.0,
                        2.0, 2.0, 2.0, 2.0, 2.0,
                        2.0, 2.0, 2.0, 2.0, 2.0,
                        2.0, 2.0, 2.0, 2.0, 2.0,
                        2.0, 2.0, 2.0, 2.0, 2.0,
                        2.0, 2.0, 2.0, 2.0, 2.0,
                        2.0, 2.0, 2.0, 2.0, 2.0,
                        2.0, 2.0, 2.0, 2.0, 2.0,
                        2.0, 2.0, 2.0, 2.0, 2.0,
                        3.0, 3.0, 3.0, 3.0, 3.0,
                        3.0, 3.0, 3.0, 3.0, 3.0,
                        3.0, 3.0, 3.0, 3.0, 3.0,
                        3.0, 3.0, 3.0, 3.0, 3.0,
                        3.0, 3.0, 3.0, 3.0, 3.0,
                        3.0, 3.0, 3.0, 3.0, 3.0,
                        3.0, 3.0, 3.0, 3.0, 3.0,
                        3.0, 3.0, 3.0, 3.0, 3.0,
                        4.0, 4.0, 4.0, 4.0, 4.0,
                        4.0, 4.0, 4.0, 4.0, 4.0,
                        4.0, 4.0, 4.0, 4.0, 4.0,
                        4.0, 4.0, 4.0, 4.0, 4.0,
                        4.0, 4.0, 4.0, 4.0, 4.0,
                        4.0, 4.0, 4.0, 4.0, 4.0,
                        4.0, 4.0, 4.0, 4.0, 4.0,
                        4.0, 4.0, 4.0, 4.0, 4.0};
                            

/******************************* 1D Dummy Data *******************************/

int material_1d[][10]={{1, 1, 1, 1, 1, 1, 1,-1,-2, 5}}; 
int ncomp_1d[2] = {2, 3};
int ptr_1d[2] = {1, 3};
int mixmat_1d[5] = {1, 2, 2, 3, 4};
double vf_1d[5] = {0.5, 0.5, 0.2, 0.3, 0.5};

double q[][10] = {{1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 3.0, 4.0},
                  {2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 3.0, 4.0},
                  {2.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 2.0, 3.0, 4.0},
                  {0.5, 2.0, 2.0, 1.0, 0.0, 0.0, 0.0, 2.0, 3.0, 4.0},
                  {0.1, 0.5, 2.0, 2.0, 1.0, 0.0, 0.0, 2.0, 3.0, 4.0},
                  {0.0, 0.1, 0.5, 2.0, 2.0, 1.0, 0.0, 2.0, 3.0, 4.0}};
double v[][11] = {{0.0, 0.5, 1.0, 0.5, 0.0,-0.5,-1.0,-0.5, 0.0, 0.5, 1.0},
                  {0.0, 0.0, 0.0, 0.5, 1.0, 0.5, 0.0,-0.5,-1.0,-0.5, 0.0},
                  {0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 1.0, 0.5, 0.0,-0.5,-1.0},
                  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 1.0, 0.5, 0.0},
                  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 1.0},
                  {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
// xedge == cell, y/zedge == nodal, xface == nodal, y/zface == cell
double xedge[10] = {0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0};
double xface[11] = {0.1, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 8.1, 9.1, 10.1};
double qmix_1d[5] = {1.0, 3.0, 3.0, 1.333333, 4.0};

matchunk matchunk_1d[] = {
  {material_1d[0], ncomp_1d, ptr_1d, mixmat_1d, vf_1d},
  {material_1d[0], ncomp_1d, ptr_1d, mixmat_1d, vf_1d},
  {material_1d[0], ncomp_1d, ptr_1d, mixmat_1d, vf_1d},
  {material_1d[0], ncomp_1d, ptr_1d, mixmat_1d, vf_1d},
  {material_1d[0], ncomp_1d, ptr_1d, mixmat_1d, vf_1d},
  {material_1d[0], ncomp_1d, ptr_1d, mixmat_1d, vf_1d}};

quantchunk var_chunk_1d[][4] = {
  {{q[0], qmix_1d},
   {v[0], NULL},
   {xedge, NULL},
   {xface, NULL}},
  {{q[1], qmix_1d},
   {v[1], NULL},
   {xedge, NULL},
   {xface, NULL}},
  {{q[2], qmix_1d},
   {v[2], NULL},
   {xedge, NULL},
   {xface, NULL}},
  {{q[3], qmix_1d},
   {v[3], NULL},
   {xedge, NULL},
   {xface, NULL}},
  {{q[4], qmix_1d},
   {v[4], NULL},
   {xedge, NULL},
   {xface, NULL}},
  {{q[5], qmix_1d},
   {v[5], NULL},
   {xedge, NULL},
   {xface, NULL}}};

matinfo mat_1d[] = {
  {"Material", 5, NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, &matchunk_1d[0]},
  {"Material", 5, NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, &matchunk_1d[1]},
  {"Material", 5, NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, &matchunk_1d[2]},
  {"Material", 5, NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, &matchunk_1d[3]},
  {"Material", 5, NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, &matchunk_1d[4]},
  {"Material", 5, NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, &matchunk_1d[5]}};

quantinfo var_1d[][4] = {
  {{"Q", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_TRUE,  "", 1, &var_chunk_1d[0][0]},
   {"V", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[0][1]},
   {"Edge", TIO_CENTRE_EDGE_I, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[0][2]},
   {"Face", TIO_CENTRE_FACE_I, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[0][3]}},
  {{"Q", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_TRUE,  "", 1, &var_chunk_1d[1][0]},
   {"V", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[1][1]},
   {"Edge", TIO_CENTRE_EDGE_I, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[1][2]},
   {"Face", TIO_CENTRE_FACE_I, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[1][3]}},
  {{"Q", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_TRUE,  "", 1, &var_chunk_1d[2][0]},
   {"V", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[2][1]},
   {"Edge", TIO_CENTRE_EDGE_I, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[2][2]},
   {"Face", TIO_CENTRE_FACE_I, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[2][3]}},
  {{"Q", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_TRUE,  "", 1, &var_chunk_1d[3][0]},
   {"V", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[3][1]},
   {"Edge", TIO_CENTRE_EDGE_I, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[3][2]},
   {"Face", TIO_CENTRE_FACE_I, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[3][3]}},
  {{"Q", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_TRUE,  "", 1, &var_chunk_1d[4][0]},
   {"V", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[4][1]},
   {"Edge", TIO_CENTRE_EDGE_I, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[4][2]},
   {"Face", TIO_CENTRE_FACE_I, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[4][3]}},
  {{"Q", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_TRUE,  "", 1, &var_chunk_1d[5][0]},
   {"V", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[5][1]},
   {"Edge", TIO_CENTRE_EDGE_I, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[5][2]},
   {"Face", TIO_CENTRE_FACE_I, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_1d[5][3]}}};

// need to check nmixcell nmixcomp
chunkinfo chunk_1d = {TIO_1D, 0, 10, 0, 0, 0, 0, x, NULL, NULL, 2, 5};

meshinfo mesh_1d[] = {
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
   TIO_1D, 11, 0, 0, 0, 1, &chunk_1d, "xunits", "", "", "x axis", "", "", &mat_1d[0], 4, var_1d[0]},
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
   TIO_1D, 11, 0, 0, 0, 1, &chunk_1d, "xunits", "", "", "x axis", "", "", &mat_1d[1], 4, var_1d[1]},
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
   TIO_1D, 11, 0, 0, 0, 1, &chunk_1d, "xunits", "", "", "x axis", "", "", &mat_1d[2], 4, var_1d[2]},
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
   TIO_1D, 11, 0, 0, 0, 1, &chunk_1d, "xunits", "", "", "x axis", "", "", &mat_1d[3], 4, var_1d[3]},
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
   TIO_1D, 11, 0, 0, 0, 1, &chunk_1d, "xunits", "", "", "x axis", "", "", &mat_1d[4], 4, var_1d[4]},
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
   TIO_1D, 11, 0, 0, 0, 1, &chunk_1d, "xunits", "", "", "x axis", "", "", &mat_1d[5], 4, var_1d[5]}};

stateinfo state_1d[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_1d[0]},
  {"State001", 100, 1.03, "us", 1, &mesh_1d[1]},
  {"State002", 200, 2.03, "us", 1, &mesh_1d[2]},
  {"State003", 200, 3.03, "us", 1, &mesh_1d[3]},
  {"State004", 200, 4.03, "us", 1, &mesh_1d[4]},
  {"State005", 300, 5.03, "us", 1, &mesh_1d[5]}};
  
/******************************* 2D Dummy Data *******************************/

int material[][70] = {
  {  4,  4,  4,  3,  3,  2,  2, -1,  1,  1,
     4,  4,  4,  3,  3,  2,  2, -2,  1,  1,
     4,  4,  4,  3,  3,  2,  2, -3, -4, -5,
     4,  4,  4,  3,  3,  2,  2, -6,  3,  3,
     4,  4,  4,  3,  3,  2,  2, -7,  3,  3,
     4,  4,  4,  3,  3,  2,  2, -8,  3,  3,
     4,  4,  4,  3,  3,  2,  2, -9,  3,  3}};

int ncomp[9] = {2, 2, 3, 2, 2, 2, 2, 2, 2};
int ptr[9] = {1, 3, 5, 8, 10, 12, 14, 16, 18};
int mixmat[19] = {1, 2, 1, 2, 1, 2, 3, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3};
double vf[19] = {0.5, 0.5, 0.5, 0.5, 0.25, 0.5, 0.25, 0.5, 0.5, 0.5, 0.5,
                 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5};

double pressure[][70] = {
  {1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 2.0,
   2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 2.0,
   3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.5, 3.0, 3.0,
   4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 2.0, 4.0, 4.0,
   3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 2.0, 4.0, 4.0,
   2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 4.0, 4.0,
   1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 4.0, 4.0},
  {3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 2.0,
   4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 1.0, 2.0, 2.0,
   5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 1.5, 3.0, 3.0,
   6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 2.0, 4.0, 4.0,
   5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 2.0, 4.0, 4.0,
   4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 2.0, 4.0, 4.0,
   3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 2.0, 4.0, 4.0},
  {5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 1.0, 2.0, 2.0,
   6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 1.0, 2.0, 2.0,
   7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 1.5, 3.0, 3.0,
   8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 2.0, 4.0, 4.0,
   7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 2.0, 4.0, 4.0,
   6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 2.0, 4.0, 4.0,
   5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 2.0, 4.0, 4.0}};

double y_vel[][88] = {
  {2.0, 3.0, 4.0, 3.0, 2.0, 1.0, 2.0, 3.0, 4.0, 3.0, 2.0,
   1.0, 2.0, 3.0, 4.0, 3.0, 2.0, 3.0, 4.0, 3.0, 2.0, 1.0,
   0.0, 1.0, 2.0, 3.0, 4.0, 3.0, 4.0, 3.0, 2.0, 1.0, 0.0,
   0.0, 0.0, 1.0, 2.0, 3.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0,
   0.0, 0.0, 1.0, 2.0, 3.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0,
   0.0, 1.0, 2.0, 3.0, 4.0, 3.0, 4.0, 3.0, 2.0, 1.0, 0.0,
   1.0, 2.0, 3.0, 4.0, 3.0, 2.0, 3.0, 4.0, 3.0, 2.0, 1.0,
   2.0, 3.0, 4.0, 3.0, 2.0, 1.0, 2.0, 3.0, 4.0, 3.0, 2.0},
  {3.0, 4.0, 5.0, 4.0, 3.0, 2.0, 3.0, 4.0, 5.0, 4.0, 3.0,
   2.0, 3.0, 4.0, 5.0, 4.0, 3.0, 4.0, 5.0, 4.0, 3.0, 2.0,
   1.0, 2.0, 3.0, 4.0, 5.0, 4.0, 5.0, 4.0, 3.0, 2.0, 1.0,
   0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0,
   0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0,
   1.0, 2.0, 3.0, 4.0, 5.0, 4.0, 5.0, 4.0, 3.0, 2.0, 1.0,
   2.0, 3.0, 4.0, 5.0, 4.0, 3.0, 4.0, 5.0, 4.0, 3.0, 2.0,
   3.0, 4.0, 5.0, 4.0, 3.0, 2.0, 3.0, 4.0, 5.0, 4.0, 3.0},
  {4.0, 5.0, 6.0, 5.0, 4.0, 3.0, 4.0, 5.0, 6.0, 5.0, 4.0,
   3.0, 4.0, 5.0, 6.0, 5.0, 4.0, 5.0, 6.0, 5.0, 4.0, 3.0,
   2.0, 3.0, 4.0, 5.0, 6.0, 5.0, 6.0, 5.0, 4.0, 3.0, 2.0,
   1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0,
   1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0,
   2.0, 3.0, 4.0, 5.0, 6.0, 5.0, 6.0, 5.0, 4.0, 3.0, 2.0,
   3.0, 4.0, 5.0, 6.0, 5.0, 4.0, 5.0, 6.0, 5.0, 4.0, 3.0,
   4.0, 5.0, 6.0, 5.0, 4.0, 3.0, 4.0, 5.0, 6.0, 5.0, 4.0}};

double pmix[19] = {2.0, 0.0, 2.0, 0.0, 2.0, 0.0, 4.0, 2.0, 4.0, 2.0, 4.0,
                   0.0, 4.0, 0.0, 4.0, 0.0, 4.0, 0.0, 4.0};

matchunk matchunk_2d[] = {
  {material[0], ncomp, ptr, mixmat, vf},
  {material[0], ncomp, ptr, mixmat, vf},
  {material[0], ncomp, ptr, mixmat, vf}};

quantchunk var_chunk_2d[][2] = {
  {{pressure[0], pmix},
   {y_vel[0],    NULL}},
  {{pressure[1], pmix},
   {y_vel[1],    NULL}},
  {{pressure[2], pmix},
   {y_vel[2],    NULL}}};

matinfo mat_2d[] = {
  {"Material", 4, NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, &matchunk_2d[0]},
  {"Material", 4, NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, &matchunk_2d[1]},
  {"Material", 4, NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, &matchunk_2d[2]}};

quantinfo var_2d[][2] = {
  {{"pressure", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_TRUE,  "", 1, &var_chunk_2d[0][0]},
   {"Y vel",    TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_2d[0][1]}},
  {{"pressure", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_TRUE,  "", 1, &var_chunk_2d[1][0]},
   {"Y vel",    TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_2d[1][1]}},
  {{"pressure", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_TRUE,  "", 1, &var_chunk_2d[2][0]},
   {"Y vel",    TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_2d[2][1]}}};

chunkinfo chunk_2d = {TIO_2D, 0, 10, 0, 7, 0, 0, x, y, NULL, 9, 19};

meshinfo mesh_2d[] = {
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
   TIO_2D, 11, 8, 0, 0, 1, &chunk_2d,
   "zunits", "yunits", "", "x axis", "y axis", "", &mat_2d[0], 2, var_2d[0]},
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
   TIO_2D, 11, 8, 0, 0, 1, &chunk_2d,
   "xunits", "yunits", "", "x axis", "y axis", "", &mat_2d[1], 2, var_2d[1]},
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
   TIO_2D, 11, 8, 0, 0, 1, &chunk_2d,
   "xunits", "yunits", "", "x axis", "y axis", "", &mat_2d[2], 2, var_2d[2]}};

stateinfo state_2d[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_2d[0]},
  {"State001", 100, 1.02, "us", 1, &mesh_2d[1]},
  {"State002", 200, 2.02, "us", 1, &mesh_2d[2]}};

/******************************* 2D Chunked Dummy Data *******************************/

int m_chunk0[42] = {
     4,  4,  4,  4,  3,  3,  2,
     4,  4,  4,  4,  3,  3,  2,
     4,  4,  4,  4,  3,  3,  2,
     4,  4,  4,  4,  3,  3,  2,
     4,  4,  4,  4,  3,  3,  2,
     4,  4,  4,  4,  3,  3,  2};
int m_chunk1[42] = {
     3,  2,  2, -1,  1,  1,  1,
     3,  2,  2, -2,  1,  1,  1,
     3,  2,  2, -3,  1,  1,  1,
     3,  2,  2, -4, -5, -6, -7,
     3,  2,  2, -8,  3,  3,  3,
     3,  2,  2, -9,  3,  3,  3};
int m_chunk2[35] = {
     4,  4,  4,  4,  3,  3,  2,
     4,  4,  4,  4,  3,  3,  2,
     4,  4,  4,  4,  3,  3,  2,
     4,  4,  4,  4,  3,  3,  2,
     4,  4,  4,  4,  3,  3,  2};
int m_chunk3[35] = {
     3,  2,  2, -1,  3,  3,  3,
     3,  2,  2, -2,  3,  3,  3,
     3,  2,  2, -3,  3,  3,  3,
     3,  2,  2, -4,  3,  3,  3,
     3,  2,  2, -5,  3,  3,  3};

int n_chunk1[9] = {2, 2, 2, 3, 2, 2, 2, 2, 2};
int n_chunk3[5] = {2, 2, 2, 2, 2};

int c_ptr1[9] = {1, 3, 5, 7, 10, 12, 14, 16, 18};
int c_ptr3[5] = {1, 3, 5, 7, 9};

int c_mixmat1[19] = {1, 2, 1, 2, 1, 2, 1, 2, 3, 1, 3, 1, 3, 1, 3, 2, 3, 2, 3};
int c_mixmat3[10] = {2, 3, 2, 3, 2, 3, 2, 3, 2, 3};

double c_vf1[19] = {0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.25, 0.5, 0.25, 0.5, 0.5, 0.5, 0.5,
                    0.5, 0.5, 0.5, 0.5, 0.5, 0.5};
double c_vf3[10] = {0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5};

double p_chunk0[][42] = {
  {1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
   2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0,
   3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0,
   4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0,
   5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0,
   4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0},
  {3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0,
   4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0,
   5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0,
   6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0,
   7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0,
   6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0},
  {5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0,
   6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0,
   7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0,
   8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0,
   9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0,
   8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0}};
   
double p_chunk1[][42] = {   
  {0.0, 0.0, 0.0, 1.0, 2.0, 2.0, 2.0,
   0.0, 0.0, 0.0, 1.0, 2.0, 2.0, 2.0,
   0.0, 0.0, 0.0, 1.0, 2.0, 2.0, 2.0,
   0.0, 0.0, 0.0, 1.5, 3.0, 3.0, 3.0,
   0.0, 0.0, 0.0, 2.0, 4.0, 4.0, 4.0,
   0.0, 0.0, 0.0, 2.0, 4.0, 4.0, 4.0},
  {0.0, 0.0, 0.0, 1.0, 2.0, 2.0, 2.0,
   0.0, 0.0, 0.0, 1.0, 2.0, 2.0, 2.0,
   0.0, 0.0, 0.0, 1.0, 2.0, 2.0, 2.0,
   1.0, 0.0, 0.0, 1.5, 3.0, 3.0, 3.0,
   2.0, 1.0, 0.0, 2.0, 4.0, 4.0, 4.0,
   1.0, 0.0, 0.0, 2.0, 4.0, 4.0, 4.0},
  {0.0, 0.0, 0.0, 1.0, 2.0, 2.0, 2.0,
   1.0, 0.0, 0.0, 1.0, 2.0, 2.0, 2.0,
   2.0, 1.0, 0.0, 1.0, 2.0, 2.0, 2.0,
   3.0, 2.0, 1.0, 1.5, 3.0, 3.0, 3.0,
   4.0, 3.0, 2.0, 2.0, 4.0, 4.0, 4.0,
   3.0, 2.0, 1.0, 2.0, 4.0, 4.0, 4.0}};

double p_chunk2[][35] = {
  {5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0,
   4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0,
   3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0,
   2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0,
   1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
  {7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0,
   6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0,
   5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0,
   4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0,
   3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0},
  {9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0,
   8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0,
   7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0,
   6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0,
   5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0}};

double p_chunk3[][35] = {
  {0.0, 0.0, 0.0, 2.0, 4.0, 4.0, 4.0,
   0.0, 0.0, 0.0, 2.0, 4.0, 4.0, 4.0,
   0.0, 0.0, 0.0, 2.0, 4.0, 4.0, 4.0,
   0.0, 0.0, 0.0, 2.0, 4.0, 4.0, 4.0,
   0.0, 0.0, 0.0, 2.0, 4.0, 4.0, 4.0},
  {2.0, 1.0, 0.0, 2.0, 4.0, 4.0, 4.0,
   1.0, 0.0, 0.0, 2.0, 4.0, 4.0, 4.0,
   0.0, 0.0, 0.0, 2.0, 4.0, 4.0, 4.0,
   0.0, 0.0, 0.0, 2.0, 4.0, 4.0, 4.0,
   0.0, 0.0, 0.0, 2.0, 4.0, 4.0, 4.0},
  {4.0, 3.0, 2.0, 2.0, 4.0, 4.0, 4.0,
   3.0, 2.0, 1.0, 2.0, 4.0, 4.0, 4.0,
   2.0, 1.0, 0.0, 2.0, 4.0, 4.0, 4.0,
   1.0, 0.0, 0.0, 2.0, 4.0, 4.0, 4.0,
   0.0, 0.0, 0.0, 2.0, 4.0, 4.0, 4.0}};

double v_chunk0[][56] = {
  {2.0, 3.0, 4.0, 3.0, 2.0, 1.0, 0.0, 1.0,
   1.0, 2.0, 3.0, 4.0, 3.0, 2.0, 1.0, 2.0,
   0.0, 1.0, 2.0, 3.0, 4.0, 3.0, 2.0, 3.0,
   0.0, 0.0, 1.0, 2.0, 3.0, 4.0, 3.0, 4.0,
   0.0, 0.0, 0.0, 1.0, 2.0, 3.0, 4.0, 3.0,
   0.0, 0.0, 0.0, 1.0, 2.0, 3.0, 4.0, 3.0,
   0.0, 0.0, 1.0, 2.0, 3.0, 4.0, 3.0, 4.0},
  {3.0, 4.0, 5.0, 4.0, 3.0, 2.0, 1.0, 2.0, 
   2.0, 3.0, 4.0, 5.0, 4.0, 3.0, 2.0, 3.0,
   1.0, 2.0, 3.0, 4.0, 5.0, 4.0, 3.0, 4.0,
   0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 4.0, 5.0,
   0.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 4.0,
   0.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 4.0,
   0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 4.0, 5.0},
  {4.0, 5.0, 6.0, 5.0, 4.0, 3.0, 2.0, 3.0, 
   3.0, 4.0, 5.0, 6.0, 5.0, 4.0, 3.0, 4.0,
   2.0, 3.0, 4.0, 5.0, 6.0, 5.0, 4.0, 5.0,
   1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 5.0, 6.0,
   0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 5.0,
   0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 5.0,
   1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 5.0, 6.0}};
double v_chunk1[][56] = {
  {1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 3.0, 2.0,
   2.0, 1.0, 2.0, 3.0, 4.0, 3.0, 2.0, 1.0,
   3.0, 2.0, 3.0, 4.0, 3.0, 2.0, 1.0, 0.0,
   4.0, 3.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0,
   3.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0,
   3.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0,
   4.0, 3.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0},
  {2.0, 1.0, 2.0, 3.0, 4.0, 5.0, 4.0, 3.0, 
   3.0, 2.0, 3.0, 4.0, 5.0, 4.0, 3.0, 2.0,
   4.0, 3.0, 4.0, 5.0, 4.0, 3.0, 2.0, 1.0,
   5.0, 4.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0,
   4.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0,
   4.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0,
   5.0, 4.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0},
  {3.0, 2.0, 3.0, 4.0, 5.0, 6.0, 5.0, 4.0, 
   4.0, 3.0, 4.0, 5.0, 6.0, 5.0, 4.0, 3.0,
   5.0, 4.0, 5.0, 6.0, 5.0, 4.0, 3.0, 2.0,
   6.0, 5.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0,
   5.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0,
   5.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0,
   6.0, 5.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0}};
double v_chunk2[][48] = {
  {0.0, 0.0, 0.0, 1.0, 2.0, 3.0, 4.0, 3.0,
   0.0, 0.0, 0.0, 1.0, 2.0, 3.0, 4.0, 3.0,
   0.0, 0.0, 1.0, 2.0, 3.0, 4.0, 3.0, 4.0,
   0.0, 1.0, 2.0, 3.0, 4.0, 3.0, 2.0, 3.0,
   1.0, 2.0, 3.0, 4.0, 3.0, 2.0, 1.0, 2.0,
   2.0, 3.0, 4.0, 3.0, 2.0, 1.0, 0.0, 1.0},
  {0.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 4.0,
   0.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 4.0,
   0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 4.0, 5.0,
   1.0, 2.0, 3.0, 4.0, 5.0, 4.0, 3.0, 4.0,
   2.0, 3.0, 4.0, 5.0, 4.0, 3.0, 2.0, 3.0,
   3.0, 4.0, 5.0, 4.0, 3.0, 2.0, 1.0, 2.0},
  {0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 5.0,
   0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 5.0,
   1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 5.0, 6.0,
   2.0, 3.0, 4.0, 5.0, 6.0, 5.0, 4.0, 5.0,
   3.0, 4.0, 5.0, 6.0, 5.0, 4.0, 3.0, 4.0,
   4.0, 5.0, 6.0, 5.0, 4.0, 3.0, 2.0, 3.0}};
double v_chunk3[][48] = {
  { 3.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0,
    3.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0,
    4.0, 3.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0,
    3.0, 2.0, 3.0, 4.0, 3.0, 2.0, 1.0, 0.0,
    2.0, 1.0, 2.0, 3.0, 4.0, 3.0, 2.0, 1.0,
    1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 3.0, 2.0},
  { 4.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0,
    4.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0,
    5.0, 4.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0,
    4.0, 3.0, 4.0, 5.0, 4.0, 3.0, 2.0, 1.0,
    3.0, 2.0, 3.0, 4.0, 5.0, 4.0, 3.0, 2.0,
    2.0, 1.0, 2.0, 3.0, 4.0, 5.0, 4.0, 3.0},
  { 5.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0,
    5.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0,
    6.0, 5.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0,
    5.0, 4.0, 5.0, 6.0, 5.0, 4.0, 3.0, 2.0,
    4.0, 3.0, 4.0, 5.0, 6.0, 5.0, 4.0, 3.0,
    3.0, 2.0, 3.0, 4.0, 5.0, 6.0, 5.0, 4.0}};

double c_pmix1[19] = {2.0, 0.0, 2.0, 0.0, 2.0, 0.0, 2.0, 0.0, 4.0, 2.0, 4.0,
                      2.0, 4.0, 2.0, 4.0, 0.0, 4.0, 0.0, 4.0};
double c_pmix3[10] = {0.0, 4.0, 0.0, 4.0, 0.0, 4.0, 0.0, 4.0, 0.0, 4.0};

/* Generated in IDL
  ; node range for chunks
  c0 = [0, 5,  0, 4, 0, 0]
  c1 = [5, 10, 0, 4, 0, 0]
  c2 = [0, 5,  4, 7, 0, 0]
  c3 = [5, 10, 4, 7, 0, 0]
  ng = 1

  c=c3
  xedge = dblarr(c[1]-c[0] + 2*ng, 1 + c[3]-c[2] + 2*ng)
  for i = 0, c[1]-c[0] - 1 + 2*ng do for j = 0, c[3]-c[2] + 2*ng do $
    xedge[i, j] = (i + c[0] - ng) + (j + c[2] - ng) / 100.0
*/

double ex_chunk0[] = {
/*
  print, xedge, format = '(7(F8.4, :,  ","))'
*/
 -1.0100, -0.0100,  0.9900,  1.9900,  2.9900,  3.9900,  4.9900,
 -1.0000,  0.0000,  1.0000,  2.0000,  3.0000,  4.0000,  5.0000,
 -0.9900,  0.0100,  1.0100,  2.0100,  3.0100,  4.0100,  5.0100,
 -0.9800,  0.0200,  1.0200,  2.0200,  3.0200,  4.0200,  5.0200,
 -0.9700,  0.0300,  1.0300,  2.0300,  3.0300,  4.0300,  5.0300,
 -0.9600,  0.0400,  1.0400,  2.0400,  3.0400,  4.0400,  5.0400,
 -0.9500,  0.0500,  1.0500,  2.0500,  3.0500,  4.0500,  5.0500
};

double ex_chunk1[] = {
/*
  print, xedge, format = '(7(F8.4, :,  ","))'
*/
  3.9900,  4.9900,  5.9900,  6.9900,  7.9900,  8.9900,  9.9900,
  4.0000,  5.0000,  6.0000,  7.0000,  8.0000,  9.0000, 10.0000,
  4.0100,  5.0100,  6.0100,  7.0100,  8.0100,  9.0100, 10.0100,
  4.0200,  5.0200,  6.0200,  7.0200,  8.0200,  9.0200, 10.0200,
  4.0300,  5.0300,  6.0300,  7.0300,  8.0300,  9.0300, 10.0300,
  4.0400,  5.0400,  6.0400,  7.0400,  8.0400,  9.0400, 10.0400,
  4.0500,  5.0500,  6.0500,  7.0500,  8.0500,  9.0500, 10.0500
};

double ex_chunk2[] = {
/*
  print, xedge, format = '(7(F8.4, :,  ","))'
*/
 -0.9700,  0.0300,  1.0300,  2.0300,  3.0300,  4.0300,  5.0300,
 -0.9600,  0.0400,  1.0400,  2.0400,  3.0400,  4.0400,  5.0400,
 -0.9500,  0.0500,  1.0500,  2.0500,  3.0500,  4.0500,  5.0500,
 -0.9400,  0.0600,  1.0600,  2.0600,  3.0600,  4.0600,  5.0600,
 -0.9300,  0.0700,  1.0700,  2.0700,  3.0700,  4.0700,  5.0700,
 -0.9200,  0.0800,  1.0800,  2.0800,  3.0800,  4.0800,  5.0800
};

double ex_chunk3[] = {
/*
  print, xedge, format = '(7(F8.4, :,  ","))'
*/
  4.0300,  5.0300,  6.0300,  7.0300,  8.0300,  9.0300, 10.0300,
  4.0400,  5.0400,  6.0400,  7.0400,  8.0400,  9.0400, 10.0400,
  4.0500,  5.0500,  6.0500,  7.0500,  8.0500,  9.0500, 10.0500,
  4.0600,  5.0600,  6.0600,  7.0600,  8.0600,  9.0600, 10.0600,
  4.0700,  5.0700,  6.0700,  7.0700,  8.0700,  9.0700, 10.0700,
  4.0800,  5.0800,  6.0800,  7.0800,  8.0800,  9.0800, 10.0800
};

/* Generated in IDL

  c=c3
  yedge = dblarr(1 + c[1]-c[0] + 2*ng, c[3]-c[2] + 2*ng)
  for i = 0, c[1]-c[0] + 2*ng do for j = 0, c[3]-c[2] - 1 + 2*ng do $
    yedge[i, j] = (i + c[0] - ng) / 100.0 + (j + c[2] - ng)
  print, yedge, format = '(8(F8.4, :,  ","))'
*/

double ey_chunk0[] = {
/*
  print, yedge, format = '(8(F8.4, :,  ","))'
*/
 -1.0100, -1.0000, -0.9900, -0.9800, -0.9700, -0.9600, -0.9500, -0.9400,
 -0.0100,  0.0000,  0.0100,  0.0200,  0.0300,  0.0400,  0.0500,  0.0600,
  0.9900,  1.0000,  1.0100,  1.0200,  1.0300,  1.0400,  1.0500,  1.0600,
  1.9900,  2.0000,  2.0100,  2.0200,  2.0300,  2.0400,  2.0500,  2.0600,
  2.9900,  3.0000,  3.0100,  3.0200,  3.0300,  3.0400,  3.0500,  3.0600,
  3.9900,  4.0000,  4.0100,  4.0200,  4.0300,  4.0400,  4.0500,  4.0600
};

double ey_chunk1[] = {
/*
  print, yedge, format = '(8(F8.4, :,  ","))'
*/
 -0.9600, -0.9500, -0.9400, -0.9300, -0.9200, -0.9100, -0.9000, -0.8900,
  0.0400,  0.0500,  0.0600,  0.0700,  0.0800,  0.0900,  0.1000,  0.1100,
  1.0400,  1.0500,  1.0600,  1.0700,  1.0800,  1.0900,  1.1000,  1.1100,
  2.0400,  2.0500,  2.0600,  2.0700,  2.0800,  2.0900,  2.1000,  2.1100,
  3.0400,  3.0500,  3.0600,  3.0700,  3.0800,  3.0900,  3.1000,  3.1100,
  4.0400,  4.0500,  4.0600,  4.0700,  4.0800,  4.0900,  4.1000,  4.1100
};

double ey_chunk2[] = {
/*
  print, yedge, format = '(8(F8.4, :,  ","))'
*/
  2.9900,  3.0000,  3.0100,  3.0200,  3.0300,  3.0400,  3.0500,  3.0600,
  3.9900,  4.0000,  4.0100,  4.0200,  4.0300,  4.0400,  4.0500,  4.0600,
  4.9900,  5.0000,  5.0100,  5.0200,  5.0300,  5.0400,  5.0500,  5.0600,
  5.9900,  6.0000,  6.0100,  6.0200,  6.0300,  6.0400,  6.0500,  6.0600,
  6.9900,  7.0000,  7.0100,  7.0200,  7.0300,  7.0400,  7.0500,  7.0600
};

double ey_chunk3[] = {
/*
  print, yedge, format = '(8(F8.4, :,  ","))'
*/
  3.0400,  3.0500,  3.0600,  3.0700,  3.0800,  3.0900,  3.1000,  3.1100,
  4.0400,  4.0500,  4.0600,  4.0700,  4.0800,  4.0900,  4.1000,  4.1100,
  5.0400,  5.0500,  5.0600,  5.0700,  5.0800,  5.0900,  5.1000,  5.1100,
  6.0400,  6.0500,  6.0600,  6.0700,  6.0800,  6.0900,  6.1000,  6.1100,
  7.0400,  7.0500,  7.0600,  7.0700,  7.0800,  7.0900,  7.1000,  7.1100
};

// zedge == nodal, xface == yedge, yface == xedge, zface == cell

matchunk matchunk_2d_c[] = {
  {m_chunk0, NULL, NULL, NULL, NULL},
  {m_chunk1, n_chunk1, c_ptr1, c_mixmat1, c_vf1},
  {m_chunk2, NULL, NULL, NULL, NULL},
  {m_chunk3, n_chunk3, c_ptr3, c_mixmat3, c_vf3}};

quantchunk var_chunk4_2d[][4][4] = {
  {{{p_chunk0[0], NULL},
    {p_chunk1[0], c_pmix1},
    {p_chunk2[0], NULL},
    {p_chunk3[0], c_pmix3}},
   {{v_chunk0[0], NULL},
    {v_chunk1[0], NULL},
    {v_chunk2[0], NULL},
    {v_chunk3[0], NULL}},
   {{ex_chunk0, NULL},
    {ex_chunk1, NULL},
    {ex_chunk2, NULL},
    {ex_chunk3, NULL}},
   {{ey_chunk0, NULL},
    {ey_chunk1, NULL},
    {ey_chunk2, NULL},
    {ey_chunk3, NULL}}},
   {{{p_chunk0[1], NULL},
    {p_chunk1[1], c_pmix1},
    {p_chunk2[1], NULL},
    {p_chunk3[1], c_pmix3}},
   {{v_chunk0[1], NULL},
    {v_chunk1[1], NULL},
    {v_chunk2[1], NULL},
    {v_chunk3[1], NULL}},
   {{ex_chunk0, NULL},
    {ex_chunk1, NULL},
    {ex_chunk2, NULL},
    {ex_chunk3, NULL}},
   {{ey_chunk0, NULL},
    {ey_chunk1, NULL},
    {ey_chunk2, NULL},
    {ey_chunk3, NULL}}},
  {{{p_chunk0[2], NULL},
    {p_chunk1[2], c_pmix1},
    {p_chunk2[2], NULL},
    {p_chunk3[2], c_pmix3}},
   {{v_chunk0[2], NULL},
    {v_chunk1[2], NULL},
    {v_chunk2[2], NULL},
    {v_chunk3[2], NULL}},
   {{ex_chunk0, NULL},
    {ex_chunk1, NULL},
    {ex_chunk2, NULL},
    {ex_chunk3, NULL}},
   {{ey_chunk0, NULL},
    {ey_chunk1, NULL},
    {ey_chunk2, NULL},
    {ey_chunk3, NULL}}}};

matinfo mat_2d_c[] = {
  {"Material", 4, NULL, 1, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 4, matchunk_2d_c},
  {"Material", 4, NULL, 1, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 4, matchunk_2d_c},
  {"Material", 4, NULL, 1, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 4, matchunk_2d_c}};

quantinfo var_2d_c[][4] = {
  {{"pressure", TIO_CENTRE_CELL, 1, TIO_TRUE,  "", 4, var_chunk4_2d[0][0]},
   {"Y vel",    TIO_CENTRE_NODE, 1, TIO_FALSE, "", 4, var_chunk4_2d[0][1]},
   {"XEdge",  TIO_CENTRE_EDGE_I, 1, TIO_FALSE, "", 4, var_chunk4_2d[0][2]},
   {"YEdge",  TIO_CENTRE_EDGE_J, 1, TIO_FALSE, "", 4, var_chunk4_2d[0][3]}},
  {{"pressure", TIO_CENTRE_CELL, 1, TIO_TRUE,  "", 4, var_chunk4_2d[1][0]},
   {"Y vel",    TIO_CENTRE_NODE, 1, TIO_FALSE, "", 4, var_chunk4_2d[1][1]},
   {"XEdge",  TIO_CENTRE_EDGE_I, 1, TIO_FALSE, "", 4, var_chunk4_2d[1][2]},
   {"YEdge",  TIO_CENTRE_EDGE_J, 1, TIO_FALSE, "", 4, var_chunk4_2d[1][3]}},
  {{"pressure", TIO_CENTRE_CELL, 1, TIO_TRUE,  "", 4, var_chunk4_2d[2][0]},
   {"Y vel",    TIO_CENTRE_NODE, 1, TIO_FALSE, "", 4, var_chunk4_2d[2][1]},
   {"XEdge",  TIO_CENTRE_EDGE_I, 1, TIO_FALSE, "", 4, var_chunk4_2d[2][2]},
   {"YEdge",  TIO_CENTRE_EDGE_J, 1, TIO_FALSE, "", 4, var_chunk4_2d[2][3]}}};

// Colinear so uses coords in first chunk
chunkinfo chunk_2d_c[] = {
  {TIO_2D, 0,  5, 0, 4, 0, 0, x, y, NULL, 0, 0},
  {TIO_2D, 5, 10, 0, 4, 0, 0, x, y, NULL, 9, 19},
  {TIO_2D, 0,  5, 4, 7, 0, 0, x, y, NULL, 0, 0},
  {TIO_2D, 5, 10, 4, 7, 0, 0, x, y, NULL, 5, 10}};

meshinfo mesh_2d_c[] = {
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
    TIO_2D, 11, 8, 0, 0, 4, chunk_2d_c,
   "xunits", "yunits", "", "x axis", "y axis", "", &mat_2d_c[0], 4, var_2d_c[0]},
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
    TIO_2D, 11, 8, 0, 0, 4, chunk_2d_c,
   "xunits", "yunits", "", "x axis", "y axis", "", &mat_2d_c[1], 4, var_2d_c[1]},
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
    TIO_2D, 11, 8, 0, 0, 4, chunk_2d_c,
   "xunits", "yunits", "", "x axis", "y axis", "", &mat_2d_c[2], 4, var_2d_c[2]}};

stateinfo state_2d_c[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_2d_c[0]},
  {"State001", 100, 1.02, "us", 1, &mesh_2d_c[1]},
  {"State002", 200, 2.02, "us", 1, &mesh_2d_c[2]}};

/******************************* 2D AMR Dummy Data *******************************/

int m_amr_l1[6] =
  {-1, -2, -3,
   -4, -5, -6};
int ncomp_amr_l1[6]   = {3, 3, 3, 2, 2, 2};
int ptr_amr_l1[6]     = {1, 4, 7, 10, 12, 14};
int mixmat_amr_l1[15] = {1, 2, 3, 1, 2, 3, 1, 2, 3, 3, 4, 3, 4, 3, 4};
double vf_amr_l1[15]  = {0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5,
                         0.125, 0.875, 0.125, 0.875, 0.125, 0.875}; 

int m_amr_l2p1[8] =
  {-1, -2, -3, -4,
   3, 3, 3, 3};
int ncomp_amr_l2p1[4]   = {2, 2, 2, 2};
int ptr_amr_l2p1[4]     = {1, 3, 5, 7};
int mixmat_amr_l2p1[8] = {1, 2, 1, 2, 1, 2, 1, 2};
double vf_amr_l2p1[8]  = {0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5};
   
int m_amr_l2p2[4] =
  {-1, -2,
    4, 4};
int ncomp_amr_l2p2[2]   = {2, 2};
int ptr_amr_l2p2[2]     = {1, 3};
int mixmat_amr_l2p2[4] = {3, 4, 3, 4};
double vf_amr_l2p2[4]  = {0.25, 0.75, 0.25, 0.75};

int m_amr_l3p1[12] =
  {1, 1, 1, 1, 1, 1,
   2, 2, 2, 2, 2, 2};
  
int m_amr_l3p2[4] =
  {-1, -2,
   4, 4};
int ncomp_amr_l3p2[2]  = {2, 2};
int ptr_amr_l3p2[2]    = {1, 3};
int mixmat_amr_l3p2[4] = {3, 4, 3, 4};
double vf_amr_l3p2[4]  = {0.5, 0.5, 0.5, 0.5}; 

int m_amr_l3p3[4] =  
  {4, 4,
   4, 4};

double p_amr_l1[6] =
  {6.625, 6.625, 6.625,
   1.25 , 1.25 , 1.25};
double pmix_amr_l1[15] = {1.5, 5.0, 10.0, 1.5, 5.0, 10.0, 1.5, 5.0, 10.0, 10.0, 
                          0.0, 10.0, 0.0, 10.0, 0.0};
   
double p_amr_l2p1[8] =
  {3.25, 3.25, 3.25, 3.25,
   10.0, 10.0, 10.0, 10.0};
double pmix_amr_l2p1[8] = {1.5, 5.0, 1.5, 5.0, 1.5, 5.0, 1.5, 5.0};
   
double p_amr_l2p2[4] =
  {2.5, 2.5,
   0.0, 0.0};
double pmix_amr_l2p2[4] = {10.0, 0.0, 10.0, 0.0};

double p_amr_l3p1[12] =
  {1.5, 1.5, 1.5, 1.5, 1.5, 1.5,
   5.0, 5.0, 5.0, 5.0, 5.0, 5.0};
  
double p_amr_l3p2[4] =
  {5.0, 5.0,
   0.0, 0.0};
double pmix_amr_l3p2[4] = {10.0, 0.0, 10.0, 0.0};

double p_amr_l3p3[4] =  
  {0.0, 0.0,
   0.0, 0.0};

double v_amr_l1[12] =
  {0.5, 1.5, 2.5, 3.5,
   0.5, 1.5, 2.5, 3.5,
   0.5, 1.5, 2.5, 3.5};

double v_amr_l2p1[15] =
  {0.5, 1.0, 1.5, 2.0, 2.5,
   0.5, 1.0, 1.5, 2.0, 2.5,
   0.5, 1.0, 1.5, 2.0, 2.5};

double v_amr_l2p2[9] =
  {2.5, 3.0, 3.5,
   2.5, 3.0, 3.5,
   2.5, 3.0, 3.5};

double v_amr_l3p1[21] =
  {0.5, 0.75, 1.0, 1.25, 1.5, 1.75, 2.0,
   0.5, 0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 
   0.5, 0.75, 1.0, 1.25, 1.5, 1.75, 2.0};

double v_amr_l3p2[9] =
  {2.5, 2.75, 3.0,
   2.5, 2.75, 3.0,
   2.5, 2.75, 3.0};
double v_amr_l3p3[9] =
  {3.0, 3.25, 3.5,
   3.0, 3.25, 3.5,
   3.0, 3.25, 3.5};

matchunk matchunk_2d_amr_l1[] = {
  {m_amr_l1, ncomp_amr_l1, ptr_amr_l1, mixmat_amr_l1, vf_amr_l1}};
matchunk matchunk_2d_amr_l2[] = {
  {m_amr_l2p1, ncomp_amr_l2p1, ptr_amr_l2p1, mixmat_amr_l2p1, vf_amr_l2p1},
  {m_amr_l2p2, ncomp_amr_l2p2, ptr_amr_l2p2, mixmat_amr_l2p2, vf_amr_l2p2}};
matchunk matchunk_2d_amr_l3[] = {
  {m_amr_l3p1, NULL, NULL, NULL, NULL},
  {m_amr_l3p2, ncomp_amr_l3p2, ptr_amr_l3p2, mixmat_amr_l3p2, vf_amr_l3p2},
  {m_amr_l3p3, NULL, NULL, NULL, NULL}};

quantchunk amr_l1_chunk[][1] = {
  {{p_amr_l1, pmix_amr_l1}},
  {{v_amr_l1, NULL}}};

quantchunk amr_l2_chunk[][2] = {
  {{p_amr_l2p1, pmix_amr_l2p1},
   {p_amr_l2p2, pmix_amr_l2p2}},
  {{v_amr_l2p1, NULL},
   {v_amr_l2p2, NULL}}};

quantchunk amr_l3_chunk[][3] = {
  {{p_amr_l3p1, NULL},
   {p_amr_l3p2, pmix_amr_l3p2},
   {p_amr_l3p3, NULL}},
  {{v_amr_l3p1, NULL},
   {v_amr_l3p2, NULL},
   {v_amr_l3p3, NULL}}};

matinfo mat_amr_l1 = {"Material", 4,  NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, matchunk_2d_amr_l1};
matinfo mat_amr_l2 = {"Material", 4,  NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 2, matchunk_2d_amr_l2};
matinfo mat_amr_l3 = {"Material", 4,  NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 3, matchunk_2d_amr_l3};
matinfo mat_amr_l2A = {"Material", 4, NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, matchunk_2d_amr_l2};
matinfo mat_amr_l3A = {"Material", 4, NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, matchunk_2d_amr_l3};

quantinfo var_amr_l1[] = {
  {"pressure", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_TRUE,  "", 1 , amr_l1_chunk[0]},
  {"Y vel",    TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1 , amr_l1_chunk[1]}};
quantinfo var_amr_l2[] = {
  {"pressure", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_TRUE,  "", 2, amr_l2_chunk[0]},
  {"Y vel",    TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 2, amr_l2_chunk[1]}};
quantinfo var_amr_l3[] = {
  {"pressure", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_TRUE,  "", 3, amr_l3_chunk[0]},
  {"Y vel",    TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 3, amr_l3_chunk[1]}};
quantinfo var_amr_l2A[] = {
  {"pressure", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_TRUE,  "", 1, amr_l2_chunk[0]},
  {"Y vel",    TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, amr_l2_chunk[1]}};
quantinfo var_amr_l3A[] = {
  {"pressure", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_TRUE,  "", 1, amr_l3_chunk[0]},
  {"Y vel",    TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, amr_l3_chunk[1]}};
   
double xamr_l1[4]  = {-6.0,                   -2.0,                 2.0,                6.0};
double xamr_l2[7]  = {-6.0,       -4.0,       -2.0,       0.0,      2.0,      4.0,      6.0};
double xamr_l3[13] = {-6.0, -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0};
double yamr_l1[3] =  {0.0,                4.0,                8.0};
double yamr_l2[5] =  {0.0,      2.0,      4.0,      6.0,      8.0};
double yamr_l3[9] =  {0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0};

// Colinear so uses coords in first chunk
chunkinfo chunk_2d_amr_l1[] = {{TIO_2D, 0,  3, 0, 2, 0, 0, xamr_l1, yamr_l1, NULL, 6, 15}};
chunkinfo chunk_2d_amr_l2[] = {
  {TIO_2D, 0, 4, 0, 2, 0, 0, xamr_l2, yamr_l2, NULL, 4, 8},
  {TIO_2D, 4, 6, 2, 4, 0, 0, xamr_l2, yamr_l2, NULL, 2, 4}};
chunkinfo chunk_2d_amr_l3[] = {
  {TIO_2D, 0,  6, 0, 2, 0, 0, xamr_l3, yamr_l3, NULL, 0, 0},
  {TIO_2D, 8, 10, 4, 6, 0, 0, xamr_l3, yamr_l3, NULL, 2, 4},
  {TIO_2D, 10,12, 6, 8, 0, 0, xamr_l3, yamr_l3, NULL, 0, 0}};

meshinfo mesh_2d_amr[][3] = {
  {{"Level 1", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_TRUE, "amr", 1,
    TIO_2D, 4, 3, 0, 0, 1, chunk_2d_amr_l1, "xunits", "yunits", "", "x axis",
    "y axis", "", &mat_amr_l1, 2, var_amr_l1},
   {"Level 2", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_TRUE, "amr", 2,
    TIO_2D, 7, 5, 0, 0, 2, chunk_2d_amr_l2, "xunits", "yunits", "", "x axis",
    "y axis", "", &mat_amr_l2, 2, var_amr_l2},
   {"Level 3", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_TRUE, "amr", 4,
    TIO_2D, 13, 9, 0, 0, 3, chunk_2d_amr_l3, "xunits", "yunits", "", "x axis",
    "y axis", "", &mat_amr_l3, 2,var_amr_l3}},
// only 1 patch per level
  {{"Level 1", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_TRUE, "amr", 1,
    TIO_2D, 4, 3, 0, 0, 1, chunk_2d_amr_l1, "xunits", "yunits", "", "x axis",
    "y axis", "", &mat_amr_l1, 2, var_amr_l1},
   {"Level 2", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_TRUE, "amr", 2,
    TIO_2D, 7, 5, 0, 0, 1, chunk_2d_amr_l2, "xunits", "yunits", "", "x axis",
    "y axis", "", &mat_amr_l2A, 2, var_amr_l2A},
   {"Level 3", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_TRUE, "amr", 4,
    TIO_2D, 13, 9, 0, 0, 1, chunk_2d_amr_l3, "xunits", "yunits", "", "x axis",
    "y axis", "", &mat_amr_l3A, 2,var_amr_l3A}}};
    
    
stateinfo state_2d_amr[] = {
  {"State000", 0,   0.0, "us",  2, mesh_2d_amr[1]},  // level 1 + patch 1 level 2
  {"State001", 10,  0.5, "us",  3, mesh_2d_amr[1]},  // first patch on all levels
  {"State002", 20,  1.0, "us",  3, mesh_2d_amr[0]},  // all levels & patches
  {"State003", 30,  1.5, "us",  1, mesh_2d_amr[0]},  // only use level 1
  {"State004", 40,  2.0, "us",  3, mesh_2d_amr[0]},  // all levels & patches
  {"State005", 50,  2.5, "us",  3, mesh_2d_amr[1]},  // first patch on all levels
  {"State006", 60,  3.0, "us",  2, mesh_2d_amr[1]}}; // level 1 + patch 1 level 2

/*************************** 2D AMR Ratio 4 Dummy Data ***************************/

int m_amr_r4_l2p1[32] =
  {1, 1, 1, 1, 1, 1, 1, 1,
   2, 2, 2, 2, 2, 2, 2, 2,
   3, 3, 3, 3, 3, 3, 3, 3,
   3, 3, 3, 3, 3, 3, 3, 3};
  
int m_amr_r4_l2p2[16] =
  {-1,-2,-3,-4,
   4, 4, 4, 4,
   4, 4, 4, 4,
   4, 4, 4, 4};
int ncomp_amr_r4_l2p2[4]  = {2, 2, 2, 2};
int ptr_amr_r4_l2p2[4]    = {1, 3, 5, 7};
int mixmat_amr_r4_l2p2[8] = {3, 4, 3, 4, 3, 4, 3, 4};
double vf_amr_r4_l2p2[8]  = {0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5}; 

double p_amr_r4_l2p1[32] =
  {1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5,
   5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
  10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,
  10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0};
  
double p_amr_r4_l2p2[16] =
  {5.0, 5.0, 5.0, 5.0,
   0.0, 0.0, 0.0, 0.0,
   0.0, 0.0, 0.0, 0.0,
   0.0, 0.0, 0.0, 0.0};
double pmix_amr_r4_l2p2[8] = {10.0, 0.0, 10.0, 0.0, 10.0, 0.0, 10.0, 0.0};

double v_amr_r4_l2p1[45] =
  {0.5, 0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
   0.5, 0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
   0.5, 0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
   0.5, 0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
   0.5, 0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5};

double v_amr_r4_l2p2[25] =
  {2.5, 2.75, 3.0, 3.25, 3.5,
   2.5, 2.75, 3.0, 3.25, 3.5,
   2.5, 2.75, 3.0, 3.25, 3.5,
   2.5, 2.75, 3.0, 3.25, 3.5,
   2.5, 2.75, 3.0, 3.25, 3.5};

matchunk matchunk_2d_amr_r4_l2[] = {
  {m_amr_r4_l2p1, NULL, NULL, NULL, NULL},
  {m_amr_r4_l2p2, ncomp_amr_r4_l2p2, ptr_amr_r4_l2p2, mixmat_amr_r4_l2p2, vf_amr_r4_l2p2}};

quantchunk amr_r4_l2_chunk[][2] = {
  {{p_amr_r4_l2p1, NULL},
   {p_amr_r4_l2p2, pmix_amr_r4_l2p2}},
  {{v_amr_r4_l2p1, NULL},
   {v_amr_r4_l2p2, NULL}}};

matinfo mat_amr_r4_l2 = {"Material", 4,  NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 2, matchunk_2d_amr_r4_l2};

quantinfo var_amr_r4_l2[] = {
  {"pressure", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_TRUE, "", 2, amr_r4_l2_chunk[0]},
  {"Y vel",    TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 2, amr_r4_l2_chunk[1]}};

chunkinfo chunk_2d_amr_r4_l2[] = {
  {TIO_2D, 0,  8, 0, 4, 0, 0, xamr_l3, yamr_l3, NULL, 0, 0},
  {TIO_2D, 8, 12, 4, 8, 0, 0, xamr_l3, yamr_l3, NULL, 4, 8}};

meshinfo mesh_2d_amr_r4[2] = {
   {"Level 1", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_TRUE, "amr", 1,
    TIO_2D, 4, 3, 0, 0, 1, chunk_2d_amr_l1, "xunits", "yunits", "", "x axis",
    "y axis", "", &mat_amr_l1, 2, var_amr_l1},
   {"Level 2", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_TRUE, "amr", 4,
    TIO_2D, 13, 9, 0, 0, 2, chunk_2d_amr_r4_l2, "xunits", "yunits", "", "x axis",
    "y axis", "", &mat_amr_r4_l2, 2,var_amr_r4_l2}};

stateinfo state_2d_amr_r4[] = {
  {"State000", 0,   0.0, "us",  2, mesh_2d_amr_r4}};

/******************************* 2D AMR Point Data *******************************/

quantchunk point_amr_l1_chunk[][1] = {
  {{v_amr_l1, NULL}}};

quantchunk point_amr_l2_chunk[][2] = {
  {{v_amr_l2p1, NULL},
   {v_amr_l2p2, NULL}}};

quantchunk point_amr_l3_chunk[][1] = {
  {{v_amr_l3p2, NULL}}};

quantinfo var_point_amr_l1[] = {
  {"Y vel", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, point_amr_l1_chunk[0]}};
quantinfo var_point_amr_l2[] = {
  {"Y vel", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 2, point_amr_l2_chunk[0]}};
quantinfo var_point_amr_l3[] = {
  {"Y vel", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, point_amr_l3_chunk[0]}};
quantinfo var_point_amr_l2A[] = {
  {"Y vel", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, point_amr_l2_chunk[0]}};

double xpoint_amr_l1[12] = {-6.0, -2.0, 2.0, 6.0, -6.0, -2.0, 2.0, 6.0,
                            -6.0, -2.0, 2.0, 6.0};
double ypoint_amr_l1[12] = {0.0, 0.0, 0.0, 0.0, 4.0, 4.0, 4.0, 4.0,
                            8.0, 8.0, 8.0, 8.0};

double xpoint_amr_l2[24] = {-6.0, -4.0, -2.0, 0.0, 2.0,
                            -6.0, -4.0, -2.0, 0.0, 2.0,
                            -6.0, -4.0, -2.0, 0.0, 2.0,
                             2.0, 4.0, 6.0, 2.0, 4.0, 6.0, 2.0, 4.0, 6.0};
double ypoint_amr_l2[24] = {0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 2.0, 2.0, 2.0,
                            4.0, 4.0, 4.0, 4.0, 4.0,
                            4.0, 4.0, 4.0, 6.0, 6.0, 6.0, 8.0, 8.0, 8.0};

double xpoint_amr_l3[9] = {2.0, 3.0, 4.0, 2.0, 3.0, 4.0, 2.0, 3.0, 4.0};
double ypoint_amr_l3[9] = {4.0, 4.0, 4.0, 5.0, 5.0, 5.0, 6.0, 6.0, 6.0};
 
chunkinfo chunk_2d_point_amr_l1[] = {
  {TIO_2D, 0,  11, 0, 0, 0, 0, xpoint_amr_l1, ypoint_amr_l1, NULL, 0, 0}};
chunkinfo chunk_2d_point_amr_l2[] = {
  {TIO_2D, 0, 14, 0, 0, 0, 0, xpoint_amr_l2, ypoint_amr_l2, NULL, 0, 0},
  {TIO_2D, 15,23, 0, 0, 0, 0, &xpoint_amr_l2[15], &ypoint_amr_l2[15], NULL, 0, 0}};
chunkinfo chunk_2d_point_amr_l3[] = {
  {TIO_2D, 0,  8, 0, 0, 0, 0, xpoint_amr_l3, ypoint_amr_l3, NULL, 0, 0}};
 
meshinfo mesh_2d_point_amr[][3] = {
  {{"Level 1", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_TRUE, "mesh", 1,
    TIO_2D, 12, 0, 0, 0, 1, chunk_2d_point_amr_l1, "xunits", "yunits",
    "", "x axis", "y axis", "", NULL, 1, var_point_amr_l1},
   {"Level 2", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_TRUE, "mesh", 2,
    TIO_2D, 24, 0, 0, 0, 2, chunk_2d_point_amr_l2, "xunits", "yunits",
    "", "x axis", "y axis", "", NULL, 1, var_point_amr_l2},
   {"Level 3", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_TRUE, "mesh", 4,
    TIO_2D, 9, 0, 0, 0, 1, chunk_2d_point_amr_l3, "xunits", "yunits",
    "", "x axis", "y axis", "", NULL, 1, var_point_amr_l3}},
// only 1 patch per level
  {{"Level 1", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_TRUE, "mesh", 1,
    TIO_2D, 12, 0, 0, 0, 1, chunk_2d_point_amr_l1, "xunits", "yunits",
    "", "x axis", "y axis", "", NULL, 1, var_point_amr_l1},
   {"Level 2", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_TRUE, "mesh", 2,
    TIO_2D, 24, 0, 0, 0, 1, chunk_2d_point_amr_l2, "xunits", "yunits",
    "", "x axis", "y axis", "", NULL, 1, var_point_amr_l2A},
   {"Level 3", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_TRUE, "mesh", 4,
    TIO_2D, 9, 0, 0, 0, 1, chunk_2d_point_amr_l3, "xunits", "yunits",
    "", "x axis", "y axis", "", NULL, 1, var_point_amr_l3}}};
   
stateinfo state_2d_point_amr[] = {
  {"State000", 0,   0.0, "us", 2, mesh_2d_point_amr[1]},  // level 1 + patch 1 level 2
  {"State001", 0,   0.5, "us", 3, mesh_2d_point_amr[1]},  // first patch on all levels
  {"State002", 0,   1.0, "us", 3, mesh_2d_point_amr[0]},  // all levels & patches
  {"State003", 0,   1.5, "us", 1, mesh_2d_point_amr[0]},  // only use level 1
  {"State004", 0,   2.0, "us", 3, mesh_2d_point_amr[0]},  // all levels & patches
  {"State005", 0,   2.5, "us", 3, mesh_2d_point_amr[1]},  // first patch on all levels
  {"State006", 0,   3.0, "us", 2, mesh_2d_point_amr[1]}}; // level 1 + patch 1 level 2

/******************************* 3D AMR Dummy Data *******************************/

int m_3d_amr_l1[6] =
  {-1, -2, -3,
   -4, -5, -6};

int ncomp_3d_amr_l1[6]   = {3, 3, 3, 2, 2, 2};
int ptr_3d_amr_l1[6]     = {1, 4, 7, 10, 12, 14};
int mixmat_3d_amr_l1[15] = {1, 2, 3, 1, 2, 3, 1, 2, 3, 3, 4, 3, 4, 3, 4};
double vf_3d_amr_l1[15]  = {0.25, 0.25, 0.5, 0.25, 0.25, 0.5, 0.25, 0.25, 0.5,
                            0.125, 0.875, 0.125, 0.875, 0.125, 0.875}; 
double p_3d_amr_l1[6] = 
   {1.110, 1.210, 1.310,
    1.120, 1.220, 1.320};

/* IDL
  v = bytarr(13, 9, 5)
  for i = 0, 12 do for j = 0, 8 do for k = 0, 4 do $
    v[i, j, k] = abs(i - 6) + abs(j - 4) + abs(k - 2)

print, v[0:*:4, 0:*:4, 0:*:4], format = '(4(I2, :,  ","))'
*/
double v_3d_amr_l1[24] = {
12, 8, 8,12,
 8, 4, 4, 8,
12, 8, 8,12,
12, 8, 8,12,
 8, 4, 4, 8,
12, 8, 8,12
};

int m_3d_amr_l2p1[16] =
  {-1, -2, -3, -4,
   3, 3, 3, 3,
   -5, -6, -7, -8,
   3, 3, 3, 3};

int ncomp_3d_amr_l2p1[8]   = {2, 2, 2, 2, 2, 2, 2, 2};
int ptr_3d_amr_l2p1[8]     = {1, 3, 5, 7, 9, 11, 13, 15};
int mixmat_3d_amr_l2p1[16] = {1, 2, 1, 2, 1, 2, 1, 2,1, 2, 1, 2, 1, 2, 1, 2};
double vf_3d_amr_l2p1[16]  = {0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
                              0.5, 0.5, 0.5, 0.5, 0.5, 0.5 };
   
double p_3d_amr_l2p1[16] =
  {2.110, 2.210, 2.310, 2.410,
   2.120, 2.220, 2.320, 2.420,
   2.111, 2.211, 2.311, 2.411,
   2.121, 2.221, 2.321, 2.421};

/*
print, v[0:8:2, 0:4:2, 0:4:2], format = '(5(I2, :,  ","))'
*/
double v_3d_amr_l2p1[45] = {
12,10, 8, 6, 8,
10, 8, 6, 4, 6,
 8, 6, 4, 2, 4,
10, 8, 6, 4, 6,
 8, 6, 4, 2, 4,
 6, 4, 2, 0, 2,
12,10, 8, 6, 8,
10, 8, 6, 4, 6,
 8, 6, 4, 2, 4
};

int m_3d_amr_l2p2[8] =
  {-1, -2,
    4, 4,
   -3, -4,
    4, 4};

int ncomp_3d_amr_l2p2[4]   = {2, 2, 2, 2};
int ptr_3d_amr_l2p2[4]     = {1, 3, 5, 7};
int mixmat_3d_amr_l2p2[8] = {3, 4, 3, 4, 3, 4, 3, 4};
double vf_3d_amr_l2p2[8]  = {0.25, 0.75, 0.25, 0.75, 0.25, 0.75, 0.25, 0.75};

double p_3d_amr_l2p2[8] =
  {2.530, 2.630,
   2.540, 2.640,
   2.531, 2.631,
   2.541, 2.641};
/*
print, v[8:12:2, 4:8:2, 0:4:2], format = '(3(I2, :,  ","))'
*/
double v_3d_amr_l2p2[27] = {
 4, 6, 8,
 6, 8,10,
 8,10,12,
 2, 4, 6,
 4, 6, 8,
 6, 8,10,
 4, 6, 8,
 6, 8,10,
 8,10,12
};

int m_3d_amr_l3p2[8] =
  {-1, -2,
   4, 4,
   -3, -4,
   4, 4};

int ncomp_3d_amr_l3p2[4]  = {2, 2, 2, 2};
int ptr_3d_amr_l3p2[4]    = {1, 3, 5, 7};
int mixmat_3d_amr_l3p2[8] = {3, 4, 3, 4, 3, 4, 3, 4};
double vf_3d_amr_l3p2[8]  = {0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5}; 

double p_3d_amr_l3p2[8] =
  {3.110, 3.210,
   3.120, 3.220,
   3.111, 3.211,
   3.121, 3.221};
/*
print, v[8:10, 4:6, 0:2], format = '(3(I2, :,  ","))'
*/
double v_3d_amr_l3p2[27] = {
 4, 5, 6,
 5, 6, 7,
 6, 7, 8,
 3, 4, 5,
 4, 5, 6,
 5, 6, 7,
 2, 3, 4,
 3, 4, 5,
 4, 5, 6};

matchunk matchunk_3d_amr_l1[] = {
  {m_3d_amr_l1, ncomp_3d_amr_l1, ptr_3d_amr_l1, mixmat_3d_amr_l1, vf_3d_amr_l1}};
matchunk matchunk_3d_amr_l2[] = {
  {m_3d_amr_l2p1, ncomp_3d_amr_l2p1, ptr_3d_amr_l2p1, mixmat_3d_amr_l2p1, vf_3d_amr_l2p1},
  {m_3d_amr_l2p2, ncomp_3d_amr_l2p2, ptr_3d_amr_l2p2, mixmat_3d_amr_l2p2, vf_3d_amr_l2p2}};
matchunk matchunk_3d_amr_l3[] = {
  {m_3d_amr_l3p2, ncomp_3d_amr_l3p2, ptr_3d_amr_l3p2, mixmat_3d_amr_l3p2, vf_3d_amr_l3p2}};

quantchunk v_3d_amr_l1_chunk[][1] = {
  {{p_3d_amr_l1, NULL}},
  {{v_3d_amr_l1, NULL}}};
quantchunk v_3d_amr_l2_chunk[][2] = {
  {{p_3d_amr_l2p1, NULL},
   {p_3d_amr_l2p2, NULL}},
  {{v_3d_amr_l2p1, NULL},
   {v_3d_amr_l2p2, NULL}}};
quantchunk v_3d_amr_l3_chunk[][1] = {
  {{p_3d_amr_l3p2, NULL}},
  {{v_3d_amr_l3p2, NULL}}};

matinfo mat_3d_amr_l1 = {"Material", 4, NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, matchunk_3d_amr_l1};
matinfo mat_3d_amr_l2 = {"Material", 4, NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 2, matchunk_3d_amr_l2};
matinfo mat_3d_amr_l3 = {"Material", 4, NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, matchunk_3d_amr_l3};

quantinfo var_3d_amr_l1[] = {
  {"pressure", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, v_3d_amr_l1_chunk[0]},
  {"Y Vel",    TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, v_3d_amr_l1_chunk[1]}};
quantinfo var_3d_amr_l2[] = {
  {"pressure", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_FALSE, "", 2, v_3d_amr_l2_chunk[0]},
  {"Y Vel",    TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 2, v_3d_amr_l2_chunk[1]}};
quantinfo var_3d_amr_l3[] = {
  {"pressure", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, v_3d_amr_l3_chunk[0]},
  {"Y Vel",    TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, v_3d_amr_l3_chunk[1]}};

double zamr_l1[2] =  {0.0,                4.0};
double zamr_l2[3] =  {0.0,      2.0,      4.0};
double zamr_l3[5] =  {0.0, 1.0, 2.0, 3.0, 4.0};

// Colinear so uses coords in first chunk
chunkinfo chunk_3d_amr_l1[] = {{TIO_3D, 0,  3, 0, 2, 0, 1, xamr_l1, yamr_l1, zamr_l1, 6, 15}};
chunkinfo chunk_3d_amr_l2[] = {
  {TIO_3D, 0, 4, 0, 2, 0, 2, xamr_l2, yamr_l2, zamr_l2, 8, 16},
  {TIO_3D, 4, 6, 2, 4, 0, 2, xamr_l2, yamr_l2, zamr_l2, 4, 8}};
chunkinfo chunk_3d_amr_l3[] = {{TIO_3D, 8, 10, 4, 6, 0, 2, xamr_l3, yamr_l3, zamr_l3, 4, 8}};

meshinfo mesh_3d_amr[][3] = {
  {{"Level 1", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_TRUE, "amr", 1,
    TIO_3D, 4, 3, 2, 0, 1, chunk_3d_amr_l1, "xunits", "yunits", "zunits",
    "x axis", "y axis", "zaxis", &mat_3d_amr_l1, 2, var_3d_amr_l1},
   {"Level 2", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_TRUE, "amr", 2,
    TIO_3D, 7, 5, 3, 0, 2, chunk_3d_amr_l2, "xunits", "yunits", "zunits",
    "x axis", "y axis", "z axis", &mat_3d_amr_l2, 2, var_3d_amr_l2},
   {"Level 3", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_TRUE, "amr", 4,
    TIO_3D, 13, 9, 5, 0, 1, chunk_3d_amr_l3, "xunits", "yunits", "zunits",
    "x axis", "y axis", "zaxis", &mat_3d_amr_l3, 2, var_3d_amr_l3}}};
    
stateinfo state_3d_amr[] = {
  {"State000",  0,   0.0, "us",  3, mesh_3d_amr[0]},
  {"State001",  1,   1.0, "us",  3, mesh_3d_amr[0]},
  {"State002",  2,   2.0, "us",  3, mesh_3d_amr[0]},
  {"State003",  3,   3.0, "us",  3, mesh_3d_amr[0]},
  {"State004",  4,   4.0, "us",  3, mesh_3d_amr[0]},
  {"State005",  5,   5.0, "us",  3, mesh_3d_amr[0]},
  {"State006",  6,   6.0, "us",  3, mesh_3d_amr[0]},
  {"State007",  7,   7.0, "us",  3, mesh_3d_amr[0]},
  {"State008",  8,   8.0, "us",  3, mesh_3d_amr[0]},
  {"State009",  9,   9.0, "us",  3, mesh_3d_amr[0]},
  {"State010", 10,  10.0, "us",  3, mesh_3d_amr[0]},
  {"State011", 11,  11.0, "us",  3, mesh_3d_amr[0]},
  {"State012", 12,  12.0, "us",  3, mesh_3d_amr[0]},
  {"State013", 13,  13.0, "us",  3, mesh_3d_amr[0]},
  {"State014", 14,  14.0, "us",  3, mesh_3d_amr[0]},
  {"State015", 15,  15.0, "us",  3, mesh_3d_amr[0]},
  {"State016", 16,  16.0, "us",  3, mesh_3d_amr[0]},
  {"State017", 17,  17.0, "us",  3, mesh_3d_amr[0]},
  {"State018", 18,  18.0, "us",  3, mesh_3d_amr[0]},
  {"State019", 19,  19.0, "us",  3, mesh_3d_amr[0]},
  {"State020", 20,  20.0, "us",  3, mesh_3d_amr[0]},
  {"State021", 21,  21.0, "us",  3, mesh_3d_amr[0]},
  {"State022", 22,  22.0, "us",  3, mesh_3d_amr[0]},
  {"State023", 23,  23.0, "us",  3, mesh_3d_amr[0]},
  {"State024", 24,  24.0, "us",  3, mesh_3d_amr[0]}};

/************************* 3D AMR Ratio 4 Dummy Data *************************/

int m_3d_amr_l3p2_r4[64] =
  {-1, -2, -3, -4,
   4, 4, 4, 4,
   4, 4, 4, 4,
   4, 4, 4, 4,
   -5, -6, -7, -8,
   4, 4, 4, 4,
   4, 4, 4, 4,
   4, 4, 4, 4,
   -9,-10,-11,-12,
   4, 4, 4, 4,
   4, 4, 4, 4,
   4, 4, 4, 4,
   -13, -14, -15, -16,
   4, 4, 4, 4,
   4, 4, 4, 4,
   4, 4, 4, 4};

int ncomp_3d_amr_l3p2_r4[16]  = {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2};
int ptr_3d_amr_l3p2_r4[16]    = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31};
int mixmat_3d_amr_l3p2_r4[32] = {3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4,
                                 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4};
double vf_3d_amr_l3p2_r4[32]  = {0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
                                 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
                                 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
                                 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5}; 

double p_3d_amr_l3p2_r4[64] =
  {3.110, 3.210, 3.310, 3.410,
   3.120, 3.220, 3.320, 3.420,
   3.130, 3.230, 3.330, 3.430,
   3.140, 3.240, 3.340, 3.440,
   3.111, 3.211, 3.311, 3.411,
   3.121, 3.221, 3.321, 3.421,
   3.131, 3.231, 3.331, 3.431,
   3.141, 3.241, 3.341, 3.441,
   3.112, 3.212, 3.312, 3.412,
   3.122, 3.222, 3.322, 3.422,
   3.132, 3.232, 3.332, 3.432,
   3.142, 3.242, 3.342, 3.442,
   3.113, 3.213, 3.313, 3.413,
   3.123, 3.223, 3.323, 3.423,
   3.133, 3.233, 3.333, 3.433,
   3.143, 3.243, 3.343, 3.443};

/*
print, v[8:12, 4:8, 0:4], format = '(5(I2, :,  ","))'
*/
double v_3d_amr_l3p2_r4[125] = {
 4, 5, 6, 7, 8,
 5, 6, 7, 8, 9,
 6, 7, 8, 9,10,
 7, 8, 9,10,11,
 8, 9,10,11,12,
 3, 4, 5, 6, 7,
 4, 5, 6, 7, 8,
 5, 6, 7, 8, 9,
 6, 7, 8, 9,10,
 7, 8, 9,10,11,
 2, 3, 4, 5, 6,
 3, 4, 5, 6, 7,
 4, 5, 6, 7, 8,
 5, 6, 7, 8, 9,
 6, 7, 8, 9,10,
 3, 4, 5, 6, 7,
 4, 5, 6, 7, 8,
 5, 6, 7, 8, 9,
 6, 7, 8, 9,10,
 7, 8, 9,10,11,
 4, 5, 6, 7, 8,
 5, 6, 7, 8, 9,
 6, 7, 8, 9,10,
 7, 8, 9,10,11,
 8, 9,10,11,12};

matchunk matchunk_3d_amr_l3_r4[] = {
  {m_3d_amr_l3p2_r4, ncomp_3d_amr_l3p2_r4, ptr_3d_amr_l3p2_r4, mixmat_3d_amr_l3p2_r4, vf_3d_amr_l3p2_r4}};

quantchunk v_3d_amr_l3_r4_chunk[][1] = {
  {{p_3d_amr_l3p2_r4, NULL}},
  {{v_3d_amr_l3p2_r4, NULL}}};

matinfo mat_3d_amr_l3_r4 = {"Material", 4, NULL, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, matchunk_3d_amr_l3_r4};

quantinfo var_3d_amr_l3_r4[] = {
  {"pressure", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, v_3d_amr_l3_r4_chunk[0]},
  {"Y Vel",    TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, v_3d_amr_l3_r4_chunk[1]}};

chunkinfo chunk_3d_amr_l3_r4[] = {{TIO_3D, 8, 12, 4, 8, 0, 4, xamr_l3, yamr_l3, zamr_l3, 16, 32}};

meshinfo mesh_3d_amr_r4[][2] = {
  {{"Level 1", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_TRUE, "amr", 1,
    TIO_3D, 4, 3, 2, 0, 1, chunk_3d_amr_l1, "xunits", "yunits", "zunits",
    "x axis", "y axis", "zaxis", &mat_3d_amr_l1, 2, var_3d_amr_l1},
   {"Level 2", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_TRUE, "amr", 4,
    TIO_3D, 13, 9, 5, 0, 1, chunk_3d_amr_l3_r4, "xunits", "yunits", "zunits",
    "x axis", "y axis", "zaxis", &mat_3d_amr_l3_r4, 2, var_3d_amr_l3_r4}}};

stateinfo state_3d_amr_r4[] = {
  {"State000",  0,   0.0, "us",  2, mesh_3d_amr_r4[0]}};

/************************* 2D Dummy Data - 2 Meshes **************************/

double neut[][15] = {
  {0.0, 1.0, 2.0, 3.0, 4.0,
   0.0, 1.0, 2.0, 3.0, 4.0,
   0.0, 1.0, 2.0, 3.0, 4.0},
  {0.0, 1.0, 2.0, 3.0, 3.0,
   0.0, 1.0, 2.0, 3.0, 3.0,
   0.0, 1.0, 2.0, 3.0, 3.0},
  {0.0, 1.0, 2.0, 2.0, 2.0,
   0.0, 1.0, 2.0, 2.0, 2.0,
   0.0, 1.0, 2.0, 2.0, 2.0}};
   
quantchunk var_chunk_2d_2m[] = {
  {neut[0], NULL},
  {neut[1], NULL},
  {neut[2], NULL}};


quantinfo var_2d_2m[] = {
  {"neut", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_2d_2m[0]},
  {"neut", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_2d_2m[1]},
  {"neut", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_2d_2m[2]}};

chunkinfo chunk_2d_2m = {TIO_2D, 0, 5, 0, 3, 0, 0, x2, y2, NULL, 0, 0};

meshinfo mesh_2d_2m[][2] = {
  {{"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1, TIO_2D, 11, 8, 0, 0, 1, &chunk_2d,
    "xunits", "yunits", "", "x axis", "y axis", "", &mat_2d[0], 2, var_2d[0]},
   {"dmesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "dmesh", 1, TIO_2D, 6, 4, 0, 0, 1, &chunk_2d_2m,
    "xunits2", "yunits2", "", "x axis2", "y axis2", "", NULL, 1,
    &var_2d_2m[0]}},
  {{"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1, TIO_2D, 11, 8, 0, 0, 1, &chunk_2d,
    "xunits", "yunits", "", "x axis", "y axis", "", &mat_2d[0], 2, var_2d[1]},
   {"dmesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "dmesh", 1, TIO_2D, 6, 4, 0, 0, 1, &chunk_2d_2m,
    "xunits2", "yunits2", "", "x axis2", "y axis2", "", NULL, 1,
    &var_2d_2m[1]}},
  {{"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1, TIO_2D, 11, 8, 0, 0, 1, &chunk_2d,
    "xunits", "yunits", "", "x axis", "y axis", "", &mat_2d[0], 2, var_2d[2]},
   {"dmesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "dmesh", 1, TIO_2D, 6, 4, 0, 0, 1, &chunk_2d_2m,
    "xunits2", "yunits2", "", "x axis2", "y axis2", "", NULL, 1,
    &var_2d_2m[2]}}};

stateinfo state_2d_2m[] = {
  {"State000", 0,   0.0,  "us", 2, mesh_2d_2m[0]},
  {"State001", 100, 1.02, "us", 2, mesh_2d_2m[1]},
  {"State002", 200, 2.02, "us", 2, mesh_2d_2m[2]}};

/******************************* 3D Dummy Data *******************************/


/* Generated in IDL
  mat = intarr(10, 7, 4) + 5
  r = [4, 6, 8, 10]
  nmix = 0
  ncomp = [0]
  mixmat = [0]
  ptr = [0]
  vf = [0.0]

  for m = 4, 1, -1 do for i = 0, 9 do for j = 0, 6 do for k = 0, 3 do begin & $
    out = r[m - 1] - sqrt((i+1)^2 + (j+1)^2 + (k+1)^2) & $
    in =  r[m - 1] - sqrt(i^2 + j^2 + k^2) & $
    if out ge 0 then mat[i, j, k] = m & $
    if in gt 0 and out lt 0 then begin & $
      if mat[i, j, k] gt 0 then begin & $
        nmix = nmix + 1 & $
        ptr = [ptr, n_elements(mixmat)] & $
        ncomp = [ncomp, 2] & $
        mixmat = [mixmat, m, mat[i, j, k]] & $
        frac = - in / (out - in) & $
        vf = [vf, frac, 1.0 - frac] & $ 
        mat[i, j, k] = -nmix & $
      endif else begin & $
stop & $ ; code for 3 or more materials in cell
      endelse & $
    endif & $
  endfor
*/
int material_3d[280] = {
/*
  print, mat, format = '(10(i4, :,  ","))'
*/
   1,   1,   1,-180,   2,-141,   3, -87,   4, -28,
   1,   1,   1,-183,   2,-145,   3, -91,   4, -32,
   1,   1,-175,-186,   2,-149,   3, -95,   4, -36,
-158,-167,-178,   2,-135,-152, -77, -99,   4, -40,
   2,   2,   2,-123,-139,   3, -81,   4, -20, -44,
-103,-109,-117,-127,   3, -67, -85,  -7, -24,   5,
   3,   3,   3, -51, -59, -71,   4, -11,   5,   5,
   1,   1,   1,-181,   2,-142,   3, -88,   4, -29,
   1,   1,-172,-184,   2,-146,   3, -92,   4, -33,
   1,-164,-176,-187,-132,-150,   3, -96,   4, -37,
-159,-168,-179,   2,-136,-153, -78,-100, -17, -41,
   2,   2,-114,-124,-140, -64, -82,   4, -21, -45,
-104,-110,-118,-128, -56, -68, -86,  -8, -25,   5,
   3,   3,   3, -52, -60, -72,  -3, -12,   5,   5,
   1,   1,-170,-182,   2,-143,   3, -89,   4, -30,
   1,-162,-173,-185,-130,-147,   3, -93,   4, -34,
-156,-165,-177,   2,-133,-151, -75, -97,   4, -38,
-160,-169,   2,-121,-137,   3, -79,-101, -18, -42,
   2,-107,-115,-125,   3, -65, -83,   4, -22,   5,
-105,-111,-119,   3, -57, -69,   4,  -9, -26,   5,
   3,   3, -48, -53, -61,   4,  -4, -13,   5,   5,
-154,-161,-171,   2,-129,-144, -73, -90,   4, -31,
-155,-163,-174,   2,-131,-148, -74, -94, -15, -35,
-157,-166,   2,-120,-134,   3, -76, -98, -16, -39,
   2,   2,-113,-122,-138, -63, -80,   4, -19, -43,
-102,-108,-116,-126, -55, -66, -84,  -6, -23,   5,
-106,-112,   3, -50, -58, -70,  -2, -10, -27,   5,
 -46, -47, -49, -54, -62,  -1,  -5, -14,   5,   5
};

int ncomp_3d[] = {
/*
  print, ncomp[1:*], format = '(10(i4, :,  ","))'
*/
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2
};

int ptr_3d[] = {
/*
  print, ptr[1:*], format = '(10(i4, :,  ","))'
*/
   1,   3,   5,   7,   9,  11,  13,  15,  17,  19,
  21,  23,  25,  27,  29,  31,  33,  35,  37,  39,
  41,  43,  45,  47,  49,  51,  53,  55,  57,  59,
  61,  63,  65,  67,  69,  71,  73,  75,  77,  79,
  81,  83,  85,  87,  89,  91,  93,  95,  97,  99,
 101, 103, 105, 107, 109, 111, 113, 115, 117, 119,
 121, 123, 125, 127, 129, 131, 133, 135, 137, 139,
 141, 143, 145, 147, 149, 151, 153, 155, 157, 159,
 161, 163, 165, 167, 169, 171, 173, 175, 177, 179,
 181, 183, 185, 187, 189, 191, 193, 195, 197, 199,
 201, 203, 205, 207, 209, 211, 213, 215, 217, 219,
 221, 223, 225, 227, 229, 231, 233, 235, 237, 239,
 241, 243, 245, 247, 249, 251, 253, 255, 257, 259,
 261, 263, 265, 267, 269, 271, 273, 275, 277, 279,
 281, 283, 285, 287, 289, 291, 293, 295, 297, 299,
 301, 303, 305, 307, 309, 311, 313, 315, 317, 319,
 321, 323, 325, 327, 329, 331, 333, 335, 337, 339,
 341, 343, 345, 347, 349, 351, 353, 355, 357, 359,
 361, 363, 365, 367, 369, 371, 373
};

int mixmat_3d[] = {
/*
  print, mixmat[1:*], format = '(10(i4, :,  ","))'
*/
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2
};

double vf_3d[] = {
/*
print,vf[1:*], format = '(7(F10.6, :,  ","))'
*/
  0.970370,  0.029630,  0.970370,  0.029630,  0.936031,  0.063969,  0.788425,
  0.211575,  0.596275,  0.403725,  0.849844,  0.150156,  0.965545,  0.034455,
  0.871218,  0.128782,  0.726270,  0.273730,  0.535917,  0.464083,  0.535463,
  0.464537,  0.470748,  0.529252,  0.351264,  0.648736,  0.183247,  0.816753,
  0.965545,  0.034455,  0.805591,  0.194409,  0.965545,  0.034455,  0.805591,
  0.194409,  0.599846,  0.400154,  0.754195,  0.245805,  0.672003,  0.327997,
  0.535621,  0.464379,  0.351264,  0.648736,  0.396150,  0.603850,  0.339135,
  0.660865,  0.225349,  0.774651,  0.061544,  0.938456,  0.909501,  0.090499,
  0.792751,  0.207249,  0.615237,  0.384763,  0.385892,  0.614108,  0.792751,
  0.207249,  0.693959,  0.306041,  0.535471,  0.464529,  0.325504,  0.674496,
  0.615237,  0.384763,  0.535471,  0.464529,  0.396150,  0.603850,  0.205147,
  0.794852,  0.385892,  0.614108,  0.325504,  0.674496,  0.205147,  0.794852,
  0.032565,  0.967435,  0.109833,  0.890167,  0.068918,  0.931082,  0.912392,
  0.087608,  0.798842,  0.201158,  0.880580,  0.119420,  0.624093,  0.375907,
  0.854207,  0.145793,  0.912392,  0.087608,  0.798842,  0.201158,  0.624093,
  0.375907,  0.394501,  0.605499,  0.927923,  0.072077,  0.960634,  0.039366,
  0.778943,  0.221057,  0.545181,  0.454819,  0.544386,  0.455614,  0.463951,
  0.536049,  0.317546,  0.682454,  0.113177,  0.886823,  0.854207,  0.145793,
  0.960634,  0.039366,  0.778943,  0.221057,  0.545181,  0.454819,  0.630667,
  0.369333,  0.544651,  0.455349,  0.394501,  0.605499,  0.187596,  0.812404,
  0.129667,  0.870333,  0.080766,  0.919234,  0.912392,  0.087608,  0.798842,
  0.201158,  0.880580,  0.119420,  0.624093,  0.375907,  0.912392,  0.087608,
  0.798842,  0.201158,  0.624093,  0.375907,  0.394501,  0.605499,  0.544386,
  0.455614,  0.463951,  0.536049,  0.317546,  0.682454,  0.113177,  0.886823,
  0.129667,  0.870333,  0.080766,  0.919234,  0.889649,  0.110351,  0.751834,
  0.248166,  0.544457,  0.455543,  0.277575,  0.722425,  0.751834,  0.248166,
  0.638888,  0.361112,  0.456735,  0.543265,  0.214861,  0.785139,  0.544457,
  0.455543,  0.456735,  0.543265,  0.299004,  0.700996,  0.080766,  0.919234,
  0.277575,  0.722425,  0.214861,  0.785139,  0.080766,  0.919234,  0.675338,
  0.324662,  0.858801,  0.141199,  0.690880,  0.309120,  0.440059,  0.559941,
  0.116653,  0.883347,  0.896061,  0.103939,  0.559899,  0.440101,  0.690880,
  0.309120,  0.559355,  0.440645,  0.343304,  0.656696,  0.053547,  0.946453,
  0.764628,  0.235372,  0.896061,  0.103939,  0.663882,  0.336118,  0.364692,
  0.635308,  0.440059,  0.559941,  0.343304,  0.656696,  0.159259,  0.840741,
  0.764628,  0.235372,  0.764628,  0.235372,  0.464102,  0.535898,  0.675338,
  0.324662,  0.559899,  0.440101,  0.364692,  0.635308,  0.098348,  0.901652,
  0.116653,  0.883347,  0.053547,  0.946453,  0.675338,  0.324662,  0.896061,
  0.103939,  0.559899,  0.440101,  0.896061,  0.103939,  0.663882,  0.336118,
  0.364692,  0.635308,  0.675338,  0.324662,  0.559899,  0.440101,  0.364692,
  0.635308,  0.098348,  0.901652,  0.231141,  0.768859,  0.159259,  0.840741,
  0.858801,  0.141199,  0.690880,  0.309120,  0.440059,  0.559941,  0.116653,
  0.883347,  0.690880,  0.309120,  0.559355,  0.440645,  0.343304,  0.656696,
  0.053547,  0.946453,  0.440059,  0.559941,  0.343304,  0.656696,  0.159259,
  0.840741,  0.116653,  0.883347,  0.053547,  0.946453,  0.804738,  0.195262,
  0.589821,  0.410179,  0.765498,  0.234502,  0.264116,  0.735884,  0.804738,
  0.195262,  0.589821,  0.410179,  0.264116,  0.735884,  0.589821,  0.410179,
  0.926443,  0.073557,  0.431872,  0.568128,  0.926443,  0.073557,  0.591570,
  0.408430,  0.157190,  0.842810,  0.589821,  0.410179,  0.431872,  0.568128,
  0.157190,  0.842810,  0.765498,  0.234502,  0.264116,  0.735884,  0.926443,
  0.073557,  0.591570,  0.408430,  0.157190,  0.842810,  0.765498,  0.234502,
  0.591570,  0.408430,  0.309401,  0.690599,  0.264116,  0.735884,  0.157190,
  0.842810,  0.804738,  0.195262,  0.589821,  0.410179,  0.264116,  0.735884,
  0.589821,  0.410179,  0.431872,  0.568128,  0.157190,  0.842810,  0.264116,
  0.735884,  0.157190,  0.842810
};

/* Generated in IDL
  density = dblarr(10, 7, 4)
  for i = 0, 3 do density[*,*,i] = i
*/

double density[][280] = {
/*
  print, density, format = '(10(F4.1, :,  ","))'
*/
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0},
/*
  print, density + 1, format = '(10(F4.1, :,  ","))'
*/
{1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0},
/*
  print, density + 2, format = '(10(F4.1, :,  ","))'
*/
{2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0},
/*
  print, density + 3, format = '(10(F4.1, :,  ","))'
*/
{3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0,
 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0,
 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0,
 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0,
 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0,
 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0,
 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0},
};

/* Generated in IDL
  xvel = dblarr(11, 8, 5)
  for i = 0, 10 do for j = 0, 7 do for k = 0, 4 do $
    xvel[i, j, k] = sqrt(i^2 + j^2 + k ^2)
*/
double xvel[][440] = {
/*
  print, xvel, format = '(7(F10.6, :,  ","))'
*/
{0.000000,  1.000000,  2.000000,  3.000000,  4.000000,  5.000000,  6.000000,
  7.000000,  8.000000,  9.000000, 10.000000,  1.000000,  1.414214,  2.236068,
  3.162278,  4.123106,  5.099020,  6.082763,  7.071068,  8.062258,  9.055386,
 10.049875,  2.000000,  2.236068,  2.828427,  3.605551,  4.472136,  5.385165,
  6.324555,  7.280110,  8.246211,  9.219544, 10.198039,  3.000000,  3.162278,
  3.605551,  4.242640,  5.000000,  5.830952,  6.708204,  7.615773,  8.544003,
  9.486833, 10.440307,  4.000000,  4.123106,  4.472136,  5.000000,  5.656854,
  6.403124,  7.211102,  8.062258,  8.944272,  9.848858, 10.770329,  5.000000,
  5.099020,  5.385165,  5.830952,  6.403124,  7.071068,  7.810250,  8.602325,
  9.433981, 10.295630, 11.180340,  6.000000,  6.082763,  6.324555,  6.708204,
  7.211102,  7.810250,  8.485281,  9.219544, 10.000000, 10.816654, 11.661903,
  7.000000,  7.071068,  7.280110,  7.615773,  8.062258,  8.602325,  9.219544,
  9.899495, 10.630146, 11.401754, 12.206555,  1.000000,  1.414214,  2.236068,
  3.162278,  4.123106,  5.099020,  6.082763,  7.071068,  8.062258,  9.055386,
 10.049875,  1.414214,  1.732051,  2.449490,  3.316625,  4.242640,  5.196152,
  6.164414,  7.141428,  8.124039,  9.110434, 10.099504,  2.236068,  2.449490,
  3.000000,  3.741657,  4.582576,  5.477226,  6.403124,  7.348469,  8.306623,
  9.273619, 10.246951,  3.162278,  3.316625,  3.741657,  4.358899,  5.099020,
  5.916080,  6.782330,  7.681146,  8.602325,  9.539392, 10.488089,  4.123106,
  4.242640,  4.582576,  5.099020,  5.744563,  6.480741,  7.280110,  8.124039,
  9.000000,  9.899495, 10.816654,  5.099020,  5.196152,  5.477226,  5.916080,
  6.480741,  7.141428,  7.874008,  8.660254,  9.486833, 10.344080, 11.224972,
  6.082763,  6.164414,  6.403124,  6.782330,  7.280110,  7.874008,  8.544003,
  9.273619, 10.049875, 10.862781, 11.704700,  7.071068,  7.141428,  7.348469,
  7.681146,  8.124039,  8.660254,  9.273619,  9.949874, 10.677078, 11.445523,
 12.247449,  2.000000,  2.236068,  2.828427,  3.605551,  4.472136,  5.385165,
  6.324555,  7.280110,  8.246211,  9.219544, 10.198039,  2.236068,  2.449490,
  3.000000,  3.741657,  4.582576,  5.477226,  6.403124,  7.348469,  8.306623,
  9.273619, 10.246951,  2.828427,  3.000000,  3.464102,  4.123106,  4.898980,
  5.744563,  6.633250,  7.549834,  8.485281,  9.433981, 10.392304,  3.605551,
  3.741657,  4.123106,  4.690416,  5.385165,  6.164414,  7.000000,  7.874008,
  8.774964,  9.695360, 10.630146,  4.472136,  4.582576,  4.898980,  5.385165,
  6.000000,  6.708204,  7.483315,  8.306623,  9.165152, 10.049875, 10.954452,
  5.385165,  5.477226,  5.744563,  6.164414,  6.708204,  7.348469,  8.062258,
  8.831760,  9.643651, 10.488089, 11.357817,  6.324555,  6.403124,  6.633250,
  7.000000,  7.483315,  8.062258,  8.717798,  9.433981, 10.198039, 11.000000,
 11.832160,  7.280110,  7.348469,  7.549834,  7.874008,  8.306623,  8.831760,
  9.433981, 10.099504, 10.816654, 11.575837, 12.369317,  3.000000,  3.162278,
  3.605551,  4.242640,  5.000000,  5.830952,  6.708204,  7.615773,  8.544003,
  9.486833, 10.440307,  3.162278,  3.316625,  3.741657,  4.358899,  5.099020,
  5.916080,  6.782330,  7.681146,  8.602325,  9.539392, 10.488089,  3.605551,
  3.741657,  4.123106,  4.690416,  5.385165,  6.164414,  7.000000,  7.874008,
  8.774964,  9.695360, 10.630146,  4.242640,  4.358899,  4.690416,  5.196152,
  5.830952,  6.557438,  7.348469,  8.185352,  9.055386,  9.949874, 10.862781,
  5.000000,  5.099020,  5.385165,  5.830952,  6.403124,  7.071068,  7.810250,
  8.602325,  9.433981, 10.295630, 11.180340,  5.830952,  5.916080,  6.164414,
  6.557438,  7.071068,  7.681146,  8.366600,  9.110434,  9.899495, 10.723805,
 11.575837,  6.708204,  6.782330,  7.000000,  7.348469,  7.810250,  8.366600,
  9.000000,  9.695360, 10.440307, 11.224972, 12.041595,  7.615773,  7.681146,
  7.874008,  8.185352,  8.602325,  9.110434,  9.695360, 10.344080, 11.045361,
 11.789826, 12.569805,  4.000000,  4.123106,  4.472136,  5.000000,  5.656854,
  6.403124,  7.211102,  8.062258,  8.944272,  9.848858, 10.770329,  4.123106,
  4.242640,  4.582576,  5.099020,  5.744563,  6.480741,  7.280110,  8.124039,
  9.000000,  9.899495, 10.816654,  4.472136,  4.582576,  4.898980,  5.385165,
  6.000000,  6.708204,  7.483315,  8.306623,  9.165152, 10.049875, 10.954452,
  5.000000,  5.099020,  5.385165,  5.830952,  6.403124,  7.071068,  7.810250,
  8.602325,  9.433981, 10.295630, 11.180340,  5.656854,  5.744563,  6.000000,
  6.403124,  6.928203,  7.549834,  8.246211,  9.000000,  9.797959, 10.630146,
 11.489125,  6.403124,  6.480741,  6.708204,  7.071068,  7.549834,  8.124039,
  8.774964,  9.486833, 10.246951, 11.045361, 11.874342,  7.211102,  7.280110,
  7.483315,  7.810250,  8.246211,  8.774964,  9.380832, 10.049875, 10.770329,
 11.532562, 12.328828,  8.062258,  8.124039,  8.306623,  8.602325,  9.000000,
  9.486833, 10.049875, 10.677078, 11.357817, 12.083046, 12.845233},
/*
  print, xvel - 1, format = '(7(F10.6, :,  ","))'
*/
{-1.000000,  0.000000,  1.000000,  2.000000,  3.000000,  4.000000,  5.000000,
  6.000000,  7.000000,  8.000000,  9.000000,  0.000000,  0.414214,  1.236068,
  2.162278,  3.123106,  4.099020,  5.082763,  6.071068,  7.062258,  8.055386,
  9.049875,  1.000000,  1.236068,  1.828427,  2.605551,  3.472136,  4.385165,
  5.324555,  6.280110,  7.246211,  8.219544,  9.198039,  2.000000,  2.162278,
  2.605551,  3.242640,  4.000000,  4.830952,  5.708204,  6.615773,  7.544003,
  8.486833,  9.440307,  3.000000,  3.123106,  3.472136,  4.000000,  4.656854,
  5.403124,  6.211102,  7.062258,  7.944272,  8.848858,  9.770329,  4.000000,
  4.099020,  4.385165,  4.830952,  5.403124,  6.071068,  6.810250,  7.602325,
  8.433981,  9.295630, 10.180340,  5.000000,  5.082763,  5.324555,  5.708204,
  6.211102,  6.810250,  7.485281,  8.219544,  9.000000,  9.816654, 10.661903,
  6.000000,  6.071068,  6.280110,  6.615773,  7.062258,  7.602325,  8.219544,
  8.899495,  9.630146, 10.401754, 11.206555,  0.000000,  0.414214,  1.236068,
  2.162278,  3.123106,  4.099020,  5.082763,  6.071068,  7.062258,  8.055386,
  9.049875,  0.414214,  0.732051,  1.449490,  2.316625,  3.242640,  4.196152,
  5.164414,  6.141428,  7.124039,  8.110434,  9.099504,  1.236068,  1.449490,
  2.000000,  2.741657,  3.582576,  4.477226,  5.403124,  6.348469,  7.306623,
  8.273619,  9.246951,  2.162278,  2.316625,  2.741657,  3.358899,  4.099020,
  4.916080,  5.782330,  6.681146,  7.602325,  8.539392,  9.488089,  3.123106,
  3.242640,  3.582576,  4.099020,  4.744563,  5.480741,  6.280110,  7.124039,
  8.000000,  8.899495,  9.816654,  4.099020,  4.196152,  4.477226,  4.916080,
  5.480741,  6.141428,  6.874008,  7.660254,  8.486833,  9.344080, 10.224972,
  5.082763,  5.164414,  5.403124,  5.782330,  6.280110,  6.874008,  7.544003,
  8.273619,  9.049875,  9.862781, 10.704700,  6.071068,  6.141428,  6.348469,
  6.681146,  7.124039,  7.660254,  8.273619,  8.949874,  9.677078, 10.445523,
 11.247449,  1.000000,  1.236068,  1.828427,  2.605551,  3.472136,  4.385165,
  5.324555,  6.280110,  7.246211,  8.219544,  9.198039,  1.236068,  1.449490,
  2.000000,  2.741657,  3.582576,  4.477226,  5.403124,  6.348469,  7.306623,
  8.273619,  9.246951,  1.828427,  2.000000,  2.464102,  3.123106,  3.898980,
  4.744563,  5.633250,  6.549834,  7.485281,  8.433981,  9.392304,  2.605551,
  2.741657,  3.123106,  3.690416,  4.385165,  5.164414,  6.000000,  6.874008,
  7.774964,  8.695360,  9.630146,  3.472136,  3.582576,  3.898980,  4.385165,
  5.000000,  5.708204,  6.483315,  7.306623,  8.165152,  9.049875,  9.954452,
  4.385165,  4.477226,  4.744563,  5.164414,  5.708204,  6.348469,  7.062258,
  7.831760,  8.643651,  9.488089, 10.357817,  5.324555,  5.403124,  5.633250,
  6.000000,  6.483315,  7.062258,  7.717798,  8.433981,  9.198039, 10.000000,
 10.832160,  6.280110,  6.348469,  6.549834,  6.874008,  7.306623,  7.831760,
  8.433981,  9.099504,  9.816654, 10.575837, 11.369317,  2.000000,  2.162278,
  2.605551,  3.242640,  4.000000,  4.830952,  5.708204,  6.615773,  7.544003,
  8.486833,  9.440307,  2.162278,  2.316625,  2.741657,  3.358899,  4.099020,
  4.916080,  5.782330,  6.681146,  7.602325,  8.539392,  9.488089,  2.605551,
  2.741657,  3.123106,  3.690416,  4.385165,  5.164414,  6.000000,  6.874008,
  7.774964,  8.695360,  9.630146,  3.242640,  3.358899,  3.690416,  4.196152,
  4.830952,  5.557438,  6.348469,  7.185352,  8.055386,  8.949874,  9.862781,
  4.000000,  4.099020,  4.385165,  4.830952,  5.403124,  6.071068,  6.810250,
  7.602325,  8.433981,  9.295630, 10.180340,  4.830952,  4.916080,  5.164414,
  5.557438,  6.071068,  6.681146,  7.366600,  8.110434,  8.899495,  9.723805,
 10.575837,  5.708204,  5.782330,  6.000000,  6.348469,  6.810250,  7.366600,
  8.000000,  8.695360,  9.440307, 10.224972, 11.041595,  6.615773,  6.681146,
  6.874008,  7.185352,  7.602325,  8.110434,  8.695360,  9.344080, 10.045361,
 10.789826, 11.569805,  3.000000,  3.123106,  3.472136,  4.000000,  4.656854,
  5.403124,  6.211102,  7.062258,  7.944272,  8.848858,  9.770329,  3.123106,
  3.242640,  3.582576,  4.099020,  4.744563,  5.480741,  6.280110,  7.124039,
  8.000000,  8.899495,  9.816654,  3.472136,  3.582576,  3.898980,  4.385165,
  5.000000,  5.708204,  6.483315,  7.306623,  8.165152,  9.049875,  9.954452,
  4.000000,  4.099020,  4.385165,  4.830952,  5.403124,  6.071068,  6.810250,
  7.602325,  8.433981,  9.295630, 10.180340,  4.656854,  4.744563,  5.000000,
  5.403124,  5.928203,  6.549834,  7.246211,  8.000000,  8.797959,  9.630146,
 10.489125,  5.403124,  5.480741,  5.708204,  6.071068,  6.549834,  7.124039,
  7.774964,  8.486833,  9.246951, 10.045361, 10.874342,  6.211102,  6.280110,
  6.483315,  6.810250,  7.246211,  7.774964,  8.380832,  9.049875,  9.770329,
 10.532562, 11.328828,  7.062258,  7.124039,  7.306623,  7.602325,  8.000000,
  8.486833,  9.049875,  9.677078, 10.357817, 11.083046, 11.845233},
/*
  print, xvel - 2, format = '(7(F10.6, :,  ","))'
*/
{-2.000000, -1.000000,  0.000000,  1.000000,  2.000000,  3.000000,  4.000000,
  5.000000,  6.000000,  7.000000,  8.000000, -1.000000, -0.585786,  0.236068,
  1.162278,  2.123106,  3.099020,  4.082763,  5.071068,  6.062258,  7.055386,
  8.049875,  0.000000,  0.236068,  0.828427,  1.605551,  2.472136,  3.385165,
  4.324555,  5.280110,  6.246211,  7.219544,  8.198039,  1.000000,  1.162278,
  1.605551,  2.242640,  3.000000,  3.830952,  4.708204,  5.615773,  6.544003,
  7.486833,  8.440307,  2.000000,  2.123106,  2.472136,  3.000000,  3.656854,
  4.403124,  5.211102,  6.062258,  6.944272,  7.848858,  8.770329,  3.000000,
  3.099020,  3.385165,  3.830952,  4.403124,  5.071068,  5.810250,  6.602325,
  7.433981,  8.295630,  9.180340,  4.000000,  4.082763,  4.324555,  4.708204,
  5.211102,  5.810250,  6.485281,  7.219544,  8.000000,  8.816654,  9.661903,
  5.000000,  5.071068,  5.280110,  5.615773,  6.062258,  6.602325,  7.219544,
  7.899495,  8.630146,  9.401754, 10.206555, -1.000000, -0.585786,  0.236068,
  1.162278,  2.123106,  3.099020,  4.082763,  5.071068,  6.062258,  7.055386,
  8.049875, -0.585786, -0.267949,  0.449490,  1.316625,  2.242640,  3.196152,
  4.164414,  5.141428,  6.124039,  7.110434,  8.099504,  0.236068,  0.449490,
  1.000000,  1.741657,  2.582576,  3.477226,  4.403124,  5.348469,  6.306623,
  7.273619,  8.246951,  1.162278,  1.316625,  1.741657,  2.358899,  3.099020,
  3.916080,  4.782330,  5.681146,  6.602325,  7.539392,  8.488089,  2.123106,
  2.242640,  2.582576,  3.099020,  3.744563,  4.480741,  5.280110,  6.124039,
  7.000000,  7.899495,  8.816654,  3.099020,  3.196152,  3.477226,  3.916080,
  4.480741,  5.141428,  5.874008,  6.660254,  7.486833,  8.344080,  9.224972,
  4.082763,  4.164414,  4.403124,  4.782330,  5.280110,  5.874008,  6.544003,
  7.273619,  8.049875,  8.862781,  9.704700,  5.071068,  5.141428,  5.348469,
  5.681146,  6.124039,  6.660254,  7.273619,  7.949874,  8.677078,  9.445523,
 10.247449,  0.000000,  0.236068,  0.828427,  1.605551,  2.472136,  3.385165,
  4.324555,  5.280110,  6.246211,  7.219544,  8.198039,  0.236068,  0.449490,
  1.000000,  1.741657,  2.582576,  3.477226,  4.403124,  5.348469,  6.306623,
  7.273619,  8.246951,  0.828427,  1.000000,  1.464102,  2.123106,  2.898980,
  3.744563,  4.633250,  5.549834,  6.485281,  7.433981,  8.392304,  1.605551,
  1.741657,  2.123106,  2.690416,  3.385165,  4.164414,  5.000000,  5.874008,
  6.774964,  7.695360,  8.630146,  2.472136,  2.582576,  2.898980,  3.385165,
  4.000000,  4.708204,  5.483315,  6.306623,  7.165152,  8.049875,  8.954452,
  3.385165,  3.477226,  3.744563,  4.164414,  4.708204,  5.348469,  6.062258,
  6.831760,  7.643651,  8.488089,  9.357817,  4.324555,  4.403124,  4.633250,
  5.000000,  5.483315,  6.062258,  6.717798,  7.433981,  8.198039,  9.000000,
  9.832160,  5.280110,  5.348469,  5.549834,  5.874008,  6.306623,  6.831760,
  7.433981,  8.099504,  8.816654,  9.575837, 10.369317,  1.000000,  1.162278,
  1.605551,  2.242640,  3.000000,  3.830952,  4.708204,  5.615773,  6.544003,
  7.486833,  8.440307,  1.162278,  1.316625,  1.741657,  2.358899,  3.099020,
  3.916080,  4.782330,  5.681146,  6.602325,  7.539392,  8.488089,  1.605551,
  1.741657,  2.123106,  2.690416,  3.385165,  4.164414,  5.000000,  5.874008,
  6.774964,  7.695360,  8.630146,  2.242640,  2.358899,  2.690416,  3.196152,
  3.830952,  4.557438,  5.348469,  6.185352,  7.055386,  7.949874,  8.862781,
  3.000000,  3.099020,  3.385165,  3.830952,  4.403124,  5.071068,  5.810250,
  6.602325,  7.433981,  8.295630,  9.180340,  3.830952,  3.916080,  4.164414,
  4.557438,  5.071068,  5.681146,  6.366600,  7.110434,  7.899495,  8.723805,
  9.575837,  4.708204,  4.782330,  5.000000,  5.348469,  5.810250,  6.366600,
  7.000000,  7.695360,  8.440307,  9.224972, 10.041595,  5.615773,  5.681146,
  5.874008,  6.185352,  6.602325,  7.110434,  7.695360,  8.344080,  9.045361,
  9.789826, 10.569805,  2.000000,  2.123106,  2.472136,  3.000000,  3.656854,
  4.403124,  5.211102,  6.062258,  6.944272,  7.848858,  8.770329,  2.123106,
  2.242640,  2.582576,  3.099020,  3.744563,  4.480741,  5.280110,  6.124039,
  7.000000,  7.899495,  8.816654,  2.472136,  2.582576,  2.898980,  3.385165,
  4.000000,  4.708204,  5.483315,  6.306623,  7.165152,  8.049875,  8.954452,
  3.000000,  3.099020,  3.385165,  3.830952,  4.403124,  5.071068,  5.810250,
  6.602325,  7.433981,  8.295630,  9.180340,  3.656854,  3.744563,  4.000000,
  4.403124,  4.928203,  5.549834,  6.246211,  7.000000,  7.797959,  8.630146,
  9.489125,  4.403124,  4.480741,  4.708204,  5.071068,  5.549834,  6.124039,
  6.774964,  7.486833,  8.246951,  9.045361,  9.874342,  5.211102,  5.280110,
  5.483315,  5.810250,  6.246211,  6.774964,  7.380832,  8.049875,  8.770329,
  9.532562, 10.328828,  6.062258,  6.124039,  6.306623,  6.602325,  7.000000,
  7.486833,  8.049875,  8.677078,  9.357817, 10.083046, 10.845233},
/*
  print, xvel - 3, format = '(7(F10.6, :,  ","))'
*/
{-3.000000, -2.000000, -1.000000,  0.000000,  1.000000,  2.000000,  3.000000,
  4.000000,  5.000000,  6.000000,  7.000000, -2.000000, -1.585786, -0.763932,
  0.162278,  1.123106,  2.099020,  3.082763,  4.071068,  5.062258,  6.055386,
  7.049875, -1.000000, -0.763932, -0.171573,  0.605551,  1.472136,  2.385165,
  3.324555,  4.280110,  5.246211,  6.219544,  7.198039,  0.000000,  0.162278,
  0.605551,  1.242640,  2.000000,  2.830952,  3.708204,  4.615773,  5.544003,
  6.486833,  7.440307,  1.000000,  1.123106,  1.472136,  2.000000,  2.656854,
  3.403124,  4.211102,  5.062258,  5.944272,  6.848858,  7.770329,  2.000000,
  2.099020,  2.385165,  2.830952,  3.403124,  4.071068,  4.810250,  5.602325,
  6.433981,  7.295630,  8.180340,  3.000000,  3.082763,  3.324555,  3.708204,
  4.211102,  4.810250,  5.485281,  6.219544,  7.000000,  7.816654,  8.661903,
  4.000000,  4.071068,  4.280110,  4.615773,  5.062258,  5.602325,  6.219544,
  6.899495,  7.630146,  8.401754,  9.206555, -2.000000, -1.585786, -0.763932,
  0.162278,  1.123106,  2.099020,  3.082763,  4.071068,  5.062258,  6.055386,
  7.049875, -1.585786, -1.267949, -0.550510,  0.316625,  1.242640,  2.196152,
  3.164414,  4.141428,  5.124039,  6.110434,  7.099504, -0.763932, -0.550510,
  0.000000,  0.741657,  1.582576,  2.477226,  3.403124,  4.348469,  5.306623,
  6.273619,  7.246951,  0.162278,  0.316625,  0.741657,  1.358899,  2.099020,
  2.916080,  3.782330,  4.681146,  5.602325,  6.539392,  7.488089,  1.123106,
  1.242640,  1.582576,  2.099020,  2.744563,  3.480741,  4.280110,  5.124039,
  6.000000,  6.899495,  7.816654,  2.099020,  2.196152,  2.477226,  2.916080,
  3.480741,  4.141428,  4.874008,  5.660254,  6.486833,  7.344080,  8.224972,
  3.082763,  3.164414,  3.403124,  3.782330,  4.280110,  4.874008,  5.544003,
  6.273619,  7.049875,  7.862781,  8.704700,  4.071068,  4.141428,  4.348469,
  4.681146,  5.124039,  5.660254,  6.273619,  6.949874,  7.677078,  8.445523,
  9.247449, -1.000000, -0.763932, -0.171573,  0.605551,  1.472136,  2.385165,
  3.324555,  4.280110,  5.246211,  6.219544,  7.198039, -0.763932, -0.550510,
  0.000000,  0.741657,  1.582576,  2.477226,  3.403124,  4.348469,  5.306623,
  6.273619,  7.246951, -0.171573,  0.000000,  0.464102,  1.123106,  1.898980,
  2.744563,  3.633250,  4.549834,  5.485281,  6.433981,  7.392304,  0.605551,
  0.741657,  1.123106,  1.690416,  2.385165,  3.164414,  4.000000,  4.874008,
  5.774964,  6.695360,  7.630146,  1.472136,  1.582576,  1.898980,  2.385165,
  3.000000,  3.708204,  4.483315,  5.306623,  6.165152,  7.049875,  7.954452,
  2.385165,  2.477226,  2.744563,  3.164414,  3.708204,  4.348469,  5.062258,
  5.831760,  6.643651,  7.488089,  8.357817,  3.324555,  3.403124,  3.633250,
  4.000000,  4.483315,  5.062258,  5.717798,  6.433981,  7.198039,  8.000000,
  8.832160,  4.280110,  4.348469,  4.549834,  4.874008,  5.306623,  5.831760,
  6.433981,  7.099504,  7.816654,  8.575837,  9.369317,  0.000000,  0.162278,
  0.605551,  1.242640,  2.000000,  2.830952,  3.708204,  4.615773,  5.544003,
  6.486833,  7.440307,  0.162278,  0.316625,  0.741657,  1.358899,  2.099020,
  2.916080,  3.782330,  4.681146,  5.602325,  6.539392,  7.488089,  0.605551,
  0.741657,  1.123106,  1.690416,  2.385165,  3.164414,  4.000000,  4.874008,
  5.774964,  6.695360,  7.630146,  1.242640,  1.358899,  1.690416,  2.196152,
  2.830952,  3.557438,  4.348469,  5.185352,  6.055386,  6.949874,  7.862781,
  2.000000,  2.099020,  2.385165,  2.830952,  3.403124,  4.071068,  4.810250,
  5.602325,  6.433981,  7.295630,  8.180340,  2.830952,  2.916080,  3.164414,
  3.557438,  4.071068,  4.681146,  5.366600,  6.110434,  6.899495,  7.723805,
  8.575837,  3.708204,  3.782330,  4.000000,  4.348469,  4.810250,  5.366600,
  6.000000,  6.695360,  7.440307,  8.224972,  9.041595,  4.615773,  4.681146,
  4.874008,  5.185352,  5.602325,  6.110434,  6.695360,  7.344080,  8.045361,
  8.789826,  9.569805,  1.000000,  1.123106,  1.472136,  2.000000,  2.656854,
  3.403124,  4.211102,  5.062258,  5.944272,  6.848858,  7.770329,  1.123106,
  1.242640,  1.582576,  2.099020,  2.744563,  3.480741,  4.280110,  5.124039,
  6.000000,  6.899495,  7.816654,  1.472136,  1.582576,  1.898980,  2.385165,
  3.000000,  3.708204,  4.483315,  5.306623,  6.165152,  7.049875,  7.954452,
  2.000000,  2.099020,  2.385165,  2.830952,  3.403124,  4.071068,  4.810250,
  5.602325,  6.433981,  7.295630,  8.180340,  2.656854,  2.744563,  3.000000,
  3.403124,  3.928203,  4.549834,  5.246211,  6.000000,  6.797959,  7.630146,
  8.489125,  3.403124,  3.480741,  3.708204,  4.071068,  4.549834,  5.124039,
  5.774964,  6.486833,  7.246951,  8.045361,  8.874342,  4.211102,  4.280110,
  4.483315,  4.810250,  5.246211,  5.774964,  6.380832,  7.049875,  7.770329,
  8.532562,  9.328828,  5.062258,  5.124039,  5.306623,  5.602325,  6.000000,
  6.486833,  7.049875,  7.677078,  8.357817,  9.083046,  9.845233}
};

/* Generated in IDL
  nx = 11 & ny = 8 - 1 & nz = 5 - 1
  xflux = dblarr(nx, ny, nz)
  for i = 0, nx - 1 do for j = 0, ny - 1 do for k = 0, nz - 1 do $
    xflux[i, j, k] = i / 100.0 + j + k
*/
double xflux[308] = {
/*
  print, xflux, format = '(7(F10.4, :,  ","))'
*/
    0.0000,    0.0100,    0.0200,    0.0300,    0.0400,    0.0500,    0.0600,
    0.0700,    0.0800,    0.0900,    0.1000,    1.0000,    1.0100,    1.0200,
    1.0300,    1.0400,    1.0500,    1.0600,    1.0700,    1.0800,    1.0900,
    1.1000,    2.0000,    2.0100,    2.0200,    2.0300,    2.0400,    2.0500,
    2.0600,    2.0700,    2.0800,    2.0900,    2.1000,    3.0000,    3.0100,
    3.0200,    3.0300,    3.0400,    3.0500,    3.0600,    3.0700,    3.0800,
    3.0900,    3.1000,    4.0000,    4.0100,    4.0200,    4.0300,    4.0400,
    4.0500,    4.0600,    4.0700,    4.0800,    4.0900,    4.1000,    5.0000,
    5.0100,    5.0200,    5.0300,    5.0400,    5.0500,    5.0600,    5.0700,
    5.0800,    5.0900,    5.1000,    6.0000,    6.0100,    6.0200,    6.0300,
    6.0400,    6.0500,    6.0600,    6.0700,    6.0800,    6.0900,    6.1000,
    1.0000,    1.0100,    1.0200,    1.0300,    1.0400,    1.0500,    1.0600,
    1.0700,    1.0800,    1.0900,    1.1000,    2.0000,    2.0100,    2.0200,
    2.0300,    2.0400,    2.0500,    2.0600,    2.0700,    2.0800,    2.0900,
    2.1000,    3.0000,    3.0100,    3.0200,    3.0300,    3.0400,    3.0500,
    3.0600,    3.0700,    3.0800,    3.0900,    3.1000,    4.0000,    4.0100,
    4.0200,    4.0300,    4.0400,    4.0500,    4.0600,    4.0700,    4.0800,
    4.0900,    4.1000,    5.0000,    5.0100,    5.0200,    5.0300,    5.0400,
    5.0500,    5.0600,    5.0700,    5.0800,    5.0900,    5.1000,    6.0000,
    6.0100,    6.0200,    6.0300,    6.0400,    6.0500,    6.0600,    6.0700,
    6.0800,    6.0900,    6.1000,    7.0000,    7.0100,    7.0200,    7.0300,
    7.0400,    7.0500,    7.0600,    7.0700,    7.0800,    7.0900,    7.1000,
    2.0000,    2.0100,    2.0200,    2.0300,    2.0400,    2.0500,    2.0600,
    2.0700,    2.0800,    2.0900,    2.1000,    3.0000,    3.0100,    3.0200,
    3.0300,    3.0400,    3.0500,    3.0600,    3.0700,    3.0800,    3.0900,
    3.1000,    4.0000,    4.0100,    4.0200,    4.0300,    4.0400,    4.0500,
    4.0600,    4.0700,    4.0800,    4.0900,    4.1000,    5.0000,    5.0100,
    5.0200,    5.0300,    5.0400,    5.0500,    5.0600,    5.0700,    5.0800,
    5.0900,    5.1000,    6.0000,    6.0100,    6.0200,    6.0300,    6.0400,
    6.0500,    6.0600,    6.0700,    6.0800,    6.0900,    6.1000,    7.0000,
    7.0100,    7.0200,    7.0300,    7.0400,    7.0500,    7.0600,    7.0700,
    7.0800,    7.0900,    7.1000,    8.0000,    8.0100,    8.0200,    8.0300,
    8.0400,    8.0500,    8.0600,    8.0700,    8.0800,    8.0900,    8.1000,
    3.0000,    3.0100,    3.0200,    3.0300,    3.0400,    3.0500,    3.0600,
    3.0700,    3.0800,    3.0900,    3.1000,    4.0000,    4.0100,    4.0200,
    4.0300,    4.0400,    4.0500,    4.0600,    4.0700,    4.0800,    4.0900,
    4.1000,    5.0000,    5.0100,    5.0200,    5.0300,    5.0400,    5.0500,
    5.0600,    5.0700,    5.0800,    5.0900,    5.1000,    6.0000,    6.0100,
    6.0200,    6.0300,    6.0400,    6.0500,    6.0600,    6.0700,    6.0800,
    6.0900,    6.1000,    7.0000,    7.0100,    7.0200,    7.0300,    7.0400,
    7.0500,    7.0600,    7.0700,    7.0800,    7.0900,    7.1000,    8.0000,
    8.0100,    8.0200,    8.0300,    8.0400,    8.0500,    8.0600,    8.0700,
    8.0800,    8.0900,    8.1000,    9.0000,    9.0100,    9.0200,    9.0300,
    9.0400,    9.0500,    9.0600,    9.0700,    9.0800,    9.0900,    9.1000
};

/* Generated in IDL
  nx = 11 - 1 & ny = 8 & nz = 5 - 1
  yflux = dblarr(nx, ny, nz)
  for i = 0, nx - 1 do for j = 0, ny - 1 do for k = 0, nz - 1 do $
    yflux[i, j, k] = j / 100.0 + i + k
*/
double yflux[320] = {
/*
  print, yflux, format = '(7(F10.4, :,  ","))'
*/
    0.0000,    1.0000,    2.0000,    3.0000,    4.0000,    5.0000,    6.0000,
    7.0000,    8.0000,    9.0000,    0.0100,    1.0100,    2.0100,    3.0100,
    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,    0.0200,
    1.0200,    2.0200,    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,
    8.0200,    9.0200,    0.0300,    1.0300,    2.0300,    3.0300,    4.0300,
    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,    0.0400,    1.0400,
    2.0400,    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,
    9.0400,    0.0500,    1.0500,    2.0500,    3.0500,    4.0500,    5.0500,
    6.0500,    7.0500,    8.0500,    9.0500,    0.0600,    1.0600,    2.0600,
    3.0600,    4.0600,    5.0600,    6.0600,    7.0600,    8.0600,    9.0600,
    0.0700,    1.0700,    2.0700,    3.0700,    4.0700,    5.0700,    6.0700,
    7.0700,    8.0700,    9.0700,    1.0000,    2.0000,    3.0000,    4.0000,
    5.0000,    6.0000,    7.0000,    8.0000,    9.0000,   10.0000,    1.0100,
    2.0100,    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,
    9.0100,   10.0100,    1.0200,    2.0200,    3.0200,    4.0200,    5.0200,
    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,    1.0300,    2.0300,
    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,
   10.0300,    1.0400,    2.0400,    3.0400,    4.0400,    5.0400,    6.0400,
    7.0400,    8.0400,    9.0400,   10.0400,    1.0500,    2.0500,    3.0500,
    4.0500,    5.0500,    6.0500,    7.0500,    8.0500,    9.0500,   10.0500,
    1.0600,    2.0600,    3.0600,    4.0600,    5.0600,    6.0600,    7.0600,
    8.0600,    9.0600,   10.0600,    1.0700,    2.0700,    3.0700,    4.0700,
    5.0700,    6.0700,    7.0700,    8.0700,    9.0700,   10.0700,    2.0000,
    3.0000,    4.0000,    5.0000,    6.0000,    7.0000,    8.0000,    9.0000,
   10.0000,   11.0000,    2.0100,    3.0100,    4.0100,    5.0100,    6.0100,
    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,    2.0200,    3.0200,
    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,
   11.0200,    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,
    8.0300,    9.0300,   10.0300,   11.0300,    2.0400,    3.0400,    4.0400,
    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,
    2.0500,    3.0500,    4.0500,    5.0500,    6.0500,    7.0500,    8.0500,
    9.0500,   10.0500,   11.0500,    2.0600,    3.0600,    4.0600,    5.0600,
    6.0600,    7.0600,    8.0600,    9.0600,   10.0600,   11.0600,    2.0700,
    3.0700,    4.0700,    5.0700,    6.0700,    7.0700,    8.0700,    9.0700,
   10.0700,   11.0700,    3.0000,    4.0000,    5.0000,    6.0000,    7.0000,
    8.0000,    9.0000,   10.0000,   11.0000,   12.0000,    3.0100,    4.0100,
    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,
   12.0100,    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,
    9.0200,   10.0200,   11.0200,   12.0200,    3.0300,    4.0300,    5.0300,
    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,
    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,
   10.0400,   11.0400,   12.0400,    3.0500,    4.0500,    5.0500,    6.0500,
    7.0500,    8.0500,    9.0500,   10.0500,   11.0500,   12.0500,    3.0600,
    4.0600,    5.0600,    6.0600,    7.0600,    8.0600,    9.0600,   10.0600,
   11.0600,   12.0600,    3.0700,    4.0700,    5.0700,    6.0700,    7.0700,
    8.0700,    9.0700,   10.0700,   11.0700,   12.0700
};

/* Generated in IDL
  nx = 11 - 1 & ny = 8 - 1 & nz = 5
  zflux = dblarr(nx, ny, nz)
  for i = 0, nx - 1 do for j = 0, ny - 1 do for k = 0, nz - 1 do $
    zflux[i, j, k] = k / 100.0 + i + j
*/
double zflux[350] = {
/*
  print, zflux, format = '(7(F10.4, :,  ","))'
*/
    0.0000,    1.0000,    2.0000,    3.0000,    4.0000,    5.0000,    6.0000,
    7.0000,    8.0000,    9.0000,    1.0000,    2.0000,    3.0000,    4.0000,
    5.0000,    6.0000,    7.0000,    8.0000,    9.0000,   10.0000,    2.0000,
    3.0000,    4.0000,    5.0000,    6.0000,    7.0000,    8.0000,    9.0000,
   10.0000,   11.0000,    3.0000,    4.0000,    5.0000,    6.0000,    7.0000,
    8.0000,    9.0000,   10.0000,   11.0000,   12.0000,    4.0000,    5.0000,
    6.0000,    7.0000,    8.0000,    9.0000,   10.0000,   11.0000,   12.0000,
   13.0000,    5.0000,    6.0000,    7.0000,    8.0000,    9.0000,   10.0000,
   11.0000,   12.0000,   13.0000,   14.0000,    6.0000,    7.0000,    8.0000,
    9.0000,   10.0000,   11.0000,   12.0000,   13.0000,   14.0000,   15.0000,
    0.0100,    1.0100,    2.0100,    3.0100,    4.0100,    5.0100,    6.0100,
    7.0100,    8.0100,    9.0100,    1.0100,    2.0100,    3.0100,    4.0100,
    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,    2.0100,
    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,
   10.0100,   11.0100,    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,
    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,    4.0100,    5.0100,
    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,
   13.0100,    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,
   11.0100,   12.0100,   13.0100,   14.0100,    6.0100,    7.0100,    8.0100,
    9.0100,   10.0100,   11.0100,   12.0100,   13.0100,   14.0100,   15.0100,
    0.0200,    1.0200,    2.0200,    3.0200,    4.0200,    5.0200,    6.0200,
    7.0200,    8.0200,    9.0200,    1.0200,    2.0200,    3.0200,    4.0200,
    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,    2.0200,
    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,
   10.0200,   11.0200,    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,
    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,    4.0200,    5.0200,
    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,
   13.0200,    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,
   11.0200,   12.0200,   13.0200,   14.0200,    6.0200,    7.0200,    8.0200,
    9.0200,   10.0200,   11.0200,   12.0200,   13.0200,   14.0200,   15.0200,
    0.0300,    1.0300,    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,
    7.0300,    8.0300,    9.0300,    1.0300,    2.0300,    3.0300,    4.0300,
    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,    2.0300,
    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,
   10.0300,   11.0300,    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,
    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,    4.0300,    5.0300,
    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,
   13.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,
   11.0300,   12.0300,   13.0300,   14.0300,    6.0300,    7.0300,    8.0300,
    9.0300,   10.0300,   11.0300,   12.0300,   13.0300,   14.0300,   15.0300,
    0.0400,    1.0400,    2.0400,    3.0400,    4.0400,    5.0400,    6.0400,
    7.0400,    8.0400,    9.0400,    1.0400,    2.0400,    3.0400,    4.0400,
    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,    2.0400,
    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,
   10.0400,   11.0400,    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,
    8.0400,    9.0400,   10.0400,   11.0400,   12.0400,    4.0400,    5.0400,
    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,   12.0400,
   13.0400,    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,
   11.0400,   12.0400,   13.0400,   14.0400,    6.0400,    7.0400,    8.0400,
    9.0400,   10.0400,   11.0400,   12.0400,   13.0400,   14.0400,   15.0400
};

matchunk matchunk_3d[] = {
  {material_3d, ncomp_3d, ptr_3d, mixmat_3d, vf_3d}};

quantchunk var_chunk_3d[][5]= {
  {{density[0], NULL},
   {xvel[0],    NULL},
   {xflux,      NULL},
   {yflux,      NULL},
   {zflux,      NULL}},
  {{density[1], NULL},
   {xvel[1],    NULL},
   {xflux,      NULL},
   {yflux,      NULL},
   {zflux,      NULL}},
  {{density[2], NULL},
   {xvel[2],    NULL},
   {xflux,      NULL},
   {yflux,      NULL},
   {zflux,      NULL}},
  {{density[3], NULL},
   {xvel[3],    NULL},
   {xflux,      NULL},
   {yflux,      NULL},
   {zflux,      NULL}}};

char matnames_3d[][TIO_STRLEN] = {"Inner Shell", "Special", "Middle", "Special", "Outer"};

matinfo mat_3d[] = {
  {"Material", 5, matnames_3d, TIO_GHOSTS_NONE, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, matchunk_3d}};


quantinfo var_3d[][5]= {
  {{"Density",    TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[0][0]},
   {"X-Velocity", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[0][1]},
   {"XFlux",    TIO_CENTRE_FACE_I, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[0][2]},
   {"YFlux",    TIO_CENTRE_FACE_J, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[0][3]},
   {"ZFlux",    TIO_CENTRE_FACE_K, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[0][4]}},
  {{"Density",    TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[1][0]},
   {"X-Velocity", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[1][1]},
   {"XFlux",    TIO_CENTRE_FACE_I, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[1][2]},
   {"YFlux",    TIO_CENTRE_FACE_J, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[1][3]},
   {"ZFlux",    TIO_CENTRE_FACE_K, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[1][4]}},
  {{"Density",    TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[2][0]},
   {"X-Velocity", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[2][1]},
   {"XFlux",    TIO_CENTRE_FACE_I, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[2][2]},
   {"YFlux",    TIO_CENTRE_FACE_J, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[2][3]},
   {"ZFlux",    TIO_CENTRE_FACE_K, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[2][4]}},
  {{"Density",    TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[3][0]},
   {"X-Velocity", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[3][1]},
   {"XFlux",    TIO_CENTRE_FACE_I, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[3][2]},
   {"YFlux",    TIO_CENTRE_FACE_J, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[3][3]},
   {"ZFlux",    TIO_CENTRE_FACE_K, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &var_chunk_3d[3][4]}}};

chunkinfo chunk_3d = {TIO_3D, 0,  10, 0, 7, 0, 4, x, y, z, 187, 374};

meshinfo mesh_3d[] = {
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1, TIO_3D, 
   11, 8, 5, 0, 1, &chunk_3d, "xunits", "yunits", "zunits", "x axis", "y axis",
   "z axis", mat_3d, 5, var_3d[0]},
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1, TIO_3D,
   11, 8, 5, 0, 1, &chunk_3d, "xunits", "yunits", "zunits", "x axis", "y axis",
   "z axis", mat_3d, 5, var_3d[1]},
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1, TIO_3D,
   11, 8, 5, 0, 1, &chunk_3d, "xunits", "yunits", "zunits", "x axis", "y axis",
   "z axis", mat_3d, 5, var_3d[2]},
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1, TIO_3D,
   11, 8, 5, 0, 1, &chunk_3d, "xunits", "yunits", "zunits", "x axis", "y axis",
   "z axis", mat_3d, 5, var_3d[3]}};

stateinfo state_3d[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_3d[0]},
  {"State001", 100, 1.01, "us", 1, &mesh_3d[1]},
  {"State002", 200, 2.01, "us", 1, &mesh_3d[2]},
  {"State003", 300, 3.01, "us", 1, &mesh_3d[3]}};

/******************************* 3D Chunked Dummy Data *******************************/

/* Generated in IDL
  ; node range for chunks
  c0 = [0, 5,  0, 4, 0, 2]
  c1 = [5, 10, 0, 4, 0, 2]
  c2 = [0, 5,  4, 7, 0, 2]
  c3 = [5, 10, 4, 7, 0, 2]
  c4 = [0, 5,  0, 4, 2, 4]
  c5 = [5, 10, 0, 4, 2, 4]
  c6 = [0, 5,  4, 7, 2, 4]
  c7 = [5, 10, 4, 7, 2, 4]
  ng = 1

  mat = intarr(c[1]-c[0] + 2*ng, c[3]-c[2] + 2*ng, c[5]-c[4] + 2*ng) + 5
  r = [4, 6, 8, 10]
  nmix = 0
  ncomp = [0]
  mixmat = [0]
  ptr = [0]
  vf = [0.0]
  
  for m = 4, 1, -1 do for i = 0, c[1] - c[0] - 1 + 2 * ng do $
   for j = 0, c[3] - c[2] - 1 + 2 * ng do $
   for k = 0, c[5] -c[4] - 1 + 2 * ng do begin & $
    out = r[m - 1] - sqrt((c[0]+i+1-ng)^2 + (c[2]+j+1-ng)^2 + (c[4]+k+1-ng)^2) & $
    in =  r[m - 1] - sqrt((c[0]+i-ng)^2 + (c[2]+j-ng)^2 + (c[4]+k-ng)^2) & $
    if out ge 0 then mat[i, j, k] = m & $
    if in gt 0 and out lt 0 then begin & $
      if mat[i, j, k] gt 0 then begin & $
        nmix = nmix + 1 & $
        ptr = [ptr, n_elements(mixmat)] & $
        ncomp = [ncomp, 2] & $
        mixmat = [mixmat, m, mat[i, j, k]] & $
        frac = - in / (out - in) & $
        vf = [vf, frac, 1.0 - frac] & $ 
        mat[i, j, k] = -nmix & $
      endif else begin & $
stop & $ ; code for 3 or more materials in cell
      endelse & $
    endif & $
  endfor
  print, nmix, total(ncomp)
*/
int c_3d_mat0[] = {
/*
  print, mat, format = '(10(i4, :,  ","))'
*/
   1,   1,   1,   1,   1,   2,   2,   1,   1,   1,
   1, -69,   2, -24,   1,   1,   1,   1, -73,   2,
 -28,   1,   1,   1, -59, -77,   2, -32,   1, -44,
 -51, -63,   2, -14, -36,   2,   2,   2,   2,  -7,
 -18,   3,   1,   1,   1,   1, -66,   2, -21,   1,
   1,   1,   1, -70,   2, -25,   1,   1,   1,   1,
 -74,   2, -29,   1,   1,   1, -60, -78,   2, -33,
 -40, -45, -52, -64,   2, -15, -37,   2,   2,   2,
   2,  -8, -19,   3,   1,   1,   1,   1, -67,   2,
 -22,   1,   1,   1,   1, -71,   2, -26,   1,   1,
   1, -57, -75,   2, -30,   1,   1, -49, -61, -79,
 -12, -34, -41, -46, -53, -65,   2, -16, -38,   2,
   2,   2,  -4,  -9, -20,  -1,   1,   1,   1, -55,
 -68,   2, -23,   1,   1,   1, -56, -72,   2, -27,
   1,   1, -48, -58, -76, -11, -31, -39, -43, -50,
 -62,   2, -13, -35, -42, -47, -54,   2,  -6, -17,
   3,   2,   2,  -3,  -5, -10,   3,  -2
};

int c_3d_ncomp0[] = {
/*
  print, ncomp[1:*], format = '(10(i4, :,  ","))'
*/
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2
};

int c_3d_ptr0[] = {
/*
  print, ptr[1:*], format = '(10(i4, :,  ","))'
*/
   1,   3,   5,   7,   9,  11,  13,  15,  17,  19,
  21,  23,  25,  27,  29,  31,  33,  35,  37,  39,
  41,  43,  45,  47,  49,  51,  53,  55,  57,  59,
  61,  63,  65,  67,  69,  71,  73,  75,  77,  79,
  81,  83,  85,  87,  89,  91,  93,  95,  97,  99,
 101, 103, 105, 107, 109, 111, 113, 115, 117, 119,
 121, 123, 125, 127, 129, 131, 133, 135, 137, 139,
 141, 143, 145, 147, 149, 151, 153, 155, 157
};
int c_3d_mixmat0[] = {
/*
  print, mixmat[1:*], format = '(10(i4, :,  ","))'
*/
   3,   4,   3,   4,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2
};
double c_3d_vf0[] = {
/*
print,vf[1:*], format = '(7(F10.6, :,  ","))'
*/
  0.960634,  0.039366,  0.778943,  0.221057,  0.896061,  0.103939,  0.896061,
  0.103939,  0.663882,  0.336118,  0.764628,  0.235372,  0.690880,  0.309120,
  0.675338,  0.324662,  0.559899,  0.440101,  0.364692,  0.635308,  0.896061,
  0.103939,  0.896061,  0.103939,  0.663882,  0.336118,  0.690880,  0.309120,
  0.675338,  0.324662,  0.559899,  0.440101,  0.364692,  0.635308,  0.192564,
  0.807436,  0.231141,  0.768859,  0.159259,  0.840741,  0.915870,  0.084130,
  0.712376,  0.287624,  0.424682,  0.575318,  0.915870,  0.084130,  0.858801,
  0.141199,  0.690880,  0.309120,  0.440059,  0.559941,  0.712376,  0.287624,
  0.690880,  0.309120,  0.559355,  0.440645,  0.343304,  0.656696,  0.424682,
  0.575318,  0.440059,  0.559941,  0.343304,  0.656696,  0.159259,  0.840741,
  0.064802,  0.935198,  0.116653,  0.883347,  0.053547,  0.946453,  0.804738,
  0.195262,  0.871876,  0.128124,  0.591405,  0.408595,  0.205304,  0.794696,
  0.765498,  0.234502,  0.871876,  0.128124,  0.804738,  0.195262,  0.589821,
  0.410179,  0.264116,  0.735884,  0.926443,  0.073557,  0.926443,  0.073557,
  0.591570,  0.408430,  0.591405,  0.408595,  0.589821,  0.410179,  0.431872,
  0.568128,  0.157190,  0.842810,  0.804738,  0.195262,  0.765498,  0.234502,
  0.926443,  0.073557,  0.591570,  0.408430,  0.804738,  0.195262,  0.765498,
  0.234502,  0.591570,  0.408430,  0.309401,  0.690599,  0.205304,  0.794696,
  0.264116,  0.735884,  0.157190,  0.842810,  0.871876,  0.128124,  0.591405,
  0.408595,  0.205304,  0.794696,  0.871876,  0.128124,  0.804738,  0.195262,
  0.589821,  0.410179,  0.264116,  0.735884,  0.591405,  0.408595,  0.589821,
  0.410179,  0.431872,  0.568128,  0.157190,  0.842810,  0.205304,  0.794696,
  0.264116,  0.735884,  0.157190,  0.842810
};
int c_3d_mat1[] = {
/*
  print, mat, format = '(10(i4, :,  ","))'
*/
   2,   2,   3,   3,   4,   4,   5,   2, -72,   3,
 -43,   4, -10,   5,   2, -76,   3, -47,   4, -14,
   5,   2, -80,   3, -51,   4, -18,   5, -62, -84,
 -32, -55,   4, -22,   5, -66,   3, -36,   4,  -3,
 -26,   5,   2, -69,   3, -40,   4,  -7,   5,   2,
 -73,   3, -44,   4, -11,   5,   2, -77,   3, -48,
   4, -15,   5,   2, -81,   3, -52,   4, -19,   5,
 -63, -85, -33, -56,   4, -23,   5, -67,   3, -37,
   4,  -4, -27,   5,   2, -70,   3, -41,   4,  -8,
   5,   2, -74,   3, -45,   4, -12,   5,   2, -78,
   3, -49,   4, -16,   5, -60, -82,   3, -53,   4,
 -20,   5, -64, -86, -34, -57,  -1, -24,   5, -68,
 -29, -38,   4,  -5, -28,   5,   2, -71,   3, -42,
   4,  -9,   5,   2, -75,   3, -46,   4, -13,   5,
 -59, -79,   3, -50,   4, -17,   5, -61, -83, -31,
 -54,   4, -21,   5, -65,   3, -35, -58,  -2, -25,
   5,   3, -30, -39,   4,  -6,   5,   5
};

int c_3d_ncomp1[] = {
/*
  print, ncomp[1:*], format = '(10(i4, :,  ","))'
*/
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2
};

int c_3d_ptr1[] = {
/*
  print, ptr[1:*], format = '(10(i4, :,  ","))'
*/
   1,   3,   5,   7,   9,  11,  13,  15,  17,  19,
  21,  23,  25,  27,  29,  31,  33,  35,  37,  39,
  41,  43,  45,  47,  49,  51,  53,  55,  57,  59,
  61,  63,  65,  67,  69,  71,  73,  75,  77,  79,
  81,  83,  85,  87,  89,  91,  93,  95,  97,  99,
 101, 103, 105, 107, 109, 111, 113, 115, 117, 119,
 121, 123, 125, 127, 129, 131, 133, 135, 137, 139,
 141, 143, 145, 147, 149, 151, 153, 155, 157, 159,
 161, 163, 165, 167, 169, 171
};
int c_3d_mixmat1[] = {
/*
  print, mixmat[1:*], format = '(10(i4, :,  ","))'
*/
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3
};
double c_3d_vf1[] = {
/*
print,vf[1:*], format = '(7(F10.6, :,  ","))'
*/
  0.965545,  0.034455,  0.805591,  0.194409,  0.771825,  0.228175,  0.754195,
  0.245805,  0.672003,  0.327997,  0.535621,  0.464379,  0.949848,  0.050152,
  0.817913,  0.182087,  0.622601,  0.377399,  0.949848,  0.050152,  0.909501,
  0.090499,  0.792751,  0.207249,  0.615237,  0.384763,  0.817913,  0.182087,
  0.792751,  0.207249,  0.693959,  0.306041,  0.535471,  0.464529,  0.622601,
  0.377399,  0.615237,  0.384763,  0.535471,  0.464529,  0.396150,  0.603850,
  0.374193,  0.625807,  0.385892,  0.614108,  0.325504,  0.674496,  0.205147,
  0.794852,  0.078468,  0.921532,  0.109833,  0.890167,  0.068918,  0.931082,
  0.960634,  0.039366,  0.778943,  0.221057,  0.880580,  0.119420,  0.951358,
  0.048642,  0.912392,  0.087608,  0.798842,  0.201158,  0.624093,  0.375907,
  0.544457,  0.455543,  0.544386,  0.455614,  0.463951,  0.536049,  0.317546,
  0.682454,  0.937189,  0.062811,  0.777141,  0.222859,  0.544970,  0.455030,
  0.937189,  0.062811,  0.889649,  0.110351,  0.751834,  0.248166,  0.544457,
  0.455543,  0.777141,  0.222859,  0.751834,  0.248166,  0.638888,  0.361112,
  0.456735,  0.543265,  0.544970,  0.455030,  0.544457,  0.455543,  0.456735,
  0.543265,  0.299004,  0.700996,  0.252433,  0.747567,  0.277575,  0.722425,
  0.214861,  0.785139,  0.080766,  0.919234,  0.896061,  0.103939,  0.896061,
  0.103939,  0.663882,  0.336118,  0.690880,  0.309120,  0.675338,  0.324662,
  0.559899,  0.440101,  0.364692,  0.635308,  0.192564,  0.807436,  0.231141,
  0.768859,  0.159259,  0.840741,  0.915870,  0.084130,  0.712376,  0.287624,
  0.424682,  0.575318,  0.915870,  0.084130,  0.858801,  0.141199,  0.690880,
  0.309120,  0.440059,  0.559941,  0.712376,  0.287624,  0.690880,  0.309120,
  0.559355,  0.440645,  0.343304,  0.656696,  0.424682,  0.575318,  0.440059,
  0.559941,  0.343304,  0.656696,  0.159259,  0.840741,  0.064802,  0.935198,
  0.116653,  0.883347,  0.053547,  0.946453
};
int c_3d_mat2[] = {
/*
  print, mat, format = '(10(i4, :,  ","))'
*/
   1, -82, -86, -90,   2, -69, -76,   2,   2,   2,
   2, -62, -73,   3,   2, -46, -51, -57, -66,   3,
 -36,   3,   3,   3,   3, -20, -30, -40,   3,  -7,
 -11, -16, -24,   4,   4, -79, -83, -87, -91,   2,
 -70, -77,   2,   2,   2,   2, -63, -74,   3, -43,
 -47, -52, -58, -67,   3, -37,   3,   3,   3,   3,
 -21, -31, -41,  -4,  -8, -12, -17, -25,   4,  -1,
 -80, -84, -88, -92,   2, -71, -78,   2,   2,   2,
 -55, -64, -75, -34, -44, -48, -53, -59, -68, -28,
 -38,   3,   3,   3,   3, -22, -32, -42,  -5,  -9,
 -13, -18, -26,   4,  -2, -81, -85, -89,   2, -61,
 -72,   3,   2,   2, -50, -56, -65,   3, -35, -45,
 -49, -54, -60,   3, -29, -39,   3,   3,   3, -15,
 -23, -33,   4,  -6, -10, -14, -19, -27,   4,  -3
};

int c_3d_ncomp2[] = {
/*
  print, ncomp[1:*], format = '(10(i4, :,  ","))'
*/
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2
};

int c_3d_ptr2[] = {
/*
  print, ptr[1:*], format = '(10(i4, :,  ","))'
*/
   1,   3,   5,   7,   9,  11,  13,  15,  17,  19,
  21,  23,  25,  27,  29,  31,  33,  35,  37,  39,
  41,  43,  45,  47,  49,  51,  53,  55,  57,  59,
  61,  63,  65,  67,  69,  71,  73,  75,  77,  79,
  81,  83,  85,  87,  89,  91,  93,  95,  97,  99,
 101, 103, 105, 107, 109, 111, 113, 115, 117, 119,
 121, 123, 125, 127, 129, 131, 133, 135, 137, 139,
 141, 143, 145, 147, 149, 151, 153, 155, 157, 159,
 161, 163, 165, 167, 169, 171, 173, 175, 177, 179,
 181, 183
};
int c_3d_mixmat2[] = {
/*
  print, mixmat[1:*], format = '(10(i4, :,  ","))'
*/
   4,   5,   4,   5,   4,   5,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2
};
double c_3d_vf2[] = {
/*
print,vf[1:*], format = '(7(F10.6, :,  ","))'
*/
  0.965545,  0.034455,  0.871218,  0.128782,  0.726270,  0.273730,  0.937189,
  0.062811,  0.777141,  0.222859,  0.544970,  0.455030,  0.937189,  0.062811,
  0.889649,  0.110351,  0.751834,  0.248166,  0.544457,  0.455543,  0.777141,
  0.222859,  0.751834,  0.248166,  0.638888,  0.361112,  0.456735,  0.543265,
  0.880580,  0.119420,  0.544970,  0.455030,  0.544457,  0.455543,  0.456735,
  0.543265,  0.299004,  0.700996,  0.951358,  0.048642,  0.912392,  0.087608,
  0.798842,  0.201158,  0.624093,  0.375907,  0.252433,  0.747567,  0.277575,
  0.722425,  0.214861,  0.785139,  0.080766,  0.919234,  0.960634,  0.039366,
  0.778943,  0.221057,  0.544457,  0.455543,  0.544386,  0.455614,  0.463951,
  0.536049,  0.317546,  0.682454,  0.960634,  0.039366,  0.778943,  0.221057,
  0.638888,  0.361112,  0.630667,  0.369333,  0.544651,  0.455349,  0.394501,
  0.605499,  0.093637,  0.906363,  0.129667,  0.870333,  0.080766,  0.919234,
  0.915870,  0.084130,  0.712376,  0.287624,  0.424682,  0.575318,  0.915870,
  0.084130,  0.858801,  0.141199,  0.690880,  0.309120,  0.440059,  0.559941,
  0.896061,  0.103939,  0.712376,  0.287624,  0.690880,  0.309120,  0.559355,
  0.440645,  0.343304,  0.656696,  0.896061,  0.103939,  0.663882,  0.336118,
  0.424682,  0.575318,  0.440059,  0.559941,  0.343304,  0.656696,  0.159259,
  0.840741,  0.764628,  0.235372,  0.690880,  0.309120,  0.675338,  0.324662,
  0.559899,  0.440101,  0.364692,  0.635308,  0.064802,  0.935198,  0.116653,
  0.883347,  0.053547,  0.946453,  0.690880,  0.309120,  0.675338,  0.324662,
  0.559899,  0.440101,  0.364692,  0.635308,  0.192564,  0.807436,  0.231141,
  0.768859,  0.159259,  0.840741,  0.064802,  0.935198,  0.116653,  0.883347,
  0.053547,  0.946453,  0.871876,  0.128124,  0.591405,  0.408595,  0.205304,
  0.794696,  0.871876,  0.128124,  0.804738,  0.195262,  0.589821,  0.410179,
  0.264116,  0.735884,  0.591405,  0.408595,  0.589821,  0.410179,  0.431872,
  0.568128,  0.157190,  0.842810,  0.205304,  0.794696,  0.264116,  0.735884,
  0.157190,  0.842810
};
int c_3d_mat3[] = {
/*
  print, mat, format = '(10(i4, :,  ","))'
*/
 -67, -74, -52, -63,   4, -30,   5, -71,   3, -56,
   4, -22, -34,   5,   3, -45, -60,   4, -26,   5,
   5, -39, -49,   4, -13,   5,   5,   5,   4,   4,
  -6, -17,   5,   5,   5, -68, -75, -53, -64,   4,
 -31,   5, -72,   3, -57,   4, -23, -35,   5,   3,
 -46, -61, -10, -27,   5,   5, -40, -50,   4, -14,
   5,   5,   5,   4,  -1,  -7, -18,   5,   5,   5,
 -69, -76, -54, -65, -20, -32,   5, -73, -43, -58,
   4, -24, -36,   5, -37, -47, -62, -11, -28,   5,
   5, -41, -51,  -4, -15,   5,   5,   5,   4,  -2,
  -8, -19,   5,   5,   5, -70,   3, -55, -66, -21,
 -33,   5,   3, -44, -59,   4, -25,   5,   5, -38,
 -48,   4, -12, -29,   5,   5, -42,   4,  -5, -16,
   5,   5,   5,   4,  -3,  -9,   5,   5,   5,   5
};

int c_3d_ncomp3[] = {
/*
  print, ncomp[1:*], format = '(10(i4, :,  ","))'
*/
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2
};

int c_3d_ptr3[] = {
/*
  print, ptr[1:*], format = '(10(i4, :,  ","))'
*/
   1,   3,   5,   7,   9,  11,  13,  15,  17,  19,
  21,  23,  25,  27,  29,  31,  33,  35,  37,  39,
  41,  43,  45,  47,  49,  51,  53,  55,  57,  59,
  61,  63,  65,  67,  69,  71,  73,  75,  77,  79,
  81,  83,  85,  87,  89,  91,  93,  95,  97,  99,
 101, 103, 105, 107, 109, 111, 113, 115, 117, 119,
 121, 123, 125, 127, 129, 131, 133, 135, 137, 139,
 141, 143, 145, 147, 149, 151
};
int c_3d_mixmat3[] = {
/*
  print, mixmat[1:*], format = '(10(i4, :,  ","))'
*/
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3
};
double c_3d_vf3[] = {
/*
print,vf[1:*], format = '(7(F10.6, :,  ","))'
*/
  0.965545,  0.034455,  0.871218,  0.128782,  0.726270,  0.273730,  0.936031,
  0.063969,  0.788425,  0.211575,  0.535471,  0.464529,  0.535463,  0.464537,
  0.470748,  0.529252,  0.351264,  0.648736,  0.965545,  0.034455,  0.871218,
  0.128782,  0.726270,  0.273730,  0.535471,  0.464529,  0.535463,  0.464537,
  0.470748,  0.529252,  0.351264,  0.648736,  0.036754,  0.963246,  0.068918,
  0.931082,  0.032565,  0.967435,  0.965545,  0.034455,  0.805591,  0.194409,
  0.771825,  0.228175,  0.754195,  0.245805,  0.672003,  0.327997,  0.535621,
  0.464379,  0.385892,  0.614108,  0.396150,  0.603850,  0.339135,  0.660865,
  0.225349,  0.774651,  0.374193,  0.625807,  0.385892,  0.614108,  0.325504,
  0.674496,  0.205147,  0.794852,  0.078468,  0.921532,  0.109833,  0.890167,
  0.068918,  0.931082,  0.960634,  0.039366,  0.778943,  0.221057,  0.544457,
  0.455543,  0.544386,  0.455614,  0.463951,  0.536049,  0.317546,  0.682454,
  0.960634,  0.039366,  0.778943,  0.221057,  0.638888,  0.361112,  0.630667,
  0.369333,  0.544651,  0.455349,  0.394501,  0.605499,  0.093637,  0.906363,
  0.129667,  0.870333,  0.080766,  0.919234,  0.951358,  0.048642,  0.912392,
  0.087608,  0.798842,  0.201158,  0.624093,  0.375907,  0.544457,  0.455543,
  0.544386,  0.455614,  0.463951,  0.536049,  0.317546,  0.682454,  0.093637,
  0.906363,  0.129667,  0.870333,  0.080766,  0.919234,  0.252433,  0.747567,
  0.277575,  0.722425,  0.214861,  0.785139,  0.080766,  0.919234,  0.690880,
  0.309120,  0.675338,  0.324662,  0.559899,  0.440101,  0.364692,  0.635308,
  0.192564,  0.807436,  0.231141,  0.768859,  0.159259,  0.840741,  0.064802,
  0.935198,  0.116653,  0.883347,  0.053547,  0.946453
};
int c_3d_mat4[] = {
/*
  print, mat, format = '(10(i4, :,  ","))'
*/
   1,   1,   1,   1,-100,   2, -56,   1,   1,   1,
   1,-102,   2, -59,   1,   1,   1, -94,-104,   2,
 -62,   1,   1, -85, -97,-106, -49, -65, -72, -79,
 -88, -99,   2, -52, -67,   2,   2,   2, -28, -39,
 -55,  -9,   1,   1,   1, -90,-101,   2, -57,   1,
   1,   1, -92,-103,   2, -60,   1,   1, -83, -95,
-105, -46, -63, -70, -77, -86, -98,   2, -50, -66,
 -73, -80, -89,   2, -36, -53,   3,   2,   2, -21,
 -29, -40,   3, -10,   1, -74, -81, -91,   2, -42,
 -58, -68, -75, -82, -93,   2, -44, -61, -69, -76,
 -84, -96,   2, -47, -64, -71, -78, -87,   2, -34,
 -51,   3,   2,   2,   2, -26, -37, -54,  -7, -14,
 -17, -22, -30, -41,  -3, -11,   2,   2,   2,   2,
 -31, -43,   3,   2,   2,   2,   2, -32, -45,   3,
   2,   2,   2, -24, -33, -48,  -5,   2,   2, -19,
 -25, -35,   3,  -6, -13, -16, -20, -27, -38,  -2,
  -8, -15, -18, -23,   3,  -1,  -4, -12
};

int c_3d_ncomp4[] = {
/*
  print, ncomp[1:*], format = '(10(i4, :,  ","))'
*/
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2
};

int c_3d_ptr4[] = {
/*
  print, ptr[1:*], format = '(10(i4, :,  ","))'
*/
   1,   3,   5,   7,   9,  11,  13,  15,  17,  19,
  21,  23,  25,  27,  29,  31,  33,  35,  37,  39,
  41,  43,  45,  47,  49,  51,  53,  55,  57,  59,
  61,  63,  65,  67,  69,  71,  73,  75,  77,  79,
  81,  83,  85,  87,  89,  91,  93,  95,  97,  99,
 101, 103, 105, 107, 109, 111, 113, 115, 117, 119,
 121, 123, 125, 127, 129, 131, 133, 135, 137, 139,
 141, 143, 145, 147, 149, 151, 153, 155, 157, 159,
 161, 163, 165, 167, 169, 171, 173, 175, 177, 179,
 181, 183, 185, 187, 189, 191, 193, 195, 197, 199,
 201, 203, 205, 207, 209, 211
};
int c_3d_mixmat4[] = {
/*
  print, mixmat[1:*], format = '(10(i4, :,  ","))'
*/
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2
};
double c_3d_vf4[] = {
/*
print,vf[1:*], format = '(7(F10.6, :,  ","))'
*/
  0.927923,  0.072077,  0.927923,  0.072077,  0.927923,  0.072077,  0.618802,
  0.381198,  0.960634,  0.039366,  0.778943,  0.221057,  0.854207,  0.145793,
  0.545181,  0.454819,  0.960634,  0.039366,  0.778943,  0.221057,  0.545181,
  0.454819,  0.261150,  0.738850,  0.690880,  0.309120,  0.690880,  0.309120,
  0.192564,  0.807436,  0.675338,  0.324662,  0.675338,  0.324662,  0.231141,
  0.768859,  0.896061,  0.103939,  0.559899,  0.440101,  0.896061,  0.103939,
  0.559899,  0.440101,  0.159259,  0.840741,  0.896061,  0.103939,  0.663882,
  0.336118,  0.764628,  0.235372,  0.364692,  0.635308,  0.896061,  0.103939,
  0.663882,  0.336118,  0.364692,  0.635308,  0.690880,  0.309120,  0.675338,
  0.324662,  0.559899,  0.440101,  0.764628,  0.235372,  0.364692,  0.635308,
  0.764628,  0.235372,  0.464102,  0.535898,  0.098348,  0.901652,  0.559899,
  0.440101,  0.364692,  0.635308,  0.098348,  0.901652,  0.690880,  0.309120,
  0.192564,  0.807436,  0.675338,  0.324662,  0.231141,  0.768859,  0.896061,
  0.103939,  0.559899,  0.440101,  0.159259,  0.840741,  0.896061,  0.103939,
  0.663882,  0.336118,  0.364692,  0.635308,  0.559899,  0.440101,  0.364692,
  0.635308,  0.098348,  0.901652,  0.159259,  0.840741,  0.712376,  0.287624,
  0.424682,  0.575318,  0.064802,  0.935198,  0.690880,  0.309120,  0.440059,
  0.559941,  0.116653,  0.883347,  0.559355,  0.440645,  0.343304,  0.656696,
  0.053547,  0.946453,  0.343304,  0.656696,  0.159259,  0.840741,  0.053547,
  0.946453,  0.871876,  0.128124,  0.591405,  0.408595,  0.804738,  0.195262,
  0.205304,  0.794696,  0.591405,  0.408595,  0.205304,  0.794696,  0.871876,
  0.128124,  0.804738,  0.195262,  0.589821,  0.410179,  0.765498,  0.234502,
  0.264116,  0.735884,  0.589821,  0.410179,  0.264116,  0.735884,  0.591405,
  0.408595,  0.589821,  0.410179,  0.926443,  0.073557,  0.431872,  0.568128,
  0.926443,  0.073557,  0.591570,  0.408430,  0.157190,  0.842810,  0.431872,
  0.568128,  0.157190,  0.842810,  0.804738,  0.195262,  0.205304,  0.794696,
  0.765498,  0.234502,  0.264116,  0.735884,  0.926443,  0.073557,  0.591570,
  0.408430,  0.157190,  0.842810,  0.591570,  0.408430,  0.309401,  0.690599,
  0.157190,  0.842810,  0.591405,  0.408595,  0.205304,  0.794696,  0.589821,
  0.410179,  0.264116,  0.735884,  0.431872,  0.568128,  0.157190,  0.842810,
  0.157190,  0.842810
};
int c_3d_mat5[] = {
/*
  print, mat, format = '(10(i4, :,  ","))'
*/
   2, -92,   3, -64,   4, -18,   5,   2, -95,   3,
 -67,   4, -22,   5,   2, -98,   3, -70,   4, -26,
   5, -85,-101,   3, -73,   4, -30,   5, -88,-103,
 -57, -76, -10, -33,   5, -91, -44, -61,   4, -14,
 -36,   5,   2, -93,   3, -65,   4, -19,   5,   2,
 -96,   3, -68,   4, -23,   5, -82, -99,   3, -71,
   4, -27,   5, -86,-102, -54, -74,   4, -31,   5,
 -89,   3, -58, -77, -11, -34,   5,   3, -45, -62,
   4, -15,   5,   5, -78, -94, -48, -66,   4, -20,
   5, -80, -97, -50, -69,   4, -24,   5, -83,-100,
 -52, -72,  -6, -28,   5, -87,   3, -55, -75,  -8,
 -32,   5, -90, -42, -59,   4, -12, -35,   5, -38,
 -46, -63,  -2, -16,   5,   5, -79,   3, -49,   4,
  -4, -21,   5, -81,   3, -51,   4,  -5, -25,   5,
 -84, -40, -53,   4,  -7, -29,   5,   3, -41, -56,
   4,  -9,   5,   5, -37, -43, -60,  -1, -13,   5,
   5, -39, -47,   4,  -3, -17,   5,   5
};

int c_3d_ncomp5[] = {
/*
  print, ncomp[1:*], format = '(10(i4, :,  ","))'
*/
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2
};

int c_3d_ptr5[] = {
/*
  print, ptr[1:*], format = '(10(i4, :,  ","))'
*/
   1,   3,   5,   7,   9,  11,  13,  15,  17,  19,
  21,  23,  25,  27,  29,  31,  33,  35,  37,  39,
  41,  43,  45,  47,  49,  51,  53,  55,  57,  59,
  61,  63,  65,  67,  69,  71,  73,  75,  77,  79,
  81,  83,  85,  87,  89,  91,  93,  95,  97,  99,
 101, 103, 105, 107, 109, 111, 113, 115, 117, 119,
 121, 123, 125, 127, 129, 131, 133, 135, 137, 139,
 141, 143, 145, 147, 149, 151, 153, 155, 157, 159,
 161, 163, 165, 167, 169, 171, 173, 175, 177, 179,
 181, 183, 185, 187, 189, 191, 193, 195, 197, 199,
 201, 203, 205
};
int c_3d_mixmat5[] = {
/*
  print, mixmat[1:*], format = '(10(i4, :,  ","))'
*/
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3
};
double c_3d_vf5[] = {
/*
print,vf[1:*], format = '(7(F10.6, :,  ","))'
*/
  0.849844,  0.150156,  0.849844,  0.150156,  0.596275,  0.403725,  0.771825,
  0.228175,  0.754195,  0.245805,  0.965545,  0.034455,  0.672003,  0.327997,
  0.805591,  0.194409,  0.535621,  0.464379,  0.965545,  0.034455,  0.805591,
  0.194409,  0.599846,  0.400154,  0.351264,  0.648736,  0.672003,  0.327997,
  0.535621,  0.464379,  0.351264,  0.648736,  0.122630,  0.877370,  0.817913,
  0.182087,  0.622601,  0.377399,  0.374193,  0.625807,  0.078468,  0.921532,
  0.792751,  0.207249,  0.615237,  0.384763,  0.385892,  0.614108,  0.109833,
  0.890167,  0.693959,  0.306041,  0.535471,  0.464529,  0.325504,  0.674496,
  0.068918,  0.931082,  0.535471,  0.464529,  0.396150,  0.603850,  0.205147,
  0.794852,  0.325504,  0.674496,  0.205147,  0.794852,  0.032565,  0.967435,
  0.068918,  0.931082,  0.927923,  0.072077,  0.927923,  0.072077,  0.618802,
  0.381198,  0.960634,  0.039366,  0.778943,  0.221057,  0.854207,  0.145793,
  0.545181,  0.454819,  0.960634,  0.039366,  0.778943,  0.221057,  0.545181,
  0.454819,  0.261150,  0.738850,  0.951358,  0.048642,  0.544457,  0.455543,
  0.912392,  0.087608,  0.544386,  0.455614,  0.798842,  0.201158,  0.463951,
  0.536049,  0.880580,  0.119420,  0.624093,  0.375907,  0.317546,  0.682454,
  0.798842,  0.201158,  0.624093,  0.375907,  0.394501,  0.605499,  0.113177,
  0.886823,  0.463951,  0.536049,  0.317546,  0.682454,  0.113177,  0.886823,
  0.777141,  0.222859,  0.544970,  0.455030,  0.252433,  0.747567,  0.751834,
  0.248166,  0.544457,  0.455543,  0.277575,  0.722425,  0.638888,  0.361112,
  0.456735,  0.543265,  0.214861,  0.785139,  0.456735,  0.543265,  0.299004,
  0.700996,  0.080766,  0.919234,  0.214861,  0.785139,  0.080766,  0.919234,
  0.690880,  0.309120,  0.192564,  0.807436,  0.675338,  0.324662,  0.231141,
  0.768859,  0.896061,  0.103939,  0.559899,  0.440101,  0.159259,  0.840741,
  0.896061,  0.103939,  0.663882,  0.336118,  0.364692,  0.635308,  0.559899,
  0.440101,  0.364692,  0.635308,  0.098348,  0.901652,  0.159259,  0.840741,
  0.712376,  0.287624,  0.424682,  0.575318,  0.064802,  0.935198,  0.690880,
  0.309120,  0.440059,  0.559941,  0.116653,  0.883347,  0.559355,  0.440645,
  0.343304,  0.656696,  0.053547,  0.946453,  0.343304,  0.656696,  0.159259,
  0.840741,  0.053547,  0.946453
};
int c_3d_mat6[] = {
/*
  print, mat, format = '(10(i4, :,  ","))'
*/
-100,-102,-104,-106,   2, -95, -99,   2,   2,   2,
 -83, -91, -98, -54, -65, -71, -78, -86, -94, -45,
 -58,   3,   3,   3,   3, -36, -49, -61, -12, -17,
 -23, -30, -40,   4,  -6,-101,-103,-105,   2, -88,
 -96,   3,   2,   2, -75, -84, -92,   3, -55, -66,
 -72, -79, -87,   3, -46, -59,   3,   3,   3, -27,
 -37, -50,   4, -13, -18, -24, -31, -41,   4,  -7,
   2,   2,   2, -81, -89, -97, -52, -63, -69, -76,
 -85, -93, -43, -56, -67, -73, -80,   3, -34, -47,
 -60, -10, -15, -21, -28, -38, -51,  -4, -14, -19,
 -25, -32,   4,  -2,  -8, -62, -68, -74, -82, -90,
 -42, -53, -64, -70, -77,   3, -33, -44, -57,   3,
   3, -20, -26, -35, -48,   4, -11, -16, -22, -29,
 -39,   4,  -5,   4,   4,   4,   4,  -1,  -3,  -9
};

int c_3d_ncomp6[] = {
/*
  print, ncomp[1:*], format = '(10(i4, :,  ","))'
*/
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2
};

int c_3d_ptr6[] = {
/*
  print, ptr[1:*], format = '(10(i4, :,  ","))'
*/
   1,   3,   5,   7,   9,  11,  13,  15,  17,  19,
  21,  23,  25,  27,  29,  31,  33,  35,  37,  39,
  41,  43,  45,  47,  49,  51,  53,  55,  57,  59,
  61,  63,  65,  67,  69,  71,  73,  75,  77,  79,
  81,  83,  85,  87,  89,  91,  93,  95,  97,  99,
 101, 103, 105, 107, 109, 111, 113, 115, 117, 119,
 121, 123, 125, 127, 129, 131, 133, 135, 137, 139,
 141, 143, 145, 147, 149, 151, 153, 155, 157, 159,
 161, 163, 165, 167, 169, 171, 173, 175, 177, 179,
 181, 183, 185, 187, 189, 191, 193, 195, 197, 199,
 201, 203, 205, 207, 209, 211
};
int c_3d_mixmat6[] = {
/*
  print, mixmat[1:*], format = '(10(i4, :,  ","))'
*/
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3,   2,   3,   1,   2,
   1,   2,   1,   2,   1,   2,   1,   2,   1,   2,
   1,   2
};
double c_3d_vf6[] = {
/*
print,vf[1:*], format = '(7(F10.6, :,  ","))'
*/
  0.849844,  0.150156,  0.849844,  0.150156,  0.596275,  0.403725,  0.970370,
  0.029630,  0.715089,  0.284911,  0.871218,  0.128782,  0.726270,  0.273730,
  0.535917,  0.464083,  0.303020,  0.696980,  0.951358,  0.048642,  0.544457,
  0.455543,  0.777141,  0.222859,  0.544970,  0.455030,  0.252433,  0.747567,
  0.912392,  0.087608,  0.544386,  0.455614,  0.751834,  0.248166,  0.544457,
  0.455543,  0.277575,  0.722425,  0.960634,  0.039366,  0.798842,  0.201158,
  0.463951,  0.536049,  0.638888,  0.361112,  0.456735,  0.543265,  0.214861,
  0.785139,  0.778943,  0.221057,  0.880580,  0.119420,  0.624093,  0.375907,
  0.317546,  0.682454,  0.456735,  0.543265,  0.299004,  0.700996,  0.080766,
  0.919234,  0.927923,  0.072077,  0.854207,  0.145793,  0.545181,  0.454819,
  0.798842,  0.201158,  0.624093,  0.375907,  0.394501,  0.605499,  0.113177,
  0.886823,  0.214861,  0.785139,  0.080766,  0.919234,  0.927923,  0.072077,
  0.927923,  0.072077,  0.618802,  0.381198,  0.960634,  0.039366,  0.778943,
  0.221057,  0.545181,  0.454819,  0.261150,  0.738850,  0.463951,  0.536049,
  0.317546,  0.682454,  0.113177,  0.886823,  0.854207,  0.145793,  0.545181,
  0.454819,  0.960634,  0.039366,  0.778943,  0.221057,  0.545181,  0.454819,
  0.261150,  0.738850,  0.544651,  0.455349,  0.394501,  0.605499,  0.187596,
  0.812404,  0.080766,  0.919234,  0.690880,  0.309120,  0.690880,  0.309120,
  0.192564,  0.807436,  0.712376,  0.287624,  0.424682,  0.575318,  0.064802,
  0.935198,  0.675338,  0.324662,  0.675338,  0.324662,  0.231141,  0.768859,
  0.690880,  0.309120,  0.440059,  0.559941,  0.116653,  0.883347,  0.559899,
  0.440101,  0.896061,  0.103939,  0.559899,  0.440101,  0.159259,  0.840741,
  0.559355,  0.440645,  0.343304,  0.656696,  0.053547,  0.946453,  0.764628,
  0.235372,  0.364692,  0.635308,  0.896061,  0.103939,  0.663882,  0.336118,
  0.364692,  0.635308,  0.343304,  0.656696,  0.159259,  0.840741,  0.764628,
  0.235372,  0.464102,  0.535898,  0.098348,  0.901652,  0.559899,  0.440101,
  0.364692,  0.635308,  0.098348,  0.901652,  0.053547,  0.946453,  0.559899,
  0.440101,  0.364692,  0.635308,  0.098348,  0.901652,  0.159259,  0.840741,
  0.053547,  0.946453,  0.591405,  0.408595,  0.205304,  0.794696,  0.589821,
  0.410179,  0.264116,  0.735884,  0.431872,  0.568128,  0.157190,  0.842810,
  0.157190,  0.842810
};
int c_3d_mat7[] = {
/*
  print, mat, format = '(10(i4, :,  ","))'
*/
 -74, -78, -64, -72, -29, -40,   5, -77, -56, -68,
   4, -33, -43,   5, -47, -60, -71, -21, -37,   5,
   5, -51, -63, -11, -25,   5,   5,   5,   4,  -5,
 -15, -28,   5,   5,   5, -75,   3, -65, -73, -30,
 -41,   5,   3, -57, -69,   4, -34,   5,   5, -48,
 -61,   4, -22, -38,   5,   5, -52,   4, -12, -26,
   5,   5,   5,   4,  -6, -16,   5,   5,   5,   5,
 -76, -54, -66,   4, -31, -42,   5, -45, -58, -70,
 -19, -35,   5,   5, -49, -62,  -9, -23, -39,   5,
   5, -53,  -3, -13, -27,   5,   5,   5,  -1,  -7,
 -17,   5,   5,   5,   5, -44, -55, -67, -18, -32,
   5,   5, -46, -59,   4, -20, -36,   5,   5, -50,
   4, -10, -24,   5,   5,   5,   4,  -4, -14,   5,
   5,   5,   5,  -2,  -8,   5,   5,   5,   5,   5
};

int c_3d_ncomp7[] = {
/*
  print, ncomp[1:*], format = '(10(i4, :,  ","))'
*/
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2
};

int c_3d_ptr7[] = {
/*
  print, ptr[1:*], format = '(10(i4, :,  ","))'
*/
   1,   3,   5,   7,   9,  11,  13,  15,  17,  19,
  21,  23,  25,  27,  29,  31,  33,  35,  37,  39,
  41,  43,  45,  47,  49,  51,  53,  55,  57,  59,
  61,  63,  65,  67,  69,  71,  73,  75,  77,  79,
  81,  83,  85,  87,  89,  91,  93,  95,  97,  99,
 101, 103, 105, 107, 109, 111, 113, 115, 117, 119,
 121, 123, 125, 127, 129, 131, 133, 135, 137, 139,
 141, 143, 145, 147, 149, 151, 153, 155
};
int c_3d_mixmat7[] = {
/*
  print, mixmat[1:*], format = '(10(i4, :,  ","))'
*/
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   4,   5,   4,   5,
   4,   5,   4,   5,   4,   5,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   3,   4,   3,   4,
   3,   4,   3,   4,   3,   4,   2,   3,   2,   3,
   2,   3,   2,   3,   2,   3
};
double c_3d_vf7[] = {
/*
print,vf[1:*], format = '(7(F10.6, :,  ","))'
*/
  0.849844,  0.150156,  0.596275,  0.403725,  0.970370,  0.029630,  0.715089,
  0.284911,  0.871218,  0.128782,  0.726270,  0.273730,  0.535917,  0.464083,
  0.303020,  0.696980,  0.970370,  0.029630,  0.715089,  0.284911,  0.936031,
  0.063969,  0.788425,  0.211575,  0.596275,  0.403725,  0.362149,  0.637851,
  0.470748,  0.529252,  0.351264,  0.648736,  0.183247,  0.816753,  0.849844,
  0.150156,  0.849844,  0.150156,  0.596275,  0.403725,  0.871218,  0.128782,
  0.726270,  0.273730,  0.535917,  0.464083,  0.303020,  0.696980,  0.470748,
  0.529252,  0.351264,  0.648736,  0.183247,  0.816753,  0.032565,  0.967435,
  0.965545,  0.034455,  0.805591,  0.194409,  0.599846,  0.400154,  0.351264,
  0.648736,  0.672003,  0.327997,  0.535621,  0.464379,  0.351264,  0.648736,
  0.122630,  0.877370,  0.339135,  0.660865,  0.225349,  0.774651,  0.061544,
  0.938456,  0.325504,  0.674496,  0.205147,  0.794852,  0.032565,  0.967435,
  0.068918,  0.931082,  0.927923,  0.072077,  0.927923,  0.072077,  0.618802,
  0.381198,  0.960634,  0.039366,  0.778943,  0.221057,  0.545181,  0.454819,
  0.261150,  0.738850,  0.463951,  0.536049,  0.317546,  0.682454,  0.113177,
  0.886823,  0.854207,  0.145793,  0.545181,  0.454819,  0.960634,  0.039366,
  0.778943,  0.221057,  0.545181,  0.454819,  0.261150,  0.738850,  0.544651,
  0.455349,  0.394501,  0.605499,  0.187596,  0.812404,  0.080766,  0.919234,
  0.798842,  0.201158,  0.624093,  0.375907,  0.394501,  0.605499,  0.113177,
  0.886823,  0.463951,  0.536049,  0.317546,  0.682454,  0.113177,  0.886823,
  0.080766,  0.919234,  0.214861,  0.785139,  0.080766,  0.919234,  0.559899,
  0.440101,  0.364692,  0.635308,  0.098348,  0.901652,  0.159259,  0.840741,
  0.053547,  0.946453
};

/* Generated in IDL
  density = dblarr(c[1]-c[0] + 2*ng, c[3]-c[2] + 2*ng, c[5]-c[4] + 2*ng)
  for i = 0, c[5]-c[4] + 2*ng - 1 do density[*,*,i] = c[4]+i-ng
*/

double c_3d_dens0[] = {
/*
  print, density, format = '(10(F4.1, :,  ","))'
*/
-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,
-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,
-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,
-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,
-1.0,-1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0
};
double c_3d_dens1[] = {
/*
  print, density, format = '(10(F4.1, :,  ","))'
*/
-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,
-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,
-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,
-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,
-1.0,-1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0
};
double c_3d_dens2[] = {
/*
  print, density, format = '(10(F4.1, :,  ","))'
*/
-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,
-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,
-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,
-1.0,-1.0,-1.0,-1.0,-1.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0
};
double c_3d_dens3[] = {
/*
  print, density, format = '(10(F4.1, :,  ","))'
*/
-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,
-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,
-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,
-1.0,-1.0,-1.0,-1.0,-1.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0
};
double c_3d_dens4[] = {
/*
  print, density, format = '(10(F4.1, :,  ","))'
*/
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0
};
double c_3d_dens5[] = {
/*
  print, density, format = '(10(F4.1, :,  ","))'
*/
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0
};
double c_3d_dens6[] = {
/*
  print, density, format = '(10(F4.1, :,  ","))'
*/
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0
};
double c_3d_dens7[] = {
/*
  print, density, format = '(10(F4.1, :,  ","))'
*/
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0
};

/* Generated in IDL
  xvel = dblarr(c[1]-c[0] + 2*ng + 1, c[3]-c[2] + 2*ng + 1, c[5]-c[4] + 2*ng + 1)
  for i = 0, c[1]-c[0] + 2*ng do for j = 0, c[3]-c[2] + 2*ng do for k = 0, c[5]-c[4] + 2*ng do $
    xvel[i, j, k] = sqrt((c[0]+i-ng)^2 +(c[2]+j-ng)^2 + (c[4]+k-ng)^2)
*/
double c_3d_vel0[] = {
/*
  print, xvel, format = '(7(F10.6, :,  ","))'
*/
  1.732051,  1.414214,  1.732051,  2.449490,  3.316625,  4.242640,  5.196152,
  6.164414,  1.414214,  1.000000,  1.414214,  2.236068,  3.162278,  4.123106,
  5.099020,  6.082763,  1.732051,  1.414214,  1.732051,  2.449490,  3.316625,
  4.242640,  5.196152,  6.164414,  2.449490,  2.236068,  2.449490,  3.000000,
  3.741657,  4.582576,  5.477226,  6.403124,  3.316625,  3.162278,  3.316625,
  3.741657,  4.358899,  5.099020,  5.916080,  6.782330,  4.242640,  4.123106,
  4.242640,  4.582576,  5.099020,  5.744563,  6.480741,  7.280110,  5.196152,
  5.099020,  5.196152,  5.477226,  5.916080,  6.480741,  7.141428,  7.874008,
  1.414214,  1.000000,  1.414214,  2.236068,  3.162278,  4.123106,  5.099020,
  6.082763,  1.000000,  0.000000,  1.000000,  2.000000,  3.000000,  4.000000,
  5.000000,  6.000000,  1.414214,  1.000000,  1.414214,  2.236068,  3.162278,
  4.123106,  5.099020,  6.082763,  2.236068,  2.000000,  2.236068,  2.828427,
  3.605551,  4.472136,  5.385165,  6.324555,  3.162278,  3.000000,  3.162278,
  3.605551,  4.242640,  5.000000,  5.830952,  6.708204,  4.123106,  4.000000,
  4.123106,  4.472136,  5.000000,  5.656854,  6.403124,  7.211102,  5.099020,
  5.000000,  5.099020,  5.385165,  5.830952,  6.403124,  7.071068,  7.810250,
  1.732051,  1.414214,  1.732051,  2.449490,  3.316625,  4.242640,  5.196152,
  6.164414,  1.414214,  1.000000,  1.414214,  2.236068,  3.162278,  4.123106,
  5.099020,  6.082763,  1.732051,  1.414214,  1.732051,  2.449490,  3.316625,
  4.242640,  5.196152,  6.164414,  2.449490,  2.236068,  2.449490,  3.000000,
  3.741657,  4.582576,  5.477226,  6.403124,  3.316625,  3.162278,  3.316625,
  3.741657,  4.358899,  5.099020,  5.916080,  6.782330,  4.242640,  4.123106,
  4.242640,  4.582576,  5.099020,  5.744563,  6.480741,  7.280110,  5.196152,
  5.099020,  5.196152,  5.477226,  5.916080,  6.480741,  7.141428,  7.874008,
  2.449490,  2.236068,  2.449490,  3.000000,  3.741657,  4.582576,  5.477226,
  6.403124,  2.236068,  2.000000,  2.236068,  2.828427,  3.605551,  4.472136,
  5.385165,  6.324555,  2.449490,  2.236068,  2.449490,  3.000000,  3.741657,
  4.582576,  5.477226,  6.403124,  3.000000,  2.828427,  3.000000,  3.464102,
  4.123106,  4.898980,  5.744563,  6.633250,  3.741657,  3.605551,  3.741657,
  4.123106,  4.690416,  5.385165,  6.164414,  7.000000,  4.582576,  4.472136,
  4.582576,  4.898980,  5.385165,  6.000000,  6.708204,  7.483315,  5.477226,
  5.385165,  5.477226,  5.744563,  6.164414,  6.708204,  7.348469,  8.062258,
  3.316625,  3.162278,  3.316625,  3.741657,  4.358899,  5.099020,  5.916080,
  6.782330,  3.162278,  3.000000,  3.162278,  3.605551,  4.242640,  5.000000,
  5.830952,  6.708204,  3.316625,  3.162278,  3.316625,  3.741657,  4.358899,
  5.099020,  5.916080,  6.782330,  3.741657,  3.605551,  3.741657,  4.123106,
  4.690416,  5.385165,  6.164414,  7.000000,  4.358899,  4.242640,  4.358899,
  4.690416,  5.196152,  5.830952,  6.557438,  7.348469,  5.099020,  5.000000,
  5.099020,  5.385165,  5.830952,  6.403124,  7.071068,  7.810250,  5.916080,
  5.830952,  5.916080,  6.164414,  6.557438,  7.071068,  7.681146,  8.366600
};
double c_3d_vel1[] = {
/*
  print, xvel, format = '(7(F10.6, :,  ","))'
*/
  4.242640,  5.196152,  6.164414,  7.141428,  8.124039,  9.110434, 10.099504,
 11.090536,  4.123106,  5.099020,  6.082763,  7.071068,  8.062258,  9.055386,
 10.049875, 11.045361,  4.242640,  5.196152,  6.164414,  7.141428,  8.124039,
  9.110434, 10.099504, 11.090536,  4.582576,  5.477226,  6.403124,  7.348469,
  8.306623,  9.273619, 10.246951, 11.224972,  5.099020,  5.916080,  6.782330,
  7.681146,  8.602325,  9.539392, 10.488089, 11.445523,  5.744563,  6.480741,
  7.280110,  8.124039,  9.000000,  9.899495, 10.816654, 11.747340,  6.480741,
  7.141428,  7.874008,  8.660254,  9.486833, 10.344080, 11.224972, 12.124355,
  4.123106,  5.099020,  6.082763,  7.071068,  8.062258,  9.055386, 10.049875,
 11.045361,  4.000000,  5.000000,  6.000000,  7.000000,  8.000000,  9.000000,
 10.000000, 11.000000,  4.123106,  5.099020,  6.082763,  7.071068,  8.062258,
  9.055386, 10.049875, 11.045361,  4.472136,  5.385165,  6.324555,  7.280110,
  8.246211,  9.219544, 10.198039, 11.180340,  5.000000,  5.830952,  6.708204,
  7.615773,  8.544003,  9.486833, 10.440307, 11.401754,  5.656854,  6.403124,
  7.211102,  8.062258,  8.944272,  9.848858, 10.770329, 11.704700,  6.403124,
  7.071068,  7.810250,  8.602325,  9.433981, 10.295630, 11.180340, 12.083046,
  4.242640,  5.196152,  6.164414,  7.141428,  8.124039,  9.110434, 10.099504,
 11.090536,  4.123106,  5.099020,  6.082763,  7.071068,  8.062258,  9.055386,
 10.049875, 11.045361,  4.242640,  5.196152,  6.164414,  7.141428,  8.124039,
  9.110434, 10.099504, 11.090536,  4.582576,  5.477226,  6.403124,  7.348469,
  8.306623,  9.273619, 10.246951, 11.224972,  5.099020,  5.916080,  6.782330,
  7.681146,  8.602325,  9.539392, 10.488089, 11.445523,  5.744563,  6.480741,
  7.280110,  8.124039,  9.000000,  9.899495, 10.816654, 11.747340,  6.480741,
  7.141428,  7.874008,  8.660254,  9.486833, 10.344080, 11.224972, 12.124355,
  4.582576,  5.477226,  6.403124,  7.348469,  8.306623,  9.273619, 10.246951,
 11.224972,  4.472136,  5.385165,  6.324555,  7.280110,  8.246211,  9.219544,
 10.198039, 11.180340,  4.582576,  5.477226,  6.403124,  7.348469,  8.306623,
  9.273619, 10.246951, 11.224972,  4.898980,  5.744563,  6.633250,  7.549834,
  8.485281,  9.433981, 10.392304, 11.357817,  5.385165,  6.164414,  7.000000,
  7.874008,  8.774964,  9.695360, 10.630146, 11.575837,  6.000000,  6.708204,
  7.483315,  8.306623,  9.165152, 10.049875, 10.954452, 11.874342,  6.708204,
  7.348469,  8.062258,  8.831760,  9.643651, 10.488089, 11.357817, 12.247449,
  5.099020,  5.916080,  6.782330,  7.681146,  8.602325,  9.539392, 10.488089,
 11.445523,  5.000000,  5.830952,  6.708204,  7.615773,  8.544003,  9.486833,
 10.440307, 11.401754,  5.099020,  5.916080,  6.782330,  7.681146,  8.602325,
  9.539392, 10.488089, 11.445523,  5.385165,  6.164414,  7.000000,  7.874008,
  8.774964,  9.695360, 10.630146, 11.575837,  5.830952,  6.557438,  7.348469,
  8.185352,  9.055386,  9.949874, 10.862781, 11.789826,  6.403124,  7.071068,
  7.810250,  8.602325,  9.433981, 10.295630, 11.180340, 12.083046,  7.071068,
  7.681146,  8.366600,  9.110434,  9.899495, 10.723805, 11.575837, 12.449900
};
double c_3d_vel2[] = {
/*
  print, xvel, format = '(7(F10.6, :,  ","))'
*/
  3.316625,  3.162278,  3.316625,  3.741657,  4.358899,  5.099020,  5.916080,
  6.782330,  4.242640,  4.123106,  4.242640,  4.582576,  5.099020,  5.744563,
  6.480741,  7.280110,  5.196152,  5.099020,  5.196152,  5.477226,  5.916080,
  6.480741,  7.141428,  7.874008,  6.164414,  6.082763,  6.164414,  6.403124,
  6.782330,  7.280110,  7.874008,  8.544003,  7.141428,  7.071068,  7.141428,
  7.348469,  7.681146,  8.124039,  8.660254,  9.273619,  8.124039,  8.062258,
  8.124039,  8.306623,  8.602325,  9.000000,  9.486833, 10.049875,  3.162278,
  3.000000,  3.162278,  3.605551,  4.242640,  5.000000,  5.830952,  6.708204,
  4.123106,  4.000000,  4.123106,  4.472136,  5.000000,  5.656854,  6.403124,
  7.211102,  5.099020,  5.000000,  5.099020,  5.385165,  5.830952,  6.403124,
  7.071068,  7.810250,  6.082763,  6.000000,  6.082763,  6.324555,  6.708204,
  7.211102,  7.810250,  8.485281,  7.071068,  7.000000,  7.071068,  7.280110,
  7.615773,  8.062258,  8.602325,  9.219544,  8.062258,  8.000000,  8.062258,
  8.246211,  8.544003,  8.944272,  9.433981, 10.000000,  3.316625,  3.162278,
  3.316625,  3.741657,  4.358899,  5.099020,  5.916080,  6.782330,  4.242640,
  4.123106,  4.242640,  4.582576,  5.099020,  5.744563,  6.480741,  7.280110,
  5.196152,  5.099020,  5.196152,  5.477226,  5.916080,  6.480741,  7.141428,
  7.874008,  6.164414,  6.082763,  6.164414,  6.403124,  6.782330,  7.280110,
  7.874008,  8.544003,  7.141428,  7.071068,  7.141428,  7.348469,  7.681146,
  8.124039,  8.660254,  9.273619,  8.124039,  8.062258,  8.124039,  8.306623,
  8.602325,  9.000000,  9.486833, 10.049875,  3.741657,  3.605551,  3.741657,
  4.123106,  4.690416,  5.385165,  6.164414,  7.000000,  4.582576,  4.472136,
  4.582576,  4.898980,  5.385165,  6.000000,  6.708204,  7.483315,  5.477226,
  5.385165,  5.477226,  5.744563,  6.164414,  6.708204,  7.348469,  8.062258,
  6.403124,  6.324555,  6.403124,  6.633250,  7.000000,  7.483315,  8.062258,
  8.717798,  7.348469,  7.280110,  7.348469,  7.549834,  7.874008,  8.306623,
  8.831760,  9.433981,  8.306623,  8.246211,  8.306623,  8.485281,  8.774964,
  9.165152,  9.643651, 10.198039,  4.358899,  4.242640,  4.358899,  4.690416,
  5.196152,  5.830952,  6.557438,  7.348469,  5.099020,  5.000000,  5.099020,
  5.385165,  5.830952,  6.403124,  7.071068,  7.810250,  5.916080,  5.830952,
  5.916080,  6.164414,  6.557438,  7.071068,  7.681146,  8.366600,  6.782330,
  6.708204,  6.782330,  7.000000,  7.348469,  7.810250,  8.366600,  9.000000,
  7.681146,  7.615773,  7.681146,  7.874008,  8.185352,  8.602325,  9.110434,
  9.695360,  8.602325,  8.544003,  8.602325,  8.774964,  9.055386,  9.433981,
  9.899495, 10.440307
};
double c_3d_vel3[] = {
/*
  print, xvel, format = '(7(F10.6, :,  ","))'
*/
  5.099020,  5.916080,  6.782330,  7.681146,  8.602325,  9.539392, 10.488089,
 11.445523,  5.744563,  6.480741,  7.280110,  8.124039,  9.000000,  9.899495,
 10.816654, 11.747340,  6.480741,  7.141428,  7.874008,  8.660254,  9.486833,
 10.344080, 11.224972, 12.124355,  7.280110,  7.874008,  8.544003,  9.273619,
 10.049875, 10.862781, 11.704700, 12.569805,  8.124039,  8.660254,  9.273619,
  9.949874, 10.677078, 11.445523, 12.247449, 13.076696,  9.000000,  9.486833,
 10.049875, 10.677078, 11.357817, 12.083046, 12.845233, 13.638182,  5.000000,
  5.830952,  6.708204,  7.615773,  8.544003,  9.486833, 10.440307, 11.401754,
  5.656854,  6.403124,  7.211102,  8.062258,  8.944272,  9.848858, 10.770329,
 11.704700,  6.403124,  7.071068,  7.810250,  8.602325,  9.433981, 10.295630,
 11.180340, 12.083046,  7.211102,  7.810250,  8.485281,  9.219544, 10.000000,
 10.816654, 11.661903, 12.529964,  8.062258,  8.602325,  9.219544,  9.899495,
 10.630146, 11.401754, 12.206555, 13.038404,  8.944272,  9.433981, 10.000000,
 10.630146, 11.313708, 12.041595, 12.806249, 13.601471,  5.099020,  5.916080,
  6.782330,  7.681146,  8.602325,  9.539392, 10.488089, 11.445523,  5.744563,
  6.480741,  7.280110,  8.124039,  9.000000,  9.899495, 10.816654, 11.747340,
  6.480741,  7.141428,  7.874008,  8.660254,  9.486833, 10.344080, 11.224972,
 12.124355,  7.280110,  7.874008,  8.544003,  9.273619, 10.049875, 10.862781,
 11.704700, 12.569805,  8.124039,  8.660254,  9.273619,  9.949874, 10.677078,
 11.445523, 12.247449, 13.076696,  9.000000,  9.486833, 10.049875, 10.677078,
 11.357817, 12.083046, 12.845233, 13.638182,  5.385165,  6.164414,  7.000000,
  7.874008,  8.774964,  9.695360, 10.630146, 11.575837,  6.000000,  6.708204,
  7.483315,  8.306623,  9.165152, 10.049875, 10.954452, 11.874342,  6.708204,
  7.348469,  8.062258,  8.831760,  9.643651, 10.488089, 11.357817, 12.247449,
  7.483315,  8.062258,  8.717798,  9.433981, 10.198039, 11.000000, 11.832160,
 12.688578,  8.306623,  8.831760,  9.433981, 10.099504, 10.816654, 11.575837,
 12.369317, 13.190906,  9.165152,  9.643651, 10.198039, 10.816654, 11.489125,
 12.206555, 12.961481, 13.747727,  5.830952,  6.557438,  7.348469,  8.185352,
  9.055386,  9.949874, 10.862781, 11.789826,  6.403124,  7.071068,  7.810250,
  8.602325,  9.433981, 10.295630, 11.180340, 12.083046,  7.071068,  7.681146,
  8.366600,  9.110434,  9.899495, 10.723805, 11.575837, 12.449900,  7.810250,
  8.366600,  9.000000,  9.695360, 10.440307, 11.224972, 12.041595, 12.884099,
  8.602325,  9.110434,  9.695360, 10.344080, 11.045361, 11.789826, 12.569805,
 13.379088,  9.433981,  9.899495, 10.440307, 11.045361, 11.704700, 12.409674,
 13.152946, 13.928389
};
double c_3d_vel4[] = {
/*
  print, xvel, format = '(7(F10.6, :,  ","))'
*/
  1.732051,  1.414214,  1.732051,  2.449490,  3.316625,  4.242640,  5.196152,
  6.164414,  1.414214,  1.000000,  1.414214,  2.236068,  3.162278,  4.123106,
  5.099020,  6.082763,  1.732051,  1.414214,  1.732051,  2.449490,  3.316625,
  4.242640,  5.196152,  6.164414,  2.449490,  2.236068,  2.449490,  3.000000,
  3.741657,  4.582576,  5.477226,  6.403124,  3.316625,  3.162278,  3.316625,
  3.741657,  4.358899,  5.099020,  5.916080,  6.782330,  4.242640,  4.123106,
  4.242640,  4.582576,  5.099020,  5.744563,  6.480741,  7.280110,  5.196152,
  5.099020,  5.196152,  5.477226,  5.916080,  6.480741,  7.141428,  7.874008,
  2.449490,  2.236068,  2.449490,  3.000000,  3.741657,  4.582576,  5.477226,
  6.403124,  2.236068,  2.000000,  2.236068,  2.828427,  3.605551,  4.472136,
  5.385165,  6.324555,  2.449490,  2.236068,  2.449490,  3.000000,  3.741657,
  4.582576,  5.477226,  6.403124,  3.000000,  2.828427,  3.000000,  3.464102,
  4.123106,  4.898980,  5.744563,  6.633250,  3.741657,  3.605551,  3.741657,
  4.123106,  4.690416,  5.385165,  6.164414,  7.000000,  4.582576,  4.472136,
  4.582576,  4.898980,  5.385165,  6.000000,  6.708204,  7.483315,  5.477226,
  5.385165,  5.477226,  5.744563,  6.164414,  6.708204,  7.348469,  8.062258,
  3.316625,  3.162278,  3.316625,  3.741657,  4.358899,  5.099020,  5.916080,
  6.782330,  3.162278,  3.000000,  3.162278,  3.605551,  4.242640,  5.000000,
  5.830952,  6.708204,  3.316625,  3.162278,  3.316625,  3.741657,  4.358899,
  5.099020,  5.916080,  6.782330,  3.741657,  3.605551,  3.741657,  4.123106,
  4.690416,  5.385165,  6.164414,  7.000000,  4.358899,  4.242640,  4.358899,
  4.690416,  5.196152,  5.830952,  6.557438,  7.348469,  5.099020,  5.000000,
  5.099020,  5.385165,  5.830952,  6.403124,  7.071068,  7.810250,  5.916080,
  5.830952,  5.916080,  6.164414,  6.557438,  7.071068,  7.681146,  8.366600,
  4.242640,  4.123106,  4.242640,  4.582576,  5.099020,  5.744563,  6.480741,
  7.280110,  4.123106,  4.000000,  4.123106,  4.472136,  5.000000,  5.656854,
  6.403124,  7.211102,  4.242640,  4.123106,  4.242640,  4.582576,  5.099020,
  5.744563,  6.480741,  7.280110,  4.582576,  4.472136,  4.582576,  4.898980,
  5.385165,  6.000000,  6.708204,  7.483315,  5.099020,  5.000000,  5.099020,
  5.385165,  5.830952,  6.403124,  7.071068,  7.810250,  5.744563,  5.656854,
  5.744563,  6.000000,  6.403124,  6.928203,  7.549834,  8.246211,  6.480741,
  6.403124,  6.480741,  6.708204,  7.071068,  7.549834,  8.124039,  8.774964,
  5.196152,  5.099020,  5.196152,  5.477226,  5.916080,  6.480741,  7.141428,
  7.874008,  5.099020,  5.000000,  5.099020,  5.385165,  5.830952,  6.403124,
  7.071068,  7.810250,  5.196152,  5.099020,  5.196152,  5.477226,  5.916080,
  6.480741,  7.141428,  7.874008,  5.477226,  5.385165,  5.477226,  5.744563,
  6.164414,  6.708204,  7.348469,  8.062258,  5.916080,  5.830952,  5.916080,
  6.164414,  6.557438,  7.071068,  7.681146,  8.366600,  6.480741,  6.403124,
  6.480741,  6.708204,  7.071068,  7.549834,  8.124039,  8.774964,  7.141428,
  7.071068,  7.141428,  7.348469,  7.681146,  8.124039,  8.660254,  9.273619
};
double c_3d_vel5[] = {
/*
  print, xvel, format = '(7(F10.6, :,  ","))'
*/
  4.242640,  5.196152,  6.164414,  7.141428,  8.124039,  9.110434, 10.099504,
 11.090536,  4.123106,  5.099020,  6.082763,  7.071068,  8.062258,  9.055386,
 10.049875, 11.045361,  4.242640,  5.196152,  6.164414,  7.141428,  8.124039,
  9.110434, 10.099504, 11.090536,  4.582576,  5.477226,  6.403124,  7.348469,
  8.306623,  9.273619, 10.246951, 11.224972,  5.099020,  5.916080,  6.782330,
  7.681146,  8.602325,  9.539392, 10.488089, 11.445523,  5.744563,  6.480741,
  7.280110,  8.124039,  9.000000,  9.899495, 10.816654, 11.747340,  6.480741,
  7.141428,  7.874008,  8.660254,  9.486833, 10.344080, 11.224972, 12.124355,
  4.582576,  5.477226,  6.403124,  7.348469,  8.306623,  9.273619, 10.246951,
 11.224972,  4.472136,  5.385165,  6.324555,  7.280110,  8.246211,  9.219544,
 10.198039, 11.180340,  4.582576,  5.477226,  6.403124,  7.348469,  8.306623,
  9.273619, 10.246951, 11.224972,  4.898980,  5.744563,  6.633250,  7.549834,
  8.485281,  9.433981, 10.392304, 11.357817,  5.385165,  6.164414,  7.000000,
  7.874008,  8.774964,  9.695360, 10.630146, 11.575837,  6.000000,  6.708204,
  7.483315,  8.306623,  9.165152, 10.049875, 10.954452, 11.874342,  6.708204,
  7.348469,  8.062258,  8.831760,  9.643651, 10.488089, 11.357817, 12.247449,
  5.099020,  5.916080,  6.782330,  7.681146,  8.602325,  9.539392, 10.488089,
 11.445523,  5.000000,  5.830952,  6.708204,  7.615773,  8.544003,  9.486833,
 10.440307, 11.401754,  5.099020,  5.916080,  6.782330,  7.681146,  8.602325,
  9.539392, 10.488089, 11.445523,  5.385165,  6.164414,  7.000000,  7.874008,
  8.774964,  9.695360, 10.630146, 11.575837,  5.830952,  6.557438,  7.348469,
  8.185352,  9.055386,  9.949874, 10.862781, 11.789826,  6.403124,  7.071068,
  7.810250,  8.602325,  9.433981, 10.295630, 11.180340, 12.083046,  7.071068,
  7.681146,  8.366600,  9.110434,  9.899495, 10.723805, 11.575837, 12.449900,
  5.744563,  6.480741,  7.280110,  8.124039,  9.000000,  9.899495, 10.816654,
 11.747340,  5.656854,  6.403124,  7.211102,  8.062258,  8.944272,  9.848858,
 10.770329, 11.704700,  5.744563,  6.480741,  7.280110,  8.124039,  9.000000,
  9.899495, 10.816654, 11.747340,  6.000000,  6.708204,  7.483315,  8.306623,
  9.165152, 10.049875, 10.954452, 11.874342,  6.403124,  7.071068,  7.810250,
  8.602325,  9.433981, 10.295630, 11.180340, 12.083046,  6.928203,  7.549834,
  8.246211,  9.000000,  9.797959, 10.630146, 11.489125, 12.369317,  7.549834,
  8.124039,  8.774964,  9.486833, 10.246951, 11.045361, 11.874342, 12.727922,
  6.480741,  7.141428,  7.874008,  8.660254,  9.486833, 10.344080, 11.224972,
 12.124355,  6.403124,  7.071068,  7.810250,  8.602325,  9.433981, 10.295630,
 11.180340, 12.083046,  6.480741,  7.141428,  7.874008,  8.660254,  9.486833,
 10.344080, 11.224972, 12.124355,  6.708204,  7.348469,  8.062258,  8.831760,
  9.643651, 10.488089, 11.357817, 12.247449,  7.071068,  7.681146,  8.366600,
  9.110434,  9.899495, 10.723805, 11.575837, 12.449900,  7.549834,  8.124039,
  8.774964,  9.486833, 10.246951, 11.045361, 11.874342, 12.727922,  8.124039,
  8.660254,  9.273619,  9.949874, 10.677078, 11.445523, 12.247449, 13.076696
};
double c_3d_vel6[] = {
/*
  print, xvel, format = '(7(F10.6, :,  ","))'
*/
  3.316625,  3.162278,  3.316625,  3.741657,  4.358899,  5.099020,  5.916080,
  6.782330,  4.242640,  4.123106,  4.242640,  4.582576,  5.099020,  5.744563,
  6.480741,  7.280110,  5.196152,  5.099020,  5.196152,  5.477226,  5.916080,
  6.480741,  7.141428,  7.874008,  6.164414,  6.082763,  6.164414,  6.403124,
  6.782330,  7.280110,  7.874008,  8.544003,  7.141428,  7.071068,  7.141428,
  7.348469,  7.681146,  8.124039,  8.660254,  9.273619,  8.124039,  8.062258,
  8.124039,  8.306623,  8.602325,  9.000000,  9.486833, 10.049875,  3.741657,
  3.605551,  3.741657,  4.123106,  4.690416,  5.385165,  6.164414,  7.000000,
  4.582576,  4.472136,  4.582576,  4.898980,  5.385165,  6.000000,  6.708204,
  7.483315,  5.477226,  5.385165,  5.477226,  5.744563,  6.164414,  6.708204,
  7.348469,  8.062258,  6.403124,  6.324555,  6.403124,  6.633250,  7.000000,
  7.483315,  8.062258,  8.717798,  7.348469,  7.280110,  7.348469,  7.549834,
  7.874008,  8.306623,  8.831760,  9.433981,  8.306623,  8.246211,  8.306623,
  8.485281,  8.774964,  9.165152,  9.643651, 10.198039,  4.358899,  4.242640,
  4.358899,  4.690416,  5.196152,  5.830952,  6.557438,  7.348469,  5.099020,
  5.000000,  5.099020,  5.385165,  5.830952,  6.403124,  7.071068,  7.810250,
  5.916080,  5.830952,  5.916080,  6.164414,  6.557438,  7.071068,  7.681146,
  8.366600,  6.782330,  6.708204,  6.782330,  7.000000,  7.348469,  7.810250,
  8.366600,  9.000000,  7.681146,  7.615773,  7.681146,  7.874008,  8.185352,
  8.602325,  9.110434,  9.695360,  8.602325,  8.544003,  8.602325,  8.774964,
  9.055386,  9.433981,  9.899495, 10.440307,  5.099020,  5.000000,  5.099020,
  5.385165,  5.830952,  6.403124,  7.071068,  7.810250,  5.744563,  5.656854,
  5.744563,  6.000000,  6.403124,  6.928203,  7.549834,  8.246211,  6.480741,
  6.403124,  6.480741,  6.708204,  7.071068,  7.549834,  8.124039,  8.774964,
  7.280110,  7.211102,  7.280110,  7.483315,  7.810250,  8.246211,  8.774964,
  9.380832,  8.124039,  8.062258,  8.124039,  8.306623,  8.602325,  9.000000,
  9.486833, 10.049875,  9.000000,  8.944272,  9.000000,  9.165152,  9.433981,
  9.797959, 10.246951, 10.770329,  5.916080,  5.830952,  5.916080,  6.164414,
  6.557438,  7.071068,  7.681146,  8.366600,  6.480741,  6.403124,  6.480741,
  6.708204,  7.071068,  7.549834,  8.124039,  8.774964,  7.141428,  7.071068,
  7.141428,  7.348469,  7.681146,  8.124039,  8.660254,  9.273619,  7.874008,
  7.810250,  7.874008,  8.062258,  8.366600,  8.774964,  9.273619,  9.848858,
  8.660254,  8.602325,  8.660254,  8.831760,  9.110434,  9.486833,  9.949874,
 10.488089,  9.486833,  9.433981,  9.486833,  9.643651,  9.899495, 10.246951,
 10.677078, 11.180340
};
double c_3d_vel7[] = {
/*
  print, xvel, format = '(7(F10.6, :,  ","))'
*/
  5.099020,  5.916080,  6.782330,  7.681146,  8.602325,  9.539392, 10.488089,
 11.445523,  5.744563,  6.480741,  7.280110,  8.124039,  9.000000,  9.899495,
 10.816654, 11.747340,  6.480741,  7.141428,  7.874008,  8.660254,  9.486833,
 10.344080, 11.224972, 12.124355,  7.280110,  7.874008,  8.544003,  9.273619,
 10.049875, 10.862781, 11.704700, 12.569805,  8.124039,  8.660254,  9.273619,
  9.949874, 10.677078, 11.445523, 12.247449, 13.076696,  9.000000,  9.486833,
 10.049875, 10.677078, 11.357817, 12.083046, 12.845233, 13.638182,  5.385165,
  6.164414,  7.000000,  7.874008,  8.774964,  9.695360, 10.630146, 11.575837,
  6.000000,  6.708204,  7.483315,  8.306623,  9.165152, 10.049875, 10.954452,
 11.874342,  6.708204,  7.348469,  8.062258,  8.831760,  9.643651, 10.488089,
 11.357817, 12.247449,  7.483315,  8.062258,  8.717798,  9.433981, 10.198039,
 11.000000, 11.832160, 12.688578,  8.306623,  8.831760,  9.433981, 10.099504,
 10.816654, 11.575837, 12.369317, 13.190906,  9.165152,  9.643651, 10.198039,
 10.816654, 11.489125, 12.206555, 12.961481, 13.747727,  5.830952,  6.557438,
  7.348469,  8.185352,  9.055386,  9.949874, 10.862781, 11.789826,  6.403124,
  7.071068,  7.810250,  8.602325,  9.433981, 10.295630, 11.180340, 12.083046,
  7.071068,  7.681146,  8.366600,  9.110434,  9.899495, 10.723805, 11.575837,
 12.449900,  7.810250,  8.366600,  9.000000,  9.695360, 10.440307, 11.224972,
 12.041595, 12.884099,  8.602325,  9.110434,  9.695360, 10.344080, 11.045361,
 11.789826, 12.569805, 13.379088,  9.433981,  9.899495, 10.440307, 11.045361,
 11.704700, 12.409674, 13.152946, 13.928389,  6.403124,  7.071068,  7.810250,
  8.602325,  9.433981, 10.295630, 11.180340, 12.083046,  6.928203,  7.549834,
  8.246211,  9.000000,  9.797959, 10.630146, 11.489125, 12.369317,  7.549834,
  8.124039,  8.774964,  9.486833, 10.246951, 11.045361, 11.874342, 12.727922,
  8.246211,  8.774964,  9.380832, 10.049875, 10.770329, 11.532562, 12.328828,
 13.152946,  9.000000,  9.486833, 10.049875, 10.677078, 11.357817, 12.083046,
 12.845233, 13.638182,  9.797959, 10.246951, 10.770329, 11.357817, 12.000000,
 12.688578, 13.416408, 14.177447,  7.071068,  7.681146,  8.366600,  9.110434,
  9.899495, 10.723805, 11.575837, 12.449900,  7.549834,  8.124039,  8.774964,
  9.486833, 10.246951, 11.045361, 11.874342, 12.727922,  8.124039,  8.660254,
  9.273619,  9.949874, 10.677078, 11.445523, 12.247449, 13.076696,  8.774964,
  9.273619,  9.848858, 10.488089, 11.180340, 11.916375, 12.688578, 13.490738,
  9.486833,  9.949874, 10.488089, 11.090536, 11.747340, 12.449900, 13.190906,
 13.964240, 10.246951, 10.677078, 11.180340, 11.747340, 12.369317, 13.038404,
 13.747727, 14.491377
};

/* Generated in IDL
  c=c7
  xflux = dblarr(1 + c[1]-c[0] + 2*ng, c[3]-c[2] + 2*ng, c[5]-c[4] + 2*ng)
  for i = 0, c[1]-c[0] + 2*ng do for j = 0, c[3]-c[2] - 1 + 2*ng do $
   for k = 0, c[5]-c[4] - 1 + 2*ng do $
    xflux[i, j, k] = (i + c[0] - ng) / 100.0 + (j + c[2] - ng) + (k + c[4] - ng)
*/

double c_3d_xflux0[] = {
/*
  print, xflux, format = '(7(F10.4, :,  ","))'
*/
   -2.0100,   -2.0000,   -1.9900,   -1.9800,   -1.9700,   -1.9600,   -1.9500,
   -1.9400,   -1.0100,   -1.0000,   -0.9900,   -0.9800,   -0.9700,   -0.9600,
   -0.9500,   -0.9400,   -0.0100,    0.0000,    0.0100,    0.0200,    0.0300,
    0.0400,    0.0500,    0.0600,    0.9900,    1.0000,    1.0100,    1.0200,
    1.0300,    1.0400,    1.0500,    1.0600,    1.9900,    2.0000,    2.0100,
    2.0200,    2.0300,    2.0400,    2.0500,    2.0600,    2.9900,    3.0000,
    3.0100,    3.0200,    3.0300,    3.0400,    3.0500,    3.0600,   -1.0100,
   -1.0000,   -0.9900,   -0.9800,   -0.9700,   -0.9600,   -0.9500,   -0.9400,
   -0.0100,    0.0000,    0.0100,    0.0200,    0.0300,    0.0400,    0.0500,
    0.0600,    0.9900,    1.0000,    1.0100,    1.0200,    1.0300,    1.0400,
    1.0500,    1.0600,    1.9900,    2.0000,    2.0100,    2.0200,    2.0300,
    2.0400,    2.0500,    2.0600,    2.9900,    3.0000,    3.0100,    3.0200,
    3.0300,    3.0400,    3.0500,    3.0600,    3.9900,    4.0000,    4.0100,
    4.0200,    4.0300,    4.0400,    4.0500,    4.0600,   -0.0100,    0.0000,
    0.0100,    0.0200,    0.0300,    0.0400,    0.0500,    0.0600,    0.9900,
    1.0000,    1.0100,    1.0200,    1.0300,    1.0400,    1.0500,    1.0600,
    1.9900,    2.0000,    2.0100,    2.0200,    2.0300,    2.0400,    2.0500,
    2.0600,    2.9900,    3.0000,    3.0100,    3.0200,    3.0300,    3.0400,
    3.0500,    3.0600,    3.9900,    4.0000,    4.0100,    4.0200,    4.0300,
    4.0400,    4.0500,    4.0600,    4.9900,    5.0000,    5.0100,    5.0200,
    5.0300,    5.0400,    5.0500,    5.0600,    0.9900,    1.0000,    1.0100,
    1.0200,    1.0300,    1.0400,    1.0500,    1.0600,    1.9900,    2.0000,
    2.0100,    2.0200,    2.0300,    2.0400,    2.0500,    2.0600,    2.9900,
    3.0000,    3.0100,    3.0200,    3.0300,    3.0400,    3.0500,    3.0600,
    3.9900,    4.0000,    4.0100,    4.0200,    4.0300,    4.0400,    4.0500,
    4.0600,    4.9900,    5.0000,    5.0100,    5.0200,    5.0300,    5.0400,
    5.0500,    5.0600,    5.9900,    6.0000,    6.0100,    6.0200,    6.0300,
    6.0400,    6.0500,    6.0600
};

double c_3d_xflux1[] = {
/*
  print, xflux, format = '(7(F10.4, :,  ","))'
*/
   -1.9600,   -1.9500,   -1.9400,   -1.9300,   -1.9200,   -1.9100,   -1.9000,
   -1.8900,   -0.9600,   -0.9500,   -0.9400,   -0.9300,   -0.9200,   -0.9100,
   -0.9000,   -0.8900,    0.0400,    0.0500,    0.0600,    0.0700,    0.0800,
    0.0900,    0.1000,    0.1100,    1.0400,    1.0500,    1.0600,    1.0700,
    1.0800,    1.0900,    1.1000,    1.1100,    2.0400,    2.0500,    2.0600,
    2.0700,    2.0800,    2.0900,    2.1000,    2.1100,    3.0400,    3.0500,
    3.0600,    3.0700,    3.0800,    3.0900,    3.1000,    3.1100,   -0.9600,
   -0.9500,   -0.9400,   -0.9300,   -0.9200,   -0.9100,   -0.9000,   -0.8900,
    0.0400,    0.0500,    0.0600,    0.0700,    0.0800,    0.0900,    0.1000,
    0.1100,    1.0400,    1.0500,    1.0600,    1.0700,    1.0800,    1.0900,
    1.1000,    1.1100,    2.0400,    2.0500,    2.0600,    2.0700,    2.0800,
    2.0900,    2.1000,    2.1100,    3.0400,    3.0500,    3.0600,    3.0700,
    3.0800,    3.0900,    3.1000,    3.1100,    4.0400,    4.0500,    4.0600,
    4.0700,    4.0800,    4.0900,    4.1000,    4.1100,    0.0400,    0.0500,
    0.0600,    0.0700,    0.0800,    0.0900,    0.1000,    0.1100,    1.0400,
    1.0500,    1.0600,    1.0700,    1.0800,    1.0900,    1.1000,    1.1100,
    2.0400,    2.0500,    2.0600,    2.0700,    2.0800,    2.0900,    2.1000,
    2.1100,    3.0400,    3.0500,    3.0600,    3.0700,    3.0800,    3.0900,
    3.1000,    3.1100,    4.0400,    4.0500,    4.0600,    4.0700,    4.0800,
    4.0900,    4.1000,    4.1100,    5.0400,    5.0500,    5.0600,    5.0700,
    5.0800,    5.0900,    5.1000,    5.1100,    1.0400,    1.0500,    1.0600,
    1.0700,    1.0800,    1.0900,    1.1000,    1.1100,    2.0400,    2.0500,
    2.0600,    2.0700,    2.0800,    2.0900,    2.1000,    2.1100,    3.0400,
    3.0500,    3.0600,    3.0700,    3.0800,    3.0900,    3.1000,    3.1100,
    4.0400,    4.0500,    4.0600,    4.0700,    4.0800,    4.0900,    4.1000,
    4.1100,    5.0400,    5.0500,    5.0600,    5.0700,    5.0800,    5.0900,
    5.1000,    5.1100,    6.0400,    6.0500,    6.0600,    6.0700,    6.0800,
    6.0900,    6.1000,    6.1100
};

double c_3d_xflux2[] = {
/*
  print, xflux, format = '(7(F10.4, :,  ","))'
*/
    1.9900,    2.0000,    2.0100,    2.0200,    2.0300,    2.0400,    2.0500,
    2.0600,    2.9900,    3.0000,    3.0100,    3.0200,    3.0300,    3.0400,
    3.0500,    3.0600,    3.9900,    4.0000,    4.0100,    4.0200,    4.0300,
    4.0400,    4.0500,    4.0600,    4.9900,    5.0000,    5.0100,    5.0200,
    5.0300,    5.0400,    5.0500,    5.0600,    5.9900,    6.0000,    6.0100,
    6.0200,    6.0300,    6.0400,    6.0500,    6.0600,    2.9900,    3.0000,
    3.0100,    3.0200,    3.0300,    3.0400,    3.0500,    3.0600,    3.9900,
    4.0000,    4.0100,    4.0200,    4.0300,    4.0400,    4.0500,    4.0600,
    4.9900,    5.0000,    5.0100,    5.0200,    5.0300,    5.0400,    5.0500,
    5.0600,    5.9900,    6.0000,    6.0100,    6.0200,    6.0300,    6.0400,
    6.0500,    6.0600,    6.9900,    7.0000,    7.0100,    7.0200,    7.0300,
    7.0400,    7.0500,    7.0600,    3.9900,    4.0000,    4.0100,    4.0200,
    4.0300,    4.0400,    4.0500,    4.0600,    4.9900,    5.0000,    5.0100,
    5.0200,    5.0300,    5.0400,    5.0500,    5.0600,    5.9900,    6.0000,
    6.0100,    6.0200,    6.0300,    6.0400,    6.0500,    6.0600,    6.9900,
    7.0000,    7.0100,    7.0200,    7.0300,    7.0400,    7.0500,    7.0600,
    7.9900,    8.0000,    8.0100,    8.0200,    8.0300,    8.0400,    8.0500,
    8.0600,    4.9900,    5.0000,    5.0100,    5.0200,    5.0300,    5.0400,
    5.0500,    5.0600,    5.9900,    6.0000,    6.0100,    6.0200,    6.0300,
    6.0400,    6.0500,    6.0600,    6.9900,    7.0000,    7.0100,    7.0200,
    7.0300,    7.0400,    7.0500,    7.0600,    7.9900,    8.0000,    8.0100,
    8.0200,    8.0300,    8.0400,    8.0500,    8.0600,    8.9900,    9.0000,
    9.0100,    9.0200,    9.0300,    9.0400,    9.0500,    9.0600};

double c_3d_xflux3[] = {
/*
  print, xflux, format = '(7(F10.4, :,  ","))'
*/
    2.0400,    2.0500,    2.0600,    2.0700,    2.0800,    2.0900,    2.1000,
    2.1100,    3.0400,    3.0500,    3.0600,    3.0700,    3.0800,    3.0900,
    3.1000,    3.1100,    4.0400,    4.0500,    4.0600,    4.0700,    4.0800,
    4.0900,    4.1000,    4.1100,    5.0400,    5.0500,    5.0600,    5.0700,
    5.0800,    5.0900,    5.1000,    5.1100,    6.0400,    6.0500,    6.0600,
    6.0700,    6.0800,    6.0900,    6.1000,    6.1100,    3.0400,    3.0500,
    3.0600,    3.0700,    3.0800,    3.0900,    3.1000,    3.1100,    4.0400,
    4.0500,    4.0600,    4.0700,    4.0800,    4.0900,    4.1000,    4.1100,
    5.0400,    5.0500,    5.0600,    5.0700,    5.0800,    5.0900,    5.1000,
    5.1100,    6.0400,    6.0500,    6.0600,    6.0700,    6.0800,    6.0900,
    6.1000,    6.1100,    7.0400,    7.0500,    7.0600,    7.0700,    7.0800,
    7.0900,    7.1000,    7.1100,    4.0400,    4.0500,    4.0600,    4.0700,
    4.0800,    4.0900,    4.1000,    4.1100,    5.0400,    5.0500,    5.0600,
    5.0700,    5.0800,    5.0900,    5.1000,    5.1100,    6.0400,    6.0500,
    6.0600,    6.0700,    6.0800,    6.0900,    6.1000,    6.1100,    7.0400,
    7.0500,    7.0600,    7.0700,    7.0800,    7.0900,    7.1000,    7.1100,
    8.0400,    8.0500,    8.0600,    8.0700,    8.0800,    8.0900,    8.1000,
    8.1100,    5.0400,    5.0500,    5.0600,    5.0700,    5.0800,    5.0900,
    5.1000,    5.1100,    6.0400,    6.0500,    6.0600,    6.0700,    6.0800,
    6.0900,    6.1000,    6.1100,    7.0400,    7.0500,    7.0600,    7.0700,
    7.0800,    7.0900,    7.1000,    7.1100,    8.0400,    8.0500,    8.0600,
    8.0700,    8.0800,    8.0900,    8.1000,    8.1100,    9.0400,    9.0500,
    9.0600,    9.0700,    9.0800,    9.0900,    9.1000,    9.1100
};

double c_3d_xflux4[] = {
/*
  print, xflux, format = '(7(F10.4, :,  ","))'
*/
   -0.0100,    0.0000,    0.0100,    0.0200,    0.0300,    0.0400,    0.0500,
    0.0600,    0.9900,    1.0000,    1.0100,    1.0200,    1.0300,    1.0400,
    1.0500,    1.0600,    1.9900,    2.0000,    2.0100,    2.0200,    2.0300,
    2.0400,    2.0500,    2.0600,    2.9900,    3.0000,    3.0100,    3.0200,
    3.0300,    3.0400,    3.0500,    3.0600,    3.9900,    4.0000,    4.0100,
    4.0200,    4.0300,    4.0400,    4.0500,    4.0600,    4.9900,    5.0000,
    5.0100,    5.0200,    5.0300,    5.0400,    5.0500,    5.0600,    0.9900,
    1.0000,    1.0100,    1.0200,    1.0300,    1.0400,    1.0500,    1.0600,
    1.9900,    2.0000,    2.0100,    2.0200,    2.0300,    2.0400,    2.0500,
    2.0600,    2.9900,    3.0000,    3.0100,    3.0200,    3.0300,    3.0400,
    3.0500,    3.0600,    3.9900,    4.0000,    4.0100,    4.0200,    4.0300,
    4.0400,    4.0500,    4.0600,    4.9900,    5.0000,    5.0100,    5.0200,
    5.0300,    5.0400,    5.0500,    5.0600,    5.9900,    6.0000,    6.0100,
    6.0200,    6.0300,    6.0400,    6.0500,    6.0600,    1.9900,    2.0000,
    2.0100,    2.0200,    2.0300,    2.0400,    2.0500,    2.0600,    2.9900,
    3.0000,    3.0100,    3.0200,    3.0300,    3.0400,    3.0500,    3.0600,
    3.9900,    4.0000,    4.0100,    4.0200,    4.0300,    4.0400,    4.0500,
    4.0600,    4.9900,    5.0000,    5.0100,    5.0200,    5.0300,    5.0400,
    5.0500,    5.0600,    5.9900,    6.0000,    6.0100,    6.0200,    6.0300,
    6.0400,    6.0500,    6.0600,    6.9900,    7.0000,    7.0100,    7.0200,
    7.0300,    7.0400,    7.0500,    7.0600,    2.9900,    3.0000,    3.0100,
    3.0200,    3.0300,    3.0400,    3.0500,    3.0600,    3.9900,    4.0000,
    4.0100,    4.0200,    4.0300,    4.0400,    4.0500,    4.0600,    4.9900,
    5.0000,    5.0100,    5.0200,    5.0300,    5.0400,    5.0500,    5.0600,
    5.9900,    6.0000,    6.0100,    6.0200,    6.0300,    6.0400,    6.0500,
    6.0600,    6.9900,    7.0000,    7.0100,    7.0200,    7.0300,    7.0400,
    7.0500,    7.0600,    7.9900,    8.0000,    8.0100,    8.0200,    8.0300,
    8.0400,    8.0500,    8.0600};

double c_3d_xflux5[] = {
/*
  print, xflux, format = '(7(F10.4, :,  ","))'
*/
    0.0400,    0.0500,    0.0600,    0.0700,    0.0800,    0.0900,    0.1000,
    0.1100,    1.0400,    1.0500,    1.0600,    1.0700,    1.0800,    1.0900,
    1.1000,    1.1100,    2.0400,    2.0500,    2.0600,    2.0700,    2.0800,
    2.0900,    2.1000,    2.1100,    3.0400,    3.0500,    3.0600,    3.0700,
    3.0800,    3.0900,    3.1000,    3.1100,    4.0400,    4.0500,    4.0600,
    4.0700,    4.0800,    4.0900,    4.1000,    4.1100,    5.0400,    5.0500,
    5.0600,    5.0700,    5.0800,    5.0900,    5.1000,    5.1100,    1.0400,
    1.0500,    1.0600,    1.0700,    1.0800,    1.0900,    1.1000,    1.1100,
    2.0400,    2.0500,    2.0600,    2.0700,    2.0800,    2.0900,    2.1000,
    2.1100,    3.0400,    3.0500,    3.0600,    3.0700,    3.0800,    3.0900,
    3.1000,    3.1100,    4.0400,    4.0500,    4.0600,    4.0700,    4.0800,
    4.0900,    4.1000,    4.1100,    5.0400,    5.0500,    5.0600,    5.0700,
    5.0800,    5.0900,    5.1000,    5.1100,    6.0400,    6.0500,    6.0600,
    6.0700,    6.0800,    6.0900,    6.1000,    6.1100,    2.0400,    2.0500,
    2.0600,    2.0700,    2.0800,    2.0900,    2.1000,    2.1100,    3.0400,
    3.0500,    3.0600,    3.0700,    3.0800,    3.0900,    3.1000,    3.1100,
    4.0400,    4.0500,    4.0600,    4.0700,    4.0800,    4.0900,    4.1000,
    4.1100,    5.0400,    5.0500,    5.0600,    5.0700,    5.0800,    5.0900,
    5.1000,    5.1100,    6.0400,    6.0500,    6.0600,    6.0700,    6.0800,
    6.0900,    6.1000,    6.1100,    7.0400,    7.0500,    7.0600,    7.0700,
    7.0800,    7.0900,    7.1000,    7.1100,    3.0400,    3.0500,    3.0600,
    3.0700,    3.0800,    3.0900,    3.1000,    3.1100,    4.0400,    4.0500,
    4.0600,    4.0700,    4.0800,    4.0900,    4.1000,    4.1100,    5.0400,
    5.0500,    5.0600,    5.0700,    5.0800,    5.0900,    5.1000,    5.1100,
    6.0400,    6.0500,    6.0600,    6.0700,    6.0800,    6.0900,    6.1000,
    6.1100,    7.0400,    7.0500,    7.0600,    7.0700,    7.0800,    7.0900,
    7.1000,    7.1100,    8.0400,    8.0500,    8.0600,    8.0700,    8.0800,
    8.0900,    8.1000,    8.1100};

double c_3d_xflux6[] = {
/*
  print, xflux, format = '(7(F10.4, :,  ","))'
*/
    3.9900,    4.0000,    4.0100,    4.0200,    4.0300,    4.0400,    4.0500,
    4.0600,    4.9900,    5.0000,    5.0100,    5.0200,    5.0300,    5.0400,
    5.0500,    5.0600,    5.9900,    6.0000,    6.0100,    6.0200,    6.0300,
    6.0400,    6.0500,    6.0600,    6.9900,    7.0000,    7.0100,    7.0200,
    7.0300,    7.0400,    7.0500,    7.0600,    7.9900,    8.0000,    8.0100,
    8.0200,    8.0300,    8.0400,    8.0500,    8.0600,    4.9900,    5.0000,
    5.0100,    5.0200,    5.0300,    5.0400,    5.0500,    5.0600,    5.9900,
    6.0000,    6.0100,    6.0200,    6.0300,    6.0400,    6.0500,    6.0600,
    6.9900,    7.0000,    7.0100,    7.0200,    7.0300,    7.0400,    7.0500,
    7.0600,    7.9900,    8.0000,    8.0100,    8.0200,    8.0300,    8.0400,
    8.0500,    8.0600,    8.9900,    9.0000,    9.0100,    9.0200,    9.0300,
    9.0400,    9.0500,    9.0600,    5.9900,    6.0000,    6.0100,    6.0200,
    6.0300,    6.0400,    6.0500,    6.0600,    6.9900,    7.0000,    7.0100,
    7.0200,    7.0300,    7.0400,    7.0500,    7.0600,    7.9900,    8.0000,
    8.0100,    8.0200,    8.0300,    8.0400,    8.0500,    8.0600,    8.9900,
    9.0000,    9.0100,    9.0200,    9.0300,    9.0400,    9.0500,    9.0600,
    9.9900,   10.0000,   10.0100,   10.0200,   10.0300,   10.0400,   10.0500,
   10.0600,    6.9900,    7.0000,    7.0100,    7.0200,    7.0300,    7.0400,
    7.0500,    7.0600,    7.9900,    8.0000,    8.0100,    8.0200,    8.0300,
    8.0400,    8.0500,    8.0600,    8.9900,    9.0000,    9.0100,    9.0200,
    9.0300,    9.0400,    9.0500,    9.0600,    9.9900,   10.0000,   10.0100,
   10.0200,   10.0300,   10.0400,   10.0500,   10.0600,   10.9900,   11.0000,
   11.0100,   11.0200,   11.0300,   11.0400,   11.0500,   11.0600};

double c_3d_xflux7[] = {
/*
  print, xflux, format = '(7(F10.4, :,  ","))'
*/
    4.0400,    4.0500,    4.0600,    4.0700,    4.0800,    4.0900,    4.1000,
    4.1100,    5.0400,    5.0500,    5.0600,    5.0700,    5.0800,    5.0900,
    5.1000,    5.1100,    6.0400,    6.0500,    6.0600,    6.0700,    6.0800,
    6.0900,    6.1000,    6.1100,    7.0400,    7.0500,    7.0600,    7.0700,
    7.0800,    7.0900,    7.1000,    7.1100,    8.0400,    8.0500,    8.0600,
    8.0700,    8.0800,    8.0900,    8.1000,    8.1100,    5.0400,    5.0500,
    5.0600,    5.0700,    5.0800,    5.0900,    5.1000,    5.1100,    6.0400,
    6.0500,    6.0600,    6.0700,    6.0800,    6.0900,    6.1000,    6.1100,
    7.0400,    7.0500,    7.0600,    7.0700,    7.0800,    7.0900,    7.1000,
    7.1100,    8.0400,    8.0500,    8.0600,    8.0700,    8.0800,    8.0900,
    8.1000,    8.1100,    9.0400,    9.0500,    9.0600,    9.0700,    9.0800,
    9.0900,    9.1000,    9.1100,    6.0400,    6.0500,    6.0600,    6.0700,
    6.0800,    6.0900,    6.1000,    6.1100,    7.0400,    7.0500,    7.0600,
    7.0700,    7.0800,    7.0900,    7.1000,    7.1100,    8.0400,    8.0500,
    8.0600,    8.0700,    8.0800,    8.0900,    8.1000,    8.1100,    9.0400,
    9.0500,    9.0600,    9.0700,    9.0800,    9.0900,    9.1000,    9.1100,
   10.0400,   10.0500,   10.0600,   10.0700,   10.0800,   10.0900,   10.1000,
   10.1100,    7.0400,    7.0500,    7.0600,    7.0700,    7.0800,    7.0900,
    7.1000,    7.1100,    8.0400,    8.0500,    8.0600,    8.0700,    8.0800,
    8.0900,    8.1000,    8.1100,    9.0400,    9.0500,    9.0600,    9.0700,
    9.0800,    9.0900,    9.1000,    9.1100,   10.0400,   10.0500,   10.0600,
   10.0700,   10.0800,   10.0900,   10.1000,   10.1100,   11.0400,   11.0500,
   11.0600,   11.0700,   11.0800,   11.0900,   11.1000,   11.1100};

/* Generated in IDL
  c=c0
  yflux = dblarr(c[1]-c[0] + 2*ng, 1 + c[3]-c[2] + 2*ng, c[5]-c[4] + 2*ng)
  for i = 0, c[1]-c[0] - 1 + 2*ng do for j = 0, c[3]-c[2] + 2*ng do $
   for k = 0, c[5]-c[4] - 1 + 2*ng do $
    yflux[i, j, k] = (j + c[2] - ng) / 100.0 + (i + c[0] - ng) + (k + c[4] - ng)
*/

double c_3d_yflux0[] = {
/*
  print, yflux, format = '(7(F10.4, :,  ","))'
*/
   -2.0100,   -1.0100,   -0.0100,    0.9900,    1.9900,    2.9900,    3.9900,
   -2.0000,   -1.0000,    0.0000,    1.0000,    2.0000,    3.0000,    4.0000,
   -1.9900,   -0.9900,    0.0100,    1.0100,    2.0100,    3.0100,    4.0100,
   -1.9800,   -0.9800,    0.0200,    1.0200,    2.0200,    3.0200,    4.0200,
   -1.9700,   -0.9700,    0.0300,    1.0300,    2.0300,    3.0300,    4.0300,
   -1.9600,   -0.9600,    0.0400,    1.0400,    2.0400,    3.0400,    4.0400,
   -1.9500,   -0.9500,    0.0500,    1.0500,    2.0500,    3.0500,    4.0500,
   -1.0100,   -0.0100,    0.9900,    1.9900,    2.9900,    3.9900,    4.9900,
   -1.0000,    0.0000,    1.0000,    2.0000,    3.0000,    4.0000,    5.0000,
   -0.9900,    0.0100,    1.0100,    2.0100,    3.0100,    4.0100,    5.0100,
   -0.9800,    0.0200,    1.0200,    2.0200,    3.0200,    4.0200,    5.0200,
   -0.9700,    0.0300,    1.0300,    2.0300,    3.0300,    4.0300,    5.0300,
   -0.9600,    0.0400,    1.0400,    2.0400,    3.0400,    4.0400,    5.0400,
   -0.9500,    0.0500,    1.0500,    2.0500,    3.0500,    4.0500,    5.0500,
   -0.0100,    0.9900,    1.9900,    2.9900,    3.9900,    4.9900,    5.9900,
    0.0000,    1.0000,    2.0000,    3.0000,    4.0000,    5.0000,    6.0000,
    0.0100,    1.0100,    2.0100,    3.0100,    4.0100,    5.0100,    6.0100,
    0.0200,    1.0200,    2.0200,    3.0200,    4.0200,    5.0200,    6.0200,
    0.0300,    1.0300,    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,
    0.0400,    1.0400,    2.0400,    3.0400,    4.0400,    5.0400,    6.0400,
    0.0500,    1.0500,    2.0500,    3.0500,    4.0500,    5.0500,    6.0500,
    0.9900,    1.9900,    2.9900,    3.9900,    4.9900,    5.9900,    6.9900,
    1.0000,    2.0000,    3.0000,    4.0000,    5.0000,    6.0000,    7.0000,
    1.0100,    2.0100,    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,
    1.0200,    2.0200,    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,
    1.0300,    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,
    1.0400,    2.0400,    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,
    1.0500,    2.0500,    3.0500,    4.0500,    5.0500,    6.0500,    7.0500
};

double c_3d_yflux1[] = {
/*
  print, yflux, format = '(7(F10.4, :,  ","))'
*/
    2.9900,    3.9900,    4.9900,    5.9900,    6.9900,    7.9900,    8.9900,
    3.0000,    4.0000,    5.0000,    6.0000,    7.0000,    8.0000,    9.0000,
    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,
    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,
    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,
    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,
    3.0500,    4.0500,    5.0500,    6.0500,    7.0500,    8.0500,    9.0500,
    3.9900,    4.9900,    5.9900,    6.9900,    7.9900,    8.9900,    9.9900,
    4.0000,    5.0000,    6.0000,    7.0000,    8.0000,    9.0000,   10.0000,
    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,
    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,
    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,
    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,
    4.0500,    5.0500,    6.0500,    7.0500,    8.0500,    9.0500,   10.0500,
    4.9900,    5.9900,    6.9900,    7.9900,    8.9900,    9.9900,   10.9900,
    5.0000,    6.0000,    7.0000,    8.0000,    9.0000,   10.0000,   11.0000,
    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,
    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,
    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,
    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,
    5.0500,    6.0500,    7.0500,    8.0500,    9.0500,   10.0500,   11.0500,
    5.9900,    6.9900,    7.9900,    8.9900,    9.9900,   10.9900,   11.9900,
    6.0000,    7.0000,    8.0000,    9.0000,   10.0000,   11.0000,   12.0000,
    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,
    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,
    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,
    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,   12.0400,
    6.0500,    7.0500,    8.0500,    9.0500,   10.0500,   11.0500,   12.0500
};

double c_3d_yflux2[] = {
/*
  print, yflux, format = '(7(F10.4, :,  ","))'
*/
   -1.9700,   -0.9700,    0.0300,    1.0300,    2.0300,    3.0300,    4.0300,
   -1.9600,   -0.9600,    0.0400,    1.0400,    2.0400,    3.0400,    4.0400,
   -1.9500,   -0.9500,    0.0500,    1.0500,    2.0500,    3.0500,    4.0500,
   -1.9400,   -0.9400,    0.0600,    1.0600,    2.0600,    3.0600,    4.0600,
   -1.9300,   -0.9300,    0.0700,    1.0700,    2.0700,    3.0700,    4.0700,
   -1.9200,   -0.9200,    0.0800,    1.0800,    2.0800,    3.0800,    4.0800,
   -0.9700,    0.0300,    1.0300,    2.0300,    3.0300,    4.0300,    5.0300,
   -0.9600,    0.0400,    1.0400,    2.0400,    3.0400,    4.0400,    5.0400,
   -0.9500,    0.0500,    1.0500,    2.0500,    3.0500,    4.0500,    5.0500,
   -0.9400,    0.0600,    1.0600,    2.0600,    3.0600,    4.0600,    5.0600,
   -0.9300,    0.0700,    1.0700,    2.0700,    3.0700,    4.0700,    5.0700,
   -0.9200,    0.0800,    1.0800,    2.0800,    3.0800,    4.0800,    5.0800,
    0.0300,    1.0300,    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,
    0.0400,    1.0400,    2.0400,    3.0400,    4.0400,    5.0400,    6.0400,
    0.0500,    1.0500,    2.0500,    3.0500,    4.0500,    5.0500,    6.0500,
    0.0600,    1.0600,    2.0600,    3.0600,    4.0600,    5.0600,    6.0600,
    0.0700,    1.0700,    2.0700,    3.0700,    4.0700,    5.0700,    6.0700,
    0.0800,    1.0800,    2.0800,    3.0800,    4.0800,    5.0800,    6.0800,
    1.0300,    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,
    1.0400,    2.0400,    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,
    1.0500,    2.0500,    3.0500,    4.0500,    5.0500,    6.0500,    7.0500,
    1.0600,    2.0600,    3.0600,    4.0600,    5.0600,    6.0600,    7.0600,
    1.0700,    2.0700,    3.0700,    4.0700,    5.0700,    6.0700,    7.0700,
    1.0800,    2.0800,    3.0800,    4.0800,    5.0800,    6.0800,    7.0800
};

double c_3d_yflux3[] = {
/*
  print, yflux, format = '(7(F10.4, :,  ","))'
*/
    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,
    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,
    3.0500,    4.0500,    5.0500,    6.0500,    7.0500,    8.0500,    9.0500,
    3.0600,    4.0600,    5.0600,    6.0600,    7.0600,    8.0600,    9.0600,
    3.0700,    4.0700,    5.0700,    6.0700,    7.0700,    8.0700,    9.0700,
    3.0800,    4.0800,    5.0800,    6.0800,    7.0800,    8.0800,    9.0800,
    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,
    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,
    4.0500,    5.0500,    6.0500,    7.0500,    8.0500,    9.0500,   10.0500,
    4.0600,    5.0600,    6.0600,    7.0600,    8.0600,    9.0600,   10.0600,
    4.0700,    5.0700,    6.0700,    7.0700,    8.0700,    9.0700,   10.0700,
    4.0800,    5.0800,    6.0800,    7.0800,    8.0800,    9.0800,   10.0800,
    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,
    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,
    5.0500,    6.0500,    7.0500,    8.0500,    9.0500,   10.0500,   11.0500,
    5.0600,    6.0600,    7.0600,    8.0600,    9.0600,   10.0600,   11.0600,
    5.0700,    6.0700,    7.0700,    8.0700,    9.0700,   10.0700,   11.0700,
    5.0800,    6.0800,    7.0800,    8.0800,    9.0800,   10.0800,   11.0800,
    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,
    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,   12.0400,
    6.0500,    7.0500,    8.0500,    9.0500,   10.0500,   11.0500,   12.0500,
    6.0600,    7.0600,    8.0600,    9.0600,   10.0600,   11.0600,   12.0600,
    6.0700,    7.0700,    8.0700,    9.0700,   10.0700,   11.0700,   12.0700,
    6.0800,    7.0800,    8.0800,    9.0800,   10.0800,   11.0800,   12.0800
};

double c_3d_yflux4[] = {
/*
  print, yflux, format = '(7(F10.4, :,  ","))'
*/
   -0.0100,    0.9900,    1.9900,    2.9900,    3.9900,    4.9900,    5.9900,
    0.0000,    1.0000,    2.0000,    3.0000,    4.0000,    5.0000,    6.0000,
    0.0100,    1.0100,    2.0100,    3.0100,    4.0100,    5.0100,    6.0100,
    0.0200,    1.0200,    2.0200,    3.0200,    4.0200,    5.0200,    6.0200,
    0.0300,    1.0300,    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,
    0.0400,    1.0400,    2.0400,    3.0400,    4.0400,    5.0400,    6.0400,
    0.0500,    1.0500,    2.0500,    3.0500,    4.0500,    5.0500,    6.0500,
    0.9900,    1.9900,    2.9900,    3.9900,    4.9900,    5.9900,    6.9900,
    1.0000,    2.0000,    3.0000,    4.0000,    5.0000,    6.0000,    7.0000,
    1.0100,    2.0100,    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,
    1.0200,    2.0200,    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,
    1.0300,    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,
    1.0400,    2.0400,    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,
    1.0500,    2.0500,    3.0500,    4.0500,    5.0500,    6.0500,    7.0500,
    1.9900,    2.9900,    3.9900,    4.9900,    5.9900,    6.9900,    7.9900,
    2.0000,    3.0000,    4.0000,    5.0000,    6.0000,    7.0000,    8.0000,
    2.0100,    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,
    2.0200,    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,
    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,
    2.0400,    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,
    2.0500,    3.0500,    4.0500,    5.0500,    6.0500,    7.0500,    8.0500,
    2.9900,    3.9900,    4.9900,    5.9900,    6.9900,    7.9900,    8.9900,
    3.0000,    4.0000,    5.0000,    6.0000,    7.0000,    8.0000,    9.0000,
    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,
    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,
    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,
    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,
    3.0500,    4.0500,    5.0500,    6.0500,    7.0500,    8.0500,    9.0500
};

double c_3d_yflux5[] = {
/*
  print, yflux, format = '(7(F10.4, :,  ","))'
*/
    4.9900,    5.9900,    6.9900,    7.9900,    8.9900,    9.9900,   10.9900,
    5.0000,    6.0000,    7.0000,    8.0000,    9.0000,   10.0000,   11.0000,
    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,
    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,
    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,
    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,
    5.0500,    6.0500,    7.0500,    8.0500,    9.0500,   10.0500,   11.0500,
    5.9900,    6.9900,    7.9900,    8.9900,    9.9900,   10.9900,   11.9900,
    6.0000,    7.0000,    8.0000,    9.0000,   10.0000,   11.0000,   12.0000,
    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,
    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,
    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,
    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,   12.0400,
    6.0500,    7.0500,    8.0500,    9.0500,   10.0500,   11.0500,   12.0500,
    6.9900,    7.9900,    8.9900,    9.9900,   10.9900,   11.9900,   12.9900,
    7.0000,    8.0000,    9.0000,   10.0000,   11.0000,   12.0000,   13.0000,
    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,   13.0100,
    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,   13.0200,
    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,   13.0300,
    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,   12.0400,   13.0400,
    7.0500,    8.0500,    9.0500,   10.0500,   11.0500,   12.0500,   13.0500,
    7.9900,    8.9900,    9.9900,   10.9900,   11.9900,   12.9900,   13.9900,
    8.0000,    9.0000,   10.0000,   11.0000,   12.0000,   13.0000,   14.0000,
    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,   13.0100,   14.0100,
    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,   13.0200,   14.0200,
    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,   13.0300,   14.0300,
    8.0400,    9.0400,   10.0400,   11.0400,   12.0400,   13.0400,   14.0400,
    8.0500,    9.0500,   10.0500,   11.0500,   12.0500,   13.0500,   14.0500
};

double c_3d_yflux6[] = {
/*
  print, yflux, format = '(7(F10.4, :,  ","))'
*/
    0.0300,    1.0300,    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,
    0.0400,    1.0400,    2.0400,    3.0400,    4.0400,    5.0400,    6.0400,
    0.0500,    1.0500,    2.0500,    3.0500,    4.0500,    5.0500,    6.0500,
    0.0600,    1.0600,    2.0600,    3.0600,    4.0600,    5.0600,    6.0600,
    0.0700,    1.0700,    2.0700,    3.0700,    4.0700,    5.0700,    6.0700,
    0.0800,    1.0800,    2.0800,    3.0800,    4.0800,    5.0800,    6.0800,
    1.0300,    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,
    1.0400,    2.0400,    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,
    1.0500,    2.0500,    3.0500,    4.0500,    5.0500,    6.0500,    7.0500,
    1.0600,    2.0600,    3.0600,    4.0600,    5.0600,    6.0600,    7.0600,
    1.0700,    2.0700,    3.0700,    4.0700,    5.0700,    6.0700,    7.0700,
    1.0800,    2.0800,    3.0800,    4.0800,    5.0800,    6.0800,    7.0800,
    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,
    2.0400,    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,
    2.0500,    3.0500,    4.0500,    5.0500,    6.0500,    7.0500,    8.0500,
    2.0600,    3.0600,    4.0600,    5.0600,    6.0600,    7.0600,    8.0600,
    2.0700,    3.0700,    4.0700,    5.0700,    6.0700,    7.0700,    8.0700,
    2.0800,    3.0800,    4.0800,    5.0800,    6.0800,    7.0800,    8.0800,
    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,
    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,
    3.0500,    4.0500,    5.0500,    6.0500,    7.0500,    8.0500,    9.0500,
    3.0600,    4.0600,    5.0600,    6.0600,    7.0600,    8.0600,    9.0600,
    3.0700,    4.0700,    5.0700,    6.0700,    7.0700,    8.0700,    9.0700,
    3.0800,    4.0800,    5.0800,    6.0800,    7.0800,    8.0800,    9.0800
};

double c_3d_yflux7[] = {
/*
  print, yflux, format = '(7(F10.4, :,  ","))'
*/
    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,
    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,
    5.0500,    6.0500,    7.0500,    8.0500,    9.0500,   10.0500,   11.0500,
    5.0600,    6.0600,    7.0600,    8.0600,    9.0600,   10.0600,   11.0600,
    5.0700,    6.0700,    7.0700,    8.0700,    9.0700,   10.0700,   11.0700,
    5.0800,    6.0800,    7.0800,    8.0800,    9.0800,   10.0800,   11.0800,
    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,
    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,   12.0400,
    6.0500,    7.0500,    8.0500,    9.0500,   10.0500,   11.0500,   12.0500,
    6.0600,    7.0600,    8.0600,    9.0600,   10.0600,   11.0600,   12.0600,
    6.0700,    7.0700,    8.0700,    9.0700,   10.0700,   11.0700,   12.0700,
    6.0800,    7.0800,    8.0800,    9.0800,   10.0800,   11.0800,   12.0800,
    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,   13.0300,
    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,   12.0400,   13.0400,
    7.0500,    8.0500,    9.0500,   10.0500,   11.0500,   12.0500,   13.0500,
    7.0600,    8.0600,    9.0600,   10.0600,   11.0600,   12.0600,   13.0600,
    7.0700,    8.0700,    9.0700,   10.0700,   11.0700,   12.0700,   13.0700,
    7.0800,    8.0800,    9.0800,   10.0800,   11.0800,   12.0800,   13.0800,
    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,   13.0300,   14.0300,
    8.0400,    9.0400,   10.0400,   11.0400,   12.0400,   13.0400,   14.0400,
    8.0500,    9.0500,   10.0500,   11.0500,   12.0500,   13.0500,   14.0500,
    8.0600,    9.0600,   10.0600,   11.0600,   12.0600,   13.0600,   14.0600,
    8.0700,    9.0700,   10.0700,   11.0700,   12.0700,   13.0700,   14.0700,
    8.0800,    9.0800,   10.0800,   11.0800,   12.0800,   13.0800,   14.0800
};

/* Generated in IDL
  c=c0
  zflux = dblarr(c[1]-c[0] + 2*ng, c[3]-c[2] + 2*ng, 1 + c[5]-c[4] + 2*ng)
  for i = 0, c[1]-c[0] - 1 + 2*ng do for j = 0, c[3]-c[2] - 1 + 2*ng do $
   for k = 0, c[5]-c[4] + 2*ng do $
    zflux[i, j, k] = (k + c[4] - ng) / 100.0 + (i + c[0] - ng) + (j + c[2] - ng)
*/

double c_3d_zflux0[] = {
/*
  print, zflux, format = '(7(F10.4, :,  ","))'
*/
   -2.0100,   -1.0100,   -0.0100,    0.9900,    1.9900,    2.9900,    3.9900,
   -1.0100,   -0.0100,    0.9900,    1.9900,    2.9900,    3.9900,    4.9900,
   -0.0100,    0.9900,    1.9900,    2.9900,    3.9900,    4.9900,    5.9900,
    0.9900,    1.9900,    2.9900,    3.9900,    4.9900,    5.9900,    6.9900,
    1.9900,    2.9900,    3.9900,    4.9900,    5.9900,    6.9900,    7.9900,
    2.9900,    3.9900,    4.9900,    5.9900,    6.9900,    7.9900,    8.9900,
   -2.0000,   -1.0000,    0.0000,    1.0000,    2.0000,    3.0000,    4.0000,
   -1.0000,    0.0000,    1.0000,    2.0000,    3.0000,    4.0000,    5.0000,
    0.0000,    1.0000,    2.0000,    3.0000,    4.0000,    5.0000,    6.0000,
    1.0000,    2.0000,    3.0000,    4.0000,    5.0000,    6.0000,    7.0000,
    2.0000,    3.0000,    4.0000,    5.0000,    6.0000,    7.0000,    8.0000,
    3.0000,    4.0000,    5.0000,    6.0000,    7.0000,    8.0000,    9.0000,
   -1.9900,   -0.9900,    0.0100,    1.0100,    2.0100,    3.0100,    4.0100,
   -0.9900,    0.0100,    1.0100,    2.0100,    3.0100,    4.0100,    5.0100,
    0.0100,    1.0100,    2.0100,    3.0100,    4.0100,    5.0100,    6.0100,
    1.0100,    2.0100,    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,
    2.0100,    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,
    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,
   -1.9800,   -0.9800,    0.0200,    1.0200,    2.0200,    3.0200,    4.0200,
   -0.9800,    0.0200,    1.0200,    2.0200,    3.0200,    4.0200,    5.0200,
    0.0200,    1.0200,    2.0200,    3.0200,    4.0200,    5.0200,    6.0200,
    1.0200,    2.0200,    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,
    2.0200,    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,
    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,
   -1.9700,   -0.9700,    0.0300,    1.0300,    2.0300,    3.0300,    4.0300,
   -0.9700,    0.0300,    1.0300,    2.0300,    3.0300,    4.0300,    5.0300,
    0.0300,    1.0300,    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,
    1.0300,    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,
    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,
    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300
};

double c_3d_zflux1[] = {
/*
  print, zflux, format = '(7(F10.4, :,  ","))'
*/
    2.9900,    3.9900,    4.9900,    5.9900,    6.9900,    7.9900,    8.9900,
    3.9900,    4.9900,    5.9900,    6.9900,    7.9900,    8.9900,    9.9900,
    4.9900,    5.9900,    6.9900,    7.9900,    8.9900,    9.9900,   10.9900,
    5.9900,    6.9900,    7.9900,    8.9900,    9.9900,   10.9900,   11.9900,
    6.9900,    7.9900,    8.9900,    9.9900,   10.9900,   11.9900,   12.9900,
    7.9900,    8.9900,    9.9900,   10.9900,   11.9900,   12.9900,   13.9900,
    3.0000,    4.0000,    5.0000,    6.0000,    7.0000,    8.0000,    9.0000,
    4.0000,    5.0000,    6.0000,    7.0000,    8.0000,    9.0000,   10.0000,
    5.0000,    6.0000,    7.0000,    8.0000,    9.0000,   10.0000,   11.0000,
    6.0000,    7.0000,    8.0000,    9.0000,   10.0000,   11.0000,   12.0000,
    7.0000,    8.0000,    9.0000,   10.0000,   11.0000,   12.0000,   13.0000,
    8.0000,    9.0000,   10.0000,   11.0000,   12.0000,   13.0000,   14.0000,
    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,
    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,
    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,
    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,
    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,   13.0100,
    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,   13.0100,   14.0100,
    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,
    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,
    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,
    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,
    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,   13.0200,
    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,   13.0200,   14.0200,
    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,
    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,
    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,
    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,
    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,   13.0300,
    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,   13.0300,   14.0300
};

double c_3d_zflux2[] = {
/*
  print, zflux, format = '(7(F10.4, :,  ","))'
*/
    1.9900,    2.9900,    3.9900,    4.9900,    5.9900,    6.9900,    7.9900,
    2.9900,    3.9900,    4.9900,    5.9900,    6.9900,    7.9900,    8.9900,
    3.9900,    4.9900,    5.9900,    6.9900,    7.9900,    8.9900,    9.9900,
    4.9900,    5.9900,    6.9900,    7.9900,    8.9900,    9.9900,   10.9900,
    5.9900,    6.9900,    7.9900,    8.9900,    9.9900,   10.9900,   11.9900,
    2.0000,    3.0000,    4.0000,    5.0000,    6.0000,    7.0000,    8.0000,
    3.0000,    4.0000,    5.0000,    6.0000,    7.0000,    8.0000,    9.0000,
    4.0000,    5.0000,    6.0000,    7.0000,    8.0000,    9.0000,   10.0000,
    5.0000,    6.0000,    7.0000,    8.0000,    9.0000,   10.0000,   11.0000,
    6.0000,    7.0000,    8.0000,    9.0000,   10.0000,   11.0000,   12.0000,
    2.0100,    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,
    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,
    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,
    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,
    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,
    2.0200,    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,
    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,
    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,
    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,
    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,
    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,
    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,
    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,
    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,
    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,   12.0300
};

double c_3d_zflux3[] = {
/*
  print, zflux, format = '(7(F10.4, :,  ","))'
*/
    6.9900,    7.9900,    8.9900,    9.9900,   10.9900,   11.9900,   12.9900,
    7.9900,    8.9900,    9.9900,   10.9900,   11.9900,   12.9900,   13.9900,
    8.9900,    9.9900,   10.9900,   11.9900,   12.9900,   13.9900,   14.9900,
    9.9900,   10.9900,   11.9900,   12.9900,   13.9900,   14.9900,   15.9900,
   10.9900,   11.9900,   12.9900,   13.9900,   14.9900,   15.9900,   16.9900,
    7.0000,    8.0000,    9.0000,   10.0000,   11.0000,   12.0000,   13.0000,
    8.0000,    9.0000,   10.0000,   11.0000,   12.0000,   13.0000,   14.0000,
    9.0000,   10.0000,   11.0000,   12.0000,   13.0000,   14.0000,   15.0000,
   10.0000,   11.0000,   12.0000,   13.0000,   14.0000,   15.0000,   16.0000,
   11.0000,   12.0000,   13.0000,   14.0000,   15.0000,   16.0000,   17.0000,
    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,   13.0100,
    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,   13.0100,   14.0100,
    9.0100,   10.0100,   11.0100,   12.0100,   13.0100,   14.0100,   15.0100,
   10.0100,   11.0100,   12.0100,   13.0100,   14.0100,   15.0100,   16.0100,
   11.0100,   12.0100,   13.0100,   14.0100,   15.0100,   16.0100,   17.0100,
    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,   13.0200,
    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,   13.0200,   14.0200,
    9.0200,   10.0200,   11.0200,   12.0200,   13.0200,   14.0200,   15.0200,
   10.0200,   11.0200,   12.0200,   13.0200,   14.0200,   15.0200,   16.0200,
   11.0200,   12.0200,   13.0200,   14.0200,   15.0200,   16.0200,   17.0200,
    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,   13.0300,
    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,   13.0300,   14.0300,
    9.0300,   10.0300,   11.0300,   12.0300,   13.0300,   14.0300,   15.0300,
   10.0300,   11.0300,   12.0300,   13.0300,   14.0300,   15.0300,   16.0300,
   11.0300,   12.0300,   13.0300,   14.0300,   15.0300,   16.0300,   17.0300
};

double c_3d_zflux4[] = {
/*
  print, zflux, format = '(7(F10.4, :,  ","))'
*/
   -1.9900,   -0.9900,    0.0100,    1.0100,    2.0100,    3.0100,    4.0100,
   -0.9900,    0.0100,    1.0100,    2.0100,    3.0100,    4.0100,    5.0100,
    0.0100,    1.0100,    2.0100,    3.0100,    4.0100,    5.0100,    6.0100,
    1.0100,    2.0100,    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,
    2.0100,    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,
    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,
   -1.9800,   -0.9800,    0.0200,    1.0200,    2.0200,    3.0200,    4.0200,
   -0.9800,    0.0200,    1.0200,    2.0200,    3.0200,    4.0200,    5.0200,
    0.0200,    1.0200,    2.0200,    3.0200,    4.0200,    5.0200,    6.0200,
    1.0200,    2.0200,    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,
    2.0200,    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,
    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,
   -1.9700,   -0.9700,    0.0300,    1.0300,    2.0300,    3.0300,    4.0300,
   -0.9700,    0.0300,    1.0300,    2.0300,    3.0300,    4.0300,    5.0300,
    0.0300,    1.0300,    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,
    1.0300,    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,
    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,
    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,
   -1.9600,   -0.9600,    0.0400,    1.0400,    2.0400,    3.0400,    4.0400,
   -0.9600,    0.0400,    1.0400,    2.0400,    3.0400,    4.0400,    5.0400,
    0.0400,    1.0400,    2.0400,    3.0400,    4.0400,    5.0400,    6.0400,
    1.0400,    2.0400,    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,
    2.0400,    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,
    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,
   -1.9500,   -0.9500,    0.0500,    1.0500,    2.0500,    3.0500,    4.0500,
   -0.9500,    0.0500,    1.0500,    2.0500,    3.0500,    4.0500,    5.0500,
    0.0500,    1.0500,    2.0500,    3.0500,    4.0500,    5.0500,    6.0500,
    1.0500,    2.0500,    3.0500,    4.0500,    5.0500,    6.0500,    7.0500,
    2.0500,    3.0500,    4.0500,    5.0500,    6.0500,    7.0500,    8.0500,
    3.0500,    4.0500,    5.0500,    6.0500,    7.0500,    8.0500,    9.0500
};

double c_3d_zflux5[] = {
/*
  print, zflux, format = '(7(F10.4, :,  ","))'
*/
    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,
    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,
    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,
    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,
    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,   13.0100,
    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,   13.0100,   14.0100,
    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,
    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,
    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,
    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,
    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,   13.0200,
    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,   13.0200,   14.0200,
    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,
    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,
    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,
    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,
    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,   13.0300,
    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,   13.0300,   14.0300,
    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,
    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,
    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,
    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,   12.0400,
    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,   12.0400,   13.0400,
    8.0400,    9.0400,   10.0400,   11.0400,   12.0400,   13.0400,   14.0400,
    3.0500,    4.0500,    5.0500,    6.0500,    7.0500,    8.0500,    9.0500,
    4.0500,    5.0500,    6.0500,    7.0500,    8.0500,    9.0500,   10.0500,
    5.0500,    6.0500,    7.0500,    8.0500,    9.0500,   10.0500,   11.0500,
    6.0500,    7.0500,    8.0500,    9.0500,   10.0500,   11.0500,   12.0500,
    7.0500,    8.0500,    9.0500,   10.0500,   11.0500,   12.0500,   13.0500,
    8.0500,    9.0500,   10.0500,   11.0500,   12.0500,   13.0500,   14.0500
};

double c_3d_zflux6[] = {
/*
  print, zflux, format = '(7(F10.4, :,  ","))'
*/
    2.0100,    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,
    3.0100,    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,
    4.0100,    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,
    5.0100,    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,
    6.0100,    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,
    2.0200,    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,
    3.0200,    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,
    4.0200,    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,
    5.0200,    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,
    6.0200,    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,
    2.0300,    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,
    3.0300,    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,
    4.0300,    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,
    5.0300,    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,
    6.0300,    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,
    2.0400,    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,
    3.0400,    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,
    4.0400,    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,
    5.0400,    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,
    6.0400,    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,   12.0400,
    2.0500,    3.0500,    4.0500,    5.0500,    6.0500,    7.0500,    8.0500,
    3.0500,    4.0500,    5.0500,    6.0500,    7.0500,    8.0500,    9.0500,
    4.0500,    5.0500,    6.0500,    7.0500,    8.0500,    9.0500,   10.0500,
    5.0500,    6.0500,    7.0500,    8.0500,    9.0500,   10.0500,   11.0500,
    6.0500,    7.0500,    8.0500,    9.0500,   10.0500,   11.0500,   12.0500
};

double c_3d_zflux7[] = {
/*
  print, zflux, format = '(7(F10.4, :,  ","))'
*/
    7.0100,    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,   13.0100,
    8.0100,    9.0100,   10.0100,   11.0100,   12.0100,   13.0100,   14.0100,
    9.0100,   10.0100,   11.0100,   12.0100,   13.0100,   14.0100,   15.0100,
   10.0100,   11.0100,   12.0100,   13.0100,   14.0100,   15.0100,   16.0100,
   11.0100,   12.0100,   13.0100,   14.0100,   15.0100,   16.0100,   17.0100,
    7.0200,    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,   13.0200,
    8.0200,    9.0200,   10.0200,   11.0200,   12.0200,   13.0200,   14.0200,
    9.0200,   10.0200,   11.0200,   12.0200,   13.0200,   14.0200,   15.0200,
   10.0200,   11.0200,   12.0200,   13.0200,   14.0200,   15.0200,   16.0200,
   11.0200,   12.0200,   13.0200,   14.0200,   15.0200,   16.0200,   17.0200,
    7.0300,    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,   13.0300,
    8.0300,    9.0300,   10.0300,   11.0300,   12.0300,   13.0300,   14.0300,
    9.0300,   10.0300,   11.0300,   12.0300,   13.0300,   14.0300,   15.0300,
   10.0300,   11.0300,   12.0300,   13.0300,   14.0300,   15.0300,   16.0300,
   11.0300,   12.0300,   13.0300,   14.0300,   15.0300,   16.0300,   17.0300,
    7.0400,    8.0400,    9.0400,   10.0400,   11.0400,   12.0400,   13.0400,
    8.0400,    9.0400,   10.0400,   11.0400,   12.0400,   13.0400,   14.0400,
    9.0400,   10.0400,   11.0400,   12.0400,   13.0400,   14.0400,   15.0400,
   10.0400,   11.0400,   12.0400,   13.0400,   14.0400,   15.0400,   16.0400,
   11.0400,   12.0400,   13.0400,   14.0400,   15.0400,   16.0400,   17.0400,
    7.0500,    8.0500,    9.0500,   10.0500,   11.0500,   12.0500,   13.0500,
    8.0500,    9.0500,   10.0500,   11.0500,   12.0500,   13.0500,   14.0500,
    9.0500,   10.0500,   11.0500,   12.0500,   13.0500,   14.0500,   15.0500,
   10.0500,   11.0500,   12.0500,   13.0500,   14.0500,   15.0500,   16.0500,
   11.0500,   12.0500,   13.0500,   14.0500,   15.0500,   16.0500,   17.0500
};


matchunk matchunk_3d_c[] = {
  {c_3d_mat0, c_3d_ncomp0, c_3d_ptr0, c_3d_mixmat0, c_3d_vf0},
  {c_3d_mat1, c_3d_ncomp1, c_3d_ptr1, c_3d_mixmat1, c_3d_vf1},
  {c_3d_mat2, c_3d_ncomp2, c_3d_ptr2, c_3d_mixmat2, c_3d_vf2},
  {c_3d_mat3, c_3d_ncomp3, c_3d_ptr3, c_3d_mixmat3, c_3d_vf3},
  {c_3d_mat4, c_3d_ncomp4, c_3d_ptr4, c_3d_mixmat4, c_3d_vf4},
  {c_3d_mat5, c_3d_ncomp5, c_3d_ptr5, c_3d_mixmat5, c_3d_vf5},
  {c_3d_mat6, c_3d_ncomp6, c_3d_ptr6, c_3d_mixmat6, c_3d_vf6},
  {c_3d_mat7, c_3d_ncomp7, c_3d_ptr7, c_3d_mixmat7, c_3d_vf7}};

quantchunk denschunk_3d_c[] = {
  {c_3d_dens0, NULL},
  {c_3d_dens1, NULL},
  {c_3d_dens2, NULL},
  {c_3d_dens3, NULL},
  {c_3d_dens4, NULL},
  {c_3d_dens5, NULL},
  {c_3d_dens6, NULL},
  {c_3d_dens7, NULL}};

quantchunk velchunk_3d_c[] = {
  {c_3d_vel0, NULL},
  {c_3d_vel1, NULL},
  {c_3d_vel2, NULL},
  {c_3d_vel3, NULL},
  {c_3d_vel4, NULL},
  {c_3d_vel5, NULL},
  {c_3d_vel6, NULL},
  {c_3d_vel7, NULL}};

quantchunk xfluxchunk_3d_c[] = {
  {c_3d_xflux0, NULL},
  {c_3d_xflux1, NULL},
  {c_3d_xflux2, NULL},
  {c_3d_xflux3, NULL},
  {c_3d_xflux4, NULL},
  {c_3d_xflux5, NULL},
  {c_3d_xflux6, NULL},
  {c_3d_xflux7, NULL}};

quantchunk yfluxchunk_3d_c[] = {
  {c_3d_yflux0, NULL},
  {c_3d_yflux1, NULL},
  {c_3d_yflux2, NULL},
  {c_3d_yflux3, NULL},
  {c_3d_yflux4, NULL},
  {c_3d_yflux5, NULL},
  {c_3d_yflux6, NULL},
  {c_3d_yflux7, NULL}};

quantchunk zfluxchunk_3d_c[] = {
  {c_3d_zflux0, NULL},
  {c_3d_zflux1, NULL},
  {c_3d_zflux2, NULL},
  {c_3d_zflux3, NULL},
  {c_3d_zflux4, NULL},
  {c_3d_zflux5, NULL},
  {c_3d_zflux6, NULL},
  {c_3d_zflux7, NULL}};

matinfo mat_3d_c[] = {
  {"Material", 5, matnames_3d, 1, TIO_TRUE, TIO_INT, TIO_INT, TIO_DOUBLE, 8, matchunk_3d_c}};

quantinfo var_3d_c[][5]= {
  {{"Density",    TIO_CENTRE_CELL, 1, TIO_FALSE, "", 8,  denschunk_3d_c},
   {"X-Velocity", TIO_CENTRE_NODE, 1, TIO_FALSE, "", 8,   velchunk_3d_c},
   {"XFlux",    TIO_CENTRE_FACE_I, 1, TIO_FALSE, "", 8, xfluxchunk_3d_c},
   {"YFlux",    TIO_CENTRE_FACE_J, 1, TIO_FALSE, "", 8, yfluxchunk_3d_c},
   {"ZFlux",    TIO_CENTRE_FACE_K, 1, TIO_FALSE, "", 8, zfluxchunk_3d_c}}};

// Colinear so uses coords in first chunk
chunkinfo chunk_3d_c[] = {
  {TIO_3D, 0,  5, 0, 4, 0, 2, x, y, z,  79, 158},
  {TIO_3D, 5, 10, 0, 4, 0, 2, x, y, z,  86, 172},
  {TIO_3D, 0,  5, 4, 7, 0, 2, x, y, z,  92, 184},
  {TIO_3D, 5, 10, 4, 7, 0, 2, x, y, z,  76, 152},
  {TIO_3D, 0,  5, 0, 4, 2, 4, x, y, z, 106, 212},
  {TIO_3D, 5, 10, 0, 4, 2, 4, x, y, z, 103, 206},
  {TIO_3D, 0,  5, 4, 7, 2, 4, x, y, z, 106, 212},
  {TIO_3D, 5, 10, 4, 7, 2, 4, x, y, z,  78, 156}};

meshinfo mesh_3d_c[] = {
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
    TIO_3D, 11, 8, 5, 0, 8, chunk_3d_c,
   "xunits", "yunits", "zunits", "x axis", "y axis", "z axis", &mat_3d_c[0], 5, var_3d_c[0]}};

stateinfo state_3d_c[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_3d_c[0]}};

/**************************** 3D Point Dummy Data ****************************/

int pointmat[440] = {
/* Generated in IDL
  mat = intarr(11, 8, 5) + 5
  r = [4, 6, 8, 10]
  for m = 4, 1, -1 do for i = 0, 10 do for j = 0, 7 do for k = 0, 4 do begin & $
    out = r[m - 1] - sqrt((i+1)^2 + (j+1)^2 + (k+1)^2) & $
    if out ge 0 then mat[i, j, k] = m & $
  endfor
  
  print, mat, format = '(11(i4, :,  ","))'
*/
   1,   1,   1,   2,   2,   3,   3,   4,   4,   5,   5,
   1,   1,   1,   2,   2,   3,   3,   4,   4,   5,   5,
   1,   1,   2,   2,   2,   3,   3,   4,   4,   5,   5,
   2,   2,   2,   2,   3,   3,   4,   4,   4,   5,   5,
   2,   2,   2,   3,   3,   3,   4,   4,   5,   5,   5,
   3,   3,   3,   3,   3,   4,   4,   5,   5,   5,   5,
   3,   3,   3,   4,   4,   4,   4,   5,   5,   5,   5,
   4,   4,   4,   4,   4,   5,   5,   5,   5,   5,   5,
   1,   1,   1,   2,   2,   3,   3,   4,   4,   5,   5,
   1,   1,   2,   2,   2,   3,   3,   4,   4,   5,   5,
   1,   2,   2,   2,   3,   3,   3,   4,   4,   5,   5,
   2,   2,   2,   2,   3,   3,   4,   4,   5,   5,   5,
   2,   2,   3,   3,   3,   4,   4,   4,   5,   5,   5,
   3,   3,   3,   3,   4,   4,   4,   5,   5,   5,   5,
   3,   3,   3,   4,   4,   4,   5,   5,   5,   5,   5,
   4,   4,   4,   4,   4,   5,   5,   5,   5,   5,   5,
   1,   1,   2,   2,   2,   3,   3,   4,   4,   5,   5,
   1,   2,   2,   2,   3,   3,   3,   4,   4,   5,   5,
   2,   2,   2,   2,   3,   3,   4,   4,   4,   5,   5,
   2,   2,   2,   3,   3,   3,   4,   4,   5,   5,   5,
   2,   3,   3,   3,   3,   4,   4,   4,   5,   5,   5,
   3,   3,   3,   3,   4,   4,   4,   5,   5,   5,   5,
   3,   3,   4,   4,   4,   4,   5,   5,   5,   5,   5,
   4,   4,   4,   4,   4,   5,   5,   5,   5,   5,   5,
   2,   2,   2,   2,   3,   3,   4,   4,   4,   5,   5,
   2,   2,   2,   2,   3,   3,   4,   4,   5,   5,   5,
   2,   2,   2,   3,   3,   3,   4,   4,   5,   5,   5,
   2,   2,   3,   3,   3,   4,   4,   4,   5,   5,   5,
   3,   3,   3,   3,   4,   4,   4,   5,   5,   5,   5,
   3,   3,   3,   4,   4,   4,   5,   5,   5,   5,   5,
   4,   4,   4,   4,   4,   5,   5,   5,   5,   5,   5,
   4,   4,   4,   4,   5,   5,   5,   5,   5,   5,   5,
   2,   2,   2,   3,   3,   3,   4,   4,   5,   5,   5,
   2,   2,   3,   3,   3,   4,   4,   4,   5,   5,   5,
   2,   3,   3,   3,   3,   4,   4,   4,   5,   5,   5,
   3,   3,   3,   3,   4,   4,   4,   5,   5,   5,   5,
   3,   3,   3,   4,   4,   4,   4,   5,   5,   5,   5,
   3,   4,   4,   4,   4,   4,   5,   5,   5,   5,   5,
   4,   4,   4,   4,   4,   5,   5,   5,   5,   5,   5,
   4,   4,   4,   5,   5,   5,   5,   5,   5,   5,   5
};

matchunk matchunk_3d_point[] = {
  {pointmat, NULL, NULL, NULL, NULL}};

quantchunk pointchunk_3d[][1]= {
  {{xvel[0], NULL}},
  {{xvel[1], NULL}},
  {{xvel[2], NULL}},
  {{xvel[3], NULL}}};

matinfo mat_3d_point[] = {
  {"Material", 5, matnames_3d, TIO_GHOSTS_NONE, TIO_FALSE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, matchunk_3d_point}};

quantinfo pointvar_3d[][1]= {
  {{"X-Velocity", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &pointchunk_3d[0][0]}},
  {{"X-Velocity", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &pointchunk_3d[1][0]}},
  {{"X-Velocity", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &pointchunk_3d[2][0]}},
  {{"X-Velocity", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &pointchunk_3d[3][0]}}};

double pointx[440] = {
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0,
  -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0};
double pointy[440] = {
   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
   2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
   3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
   4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
   5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
   6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0,
   7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0,
   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
   2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
   3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
   4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
   5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
   6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0,
   7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0,
   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
   2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
   3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
   4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
   5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
   6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0,
   7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0,
   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
   2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
   3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
   4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
   5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
   6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0,
   7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0,
   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
   2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
   3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
   4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
   5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0,
   6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0,
   7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0};
double pointz[440] = {
   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
   1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
   2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
   2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
   2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
   2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
   2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
   2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
   2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
   2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
   3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
   3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
   3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
   3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
   3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
   3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
   3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
   3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0,
   4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
   4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
   4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
   4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
   4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
   4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
   4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
   4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0};

chunkinfo chunk_3d_point = {TIO_3D, 0, 439, 0, 0, 0, 0, pointx, pointy, pointz, 0, 0};

meshinfo pointmesh_3d[] = {
  {"mesh", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1, TIO_3D, 
   440, 0, 0, 0, 1, &chunk_3d_point, "xunits", "yunits", "zunits", "x axis",
   "y axis", "z axis", mat_3d_point, 1, pointvar_3d[0]},
  {"mesh", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1, TIO_3D,
   440, 0, 0, 0, 1, &chunk_3d_point, "xunits", "yunits", "zunits", "x axis",
   "y axis", "z axis", mat_3d_point, 1, pointvar_3d[1]},
  {"mesh", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1, TIO_3D,
   440, 0, 0, 0, 1, &chunk_3d_point, "xunits", "yunits", "zunits", "x axis",
   "y axis", "z axis", mat_3d_point, 1, pointvar_3d[2]},
  {"mesh", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1, TIO_3D,
   440, 0, 0, 0, 1, &chunk_3d_point, "xunits", "yunits", "zunits", "x axis",
   "y axis", "z axis", mat_3d_point, 1, pointvar_3d[3]}};

stateinfo state_3d_point[] = {
  {"State000", 0,   0.0,  "us", 1, &pointmesh_3d[0]},
  {"State001", 100, 1.01, "us", 1, &pointmesh_3d[1]},
  {"State002", 200, 2.01, "us", 1, &pointmesh_3d[2]},
  {"State003", 300, 3.01, "us", 1, &pointmesh_3d[3]}};

/**************************** 2D Point Dummy Data ****************************/

matchunk matchunk_2d_point[] = {
  {pointmat, NULL, NULL, NULL, NULL}};

quantchunk pointchunk_2d[][1]= {
  {{xvel[0], NULL}},
  {{xvel[1], NULL}},
  {{xvel[2], NULL}},
  {{xvel[3], NULL}}};

matinfo mat_2d_point[] = {
  {"Material", 5, matnames_3d, TIO_GHOSTS_NONE, TIO_FALSE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, matchunk_2d_point}};

quantinfo pointvar_2d[][1]= {
  {{"X-Velocity", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &pointchunk_2d[0][0]}},
  {{"X-Velocity", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &pointchunk_2d[1][0]}},
  {{"X-Velocity", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &pointchunk_2d[2][0]}},
  {{"X-Velocity", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &pointchunk_2d[3][0]}}};

chunkinfo chunk_2d_point = {TIO_2D, 0, 87, 0, 0, 0, 0, pointx, pointy, NULL, 0, 0};

meshinfo pointmesh_2d[] = {
  {"mesh", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
   TIO_2D, 88, 0, 0, 0, 1, &chunk_2d_point, "xunits", "yunits", NULL, "x axis",
   "y axis", NULL, mat_2d_point, 1, pointvar_2d[0]},
  {"mesh", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
   TIO_2D, 88, 0, 0, 0, 1, &chunk_2d_point, "xunits", "yunits", NULL, "x axis",
   "y axis", NULL, mat_2d_point, 1, pointvar_2d[1]},
  {"mesh", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
   TIO_2D, 88, 0, 0, 0, 1, &chunk_2d_point, "xunits", "yunits", NULL, "x axis",
   "y axis", NULL, mat_2d_point, 1, pointvar_2d[2]},
  {"mesh", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
   TIO_2D, 88, 0, 0, 0, 1, &chunk_2d_point, "xunits", "yunits", NULL, "x axis",
   "y axis", NULL, mat_2d_point, 1, pointvar_2d[3]}};

stateinfo state_2d_point[] = {
  {"State000", 0,   0.0,  "us", 1, &pointmesh_2d[0]},
  {"State001", 100, 1.01, "us", 1, &pointmesh_2d[1]},
  {"State002", 200, 2.01, "us", 1, &pointmesh_2d[2]},
  {"State003", 300, 3.01, "us", 1, &pointmesh_2d[3]}};

/**************************** 1D Point Dummy Data ****************************/

matchunk matchunk_1d_point[] = {
  {pointmat, NULL, NULL, NULL, NULL}};

quantchunk pointchunk_1d[][1]= {
  {{xvel[0], NULL}},
  {{xvel[1], NULL}},
  {{xvel[2], NULL}},
  {{xvel[3], NULL}}};

matinfo mat_1d_point[] = {
  {"Material", 5, matnames_3d, TIO_GHOSTS_NONE, TIO_FALSE, TIO_INT, TIO_INT, TIO_DOUBLE, 1, matchunk_1d_point}};

quantinfo pointvar_1d[][1]= {
  {{"X-Velocity", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &pointchunk_1d[0][0]}},
  {{"X-Velocity", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &pointchunk_1d[1][0]}},
  {{"X-Velocity", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &pointchunk_1d[2][0]}},
  {{"X-Velocity", TIO_CENTRE_NODE, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, &pointchunk_1d[3][0]}}};

chunkinfo chunk_1d_point = {TIO_1D, 0, 10, 0, 0, 0, 0, pointx, NULL, NULL, 0, 0};

meshinfo pointmesh_1d[] = {
  {"mesh", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
   TIO_1D, 11, 0, 0, 0, 1, &chunk_1d_point, "xunits", NULL, NULL, "x axis",
   NULL, NULL, mat_1d_point, 1, pointvar_1d[0]},
  {"mesh", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
   TIO_1D, 11, 0, 0, 0, 1, &chunk_1d_point, "xunits", NULL, NULL, "x axis",
   NULL, NULL, mat_1d_point, 1, pointvar_1d[1]},
  {"mesh", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
   TIO_1D, 11, 0, 0, 0, 1, &chunk_1d_point, "xunits", NULL, NULL, "x axis",
   NULL, NULL, mat_1d_point, 1, pointvar_1d[2]},
  {"mesh", TIO_MESH_POINT, TIO_COORD_CARTESIAN, TIO_FALSE, "mesh", 1,
   TIO_1D, 11, 0, 0, 0, 1, &chunk_1d_point, "xunits", NULL, NULL, "x axis",
   NULL, NULL, mat_1d_point, 1, pointvar_1d[3]}};

stateinfo state_1d_point[] = {
  {"State000", 0,   0.0,  "us", 1, &pointmesh_1d[0]},
  {"State001", 100, 1.01, "us", 1, &pointmesh_1d[1]},
  {"State002", 200, 2.01, "us", 1, &pointmesh_1d[2]},
  {"State003", 300, 3.01, "us", 1, &pointmesh_1d[3]}};

/***************************** 3D Spherical Polar *****************************/

double r_sph_3d[] = {
/* Generated in IDL
  val = fltarr(4, 4, 8)
  for thi = 0, 7 do for theta = 0, 3 do for r = 0, 3 do begin & $
    val[r, theta, thi] = thi & $
  endfor
  
  print, val, format = '(4(f4.1, :,  ","))'
*/
 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0, 0.0,
 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0, 1.0,
 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0, 2.0,
 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0, 3.0,
 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0, 4.0,
 5.0, 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0, 5.0,
 6.0, 6.0, 6.0, 6.0,
 6.0, 6.0, 6.0, 6.0,
 6.0, 6.0, 6.0, 6.0,
 6.0, 6.0, 6.0, 6.0,
 7.0, 7.0, 7.0, 7.0,
 7.0, 7.0, 7.0, 7.0,
 7.0, 7.0, 7.0, 7.0,
 7.0, 7.0, 7.0, 7.0
 };

quantchunk sphere_chunk_3d[] = {
  {r_sph_3d, NULL}};

quantinfo sphvar_3d[] = {
  {"R", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, sphere_chunk_3d}};

chunkinfo chunk_3d_sph = {TIO_3D, 0, 4, 0, 4, 0, 8, r, theta, thi, 0, 0};

meshinfo mesh_3d_sph[] = {
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_SPHERICAL, TIO_FALSE, "mesh", 1,
   TIO_3D, 5, 5, 9, 0, 1, &chunk_3d_sph, "runits", "Deg", "Deg", "R", "Theta", "Thi",
   NULL, 1, sphvar_3d}};

stateinfo state_3d_sph[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_3d_sph[0]}};

/**************************** 3D Cylindrical Polar *****************************/

chunkinfo chunk_3d_cyl = {TIO_3D, 0, 4, 0, 8, 0, 4, r, thi, z, 0, 0};

meshinfo mesh_3d_cyl[] = {
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CYLINDRICAL, TIO_FALSE, "mesh",
   1, TIO_3D, 5, 9, 5, 0, 1, &chunk_3d_cyl, "runits", "Deg", "zunits", "R", "Thi", "Z",
   NULL, 0, NULL}};

stateinfo state_3d_cyl[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_3d_cyl[0]}};

/************************** 1D Point Spherical Polar **************************/

chunkinfo chunk_1d_point_sph = {TIO_1D, 0, 4, 0, 0, 0, 0, point_r, NULL, NULL, 0, 0};

meshinfo mesh_1d_point_sph[] = {
  {"mesh", TIO_MESH_POINT, TIO_COORD_SPHERICAL, TIO_FALSE, "mesh", 1,
   TIO_1D, 5, 0, 0, 0, 1, &chunk_1d_point_sph, "runits", NULL, NULL, "R", NULL, NULL,
   NULL, 0, NULL}};

stateinfo state_1d_point_sph[] = {
  {"State000", 0,   0.0,  "us",  1, &mesh_1d_point_sph[0]}};


/************************** 2D Point Spherical Polar **************************/

chunkinfo chunk_2d_point_sph = {TIO_2D, 0, 20, 0, 0, 0, 0, point_r, point_theta, NULL, 0, 0};

meshinfo mesh_2d_point_sph[] = {
  {"mesh", TIO_MESH_POINT, TIO_COORD_SPHERICAL, TIO_FALSE, "mesh", 1,
   TIO_2D, 21, 0, 0, 0, 1, &chunk_2d_point_sph, "runits", "Deg", NULL, "R",
   "Theta", NULL, NULL, 0, NULL}};

stateinfo state_2d_point_sph[] = {
  {"State000", 0,   0.0,  "us",  1, &mesh_2d_point_sph[0]}};

/************************** 3D Point Spherical Polar **************************/

chunkinfo chunk_3d_point_sph = {TIO_3D, 0, 160, 0, 0, 0, 0, point_r, point_theta, point_thisph, 0, 0};

meshinfo mesh_3d_point_sph[] = {
  {"mesh", TIO_MESH_POINT, TIO_COORD_SPHERICAL, TIO_FALSE, "mesh", 1,
   TIO_3D, 161, 0, 0, 0, 1, &chunk_3d_point_sph, "runits", "Deg",
   "Deg", "R", "Theta", "Thi", NULL, 0, NULL}};

stateinfo state_3d_point_sph[] = {
  {"State000", 0,   0.0,  "us",  1, &mesh_3d_point_sph[0]}};

/************************ 1D Point Cylindrical Polar *************************/

chunkinfo chunk_1d_point_cyl = {TIO_1D, 0, 4, 0, 0, 0, 0, point_rcyl, NULL, NULL, 0, 0};

meshinfo mesh_1d_point_cyl[] = {
  {"mesh", TIO_MESH_POINT, TIO_COORD_CYLINDRICAL, TIO_FALSE, "mesh",
   1, TIO_1D, 5, 0, 0, 0, 1, &chunk_1d_point_cyl, "runits", NULL, NULL, "R", NULL,
   NULL, NULL, 0, NULL}};

stateinfo state_1d_point_cyl[] = {
  {"State000", 0,   0.0,  "us",  1, &mesh_1d_point_cyl[0]}};

/************************ 2D Point Cylindrical Polar *************************/

chunkinfo chunk_2d_point_cyl = {TIO_2D, 0, 32, 0, 0, 0, 0, point_rcyl, point_thicyl, NULL, 0, 0};

meshinfo mesh_2d_point_cyl[] = {
  {"mesh", TIO_MESH_POINT, TIO_COORD_CYLINDRICAL, TIO_FALSE, "mesh",
   1, TIO_2D, 33, 0, 0, 0, 1, &chunk_2d_point_cyl, "runits", "Deg",
   NULL, "R", "Thi", NULL, NULL, 0, NULL}};

stateinfo state_2d_point_cyl[] = {
  {"State000", 0,   0.0,  "us",  1, &mesh_2d_point_cyl[0]}};

/************************ 3D Point Cylindrical Polar *************************/

chunkinfo chunk_3d_point_cyl = {TIO_3D, 0, 164, 0, 0, 0, 0, point_rcyl, point_thicyl, point_z, 0, 0};

meshinfo mesh_3d_point_cyl[] = {
  {"mesh", TIO_MESH_POINT, TIO_COORD_CYLINDRICAL, TIO_FALSE, "mesh",
   1, TIO_3D, 165, 0, 0, 0, 1, &chunk_3d_point_cyl, "runits", "Deg",
   "zunits", "R", "Thi", "Z", NULL, 0, NULL}};

stateinfo state_3d_point_cyl[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_3d_point_cyl[0]}};

/***************************** 2D Spherical Polar *****************************/

chunkinfo chunk_2d_sph = {TIO_2D, 0, 4, 0, 4, 0, 0, r, theta, NULL, 0, 0};

meshinfo mesh_2d_sph[] = {
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_SPHERICAL, TIO_FALSE, "mesh", 1,
   TIO_2D, 5, 5, 0, 0, 1, &chunk_2d_sph, "runits", "Deg", NULL, "R", "Theta", NULL,
   NULL, 0, NULL}};


stateinfo state_2d_sph[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_2d_sph[0]}};

/**************************** 2D Cylindrical Polar *****************************/

double dens_2d_cyl[] = { 0.0, 1.0, 2.0, 3.0,
                        0.0, 1.0, 2.0, 3.0, 
                        0.0, 1.0, 2.0, 3.0, 
                        0.0, 1.0, 2.0, 3.0, 
                        0.0, 1.0, 2.0, 3.0, 
                        0.0, 1.0, 2.0, 3.0, 
                        0.0, 1.0, 2.0, 3.0, 
                        0.0, 1.0, 2.0, 3.0};

quantchunk var_chunk_2d_cyl[] = {
  {dens_2d_cyl, NULL}};


quantinfo var_2d_cyl[] = {
  {"Density", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_FALSE,  "", 1, var_chunk_2d_cyl}};


chunkinfo chunk_2d_cyl = {TIO_2D, 0, 4, 0, 8, 0, 0, r, thi, NULL, 0, 0};

meshinfo mesh_2d_cyl[] = {
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CYLINDRICAL, TIO_FALSE, "mesh",
   1, TIO_2D, 5, 9, 0, 0, 1, &chunk_2d_cyl, "runits", "Deg", NULL, "R", "Thi", NULL,
   NULL, 1, var_2d_cyl}};

stateinfo state_2d_cyl[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_2d_cyl[0]}};

/***************************** 1D Spherical Polar *****************************/

chunkinfo chunk_1d_sph = {TIO_1D, 0, 4, 0, 0, 0, 0, r, NULL, NULL, 0, 0};

meshinfo mesh_1d_sph[] = {
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_SPHERICAL, TIO_FALSE, "mesh", 1,
   TIO_1D, 5, 0, 0, 0, 1, &chunk_1d_sph, "runits", NULL, NULL, "R", NULL, NULL,
   NULL, 0, NULL}};


stateinfo state_1d_sph[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_1d_sph[0]}};

/**************************** 1D Cylindrical Polar *****************************/

chunkinfo chunk_1d_cyl = {TIO_1D, 0, 4, 0, 0, 0, 0, r, NULL, NULL, 0, 0};

meshinfo mesh_1d_cyl[] = {
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CYLINDRICAL, TIO_FALSE, "mesh",
   1, TIO_1D, 5, 0, 0, 0, 1, &chunk_1d_cyl, "runits", NULL, NULL, "R", NULL, NULL,
   NULL, 0, NULL}};


stateinfo state_1d_cyl[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_1d_cyl[0]}};

/************************ 1D Cartesian Non-Collinear *************************/

chunkinfo chunk_1d_non_col = {TIO_1D, 0, 10, 0, 0, 0, 0, pointx, NULL, NULL, 0, 0};

meshinfo mesh_1d_noncol[] = {
  {"mesh", TIO_MESH_QUAD_NONCOLINEAR, TIO_COORD_CARTESIAN,
    TIO_FALSE, "mesh", 1, TIO_1D, 11, 0, 0, 0, 1, &chunk_1d_non_col, "xunits",
    "", "", "x axis", "", "", NULL, 0, NULL}};

stateinfo state_1d_noncol[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_1d_noncol[0]}};

/************************ 1D Spherical Non-Collinear *************************/

chunkinfo chunk_1d_noncol_sph = {TIO_1D, 0, 3, 0, 0, 0, 0, &point_r[1], NULL, NULL, 0, 0};

meshinfo mesh_1d_noncol_sph[] = {
  {"mesh", TIO_MESH_QUAD_NONCOLINEAR, TIO_COORD_SPHERICAL,
    TIO_FALSE, "mesh", 1, TIO_1D, 4, 0, 0, 0, 1, &chunk_1d_noncol_sph, "runits",
    "", "", "r axis", "", "", NULL, 0, NULL}};

stateinfo state_1d_noncol_sph[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_1d_noncol_sph[0]}};

/*********************** 1D Cylindrical Non-Collinear ************************/

chunkinfo chunk_1d_noncol_cyl = {TIO_1D, 0, 4, 0, 0, 0, 0, noncol_rcyl, NULL, NULL, 0, 0};

meshinfo mesh_1d_noncol_cyl[] = {
  {"mesh", TIO_MESH_QUAD_NONCOLINEAR, TIO_COORD_CYLINDRICAL,
    TIO_FALSE, "mesh", 1, TIO_1D, 5, 0, 0, 0, 1, &chunk_1d_noncol_cyl,
    "runits", "", "", "r axis", "", "", NULL, 0, NULL}};

stateinfo state_1d_noncol_cyl[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_1d_noncol_cyl[0]}};

/************************ 2D Cartesian Non-Collinear *************************/

// need to check nmixcell nmixcomp
chunkinfo chunk_2d_noncol = {TIO_2D, 0, 10, 0, 7, 0, 0, pointx, pointy, NULL, 9, 19};

meshinfo mesh_2d_noncol[] = {
  {"mesh", TIO_MESH_QUAD_NONCOLINEAR, TIO_COORD_CARTESIAN,
    TIO_FALSE, "mesh", 1, TIO_2D, 11, 8, 0, 0, 1, &chunk_2d_noncol, "xunits",
    "yunits", "", "x axis", "yaxis", "", &mat_2d[0], 2, var_2d[0]}};

stateinfo state_2d_noncol[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_2d_noncol[0]}};

/************************ 2D Spherical Non-Collinear *************************/

chunkinfo chunk_2d_noncol_sph = {TIO_2D, 0, 3, 0, 4, 0, 0, &point_r[1], &point_theta[1], NULL, 0, 0};

meshinfo mesh_2d_noncol_sph[] = {
  {"mesh", TIO_MESH_QUAD_NONCOLINEAR, TIO_COORD_SPHERICAL,
    TIO_FALSE, "mesh", 1, TIO_2D, 4, 5, 0, 0, 1, &chunk_2d_noncol_sph,
    "runits", "deg", "", "r axis", "theta", "", NULL, 0, NULL}};

stateinfo state_2d_noncol_sph[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_2d_noncol_sph[0]}};

/*********************** 2D Cylindrical Non-Collinear ************************/

chunkinfo chunk_2d_noncol_cyl = {TIO_2D, 0, 4, 0, 7, 0, 0, noncol_rcyl, noncol_thicyl, NULL, 0, 0};

meshinfo mesh_2d_noncol_cyl[] = {
  {"mesh", TIO_MESH_QUAD_NONCOLINEAR, TIO_COORD_CYLINDRICAL,
    TIO_FALSE, "mesh", 1, TIO_2D, 5, 8, 0, 0, 1, &chunk_2d_noncol_cyl,
    "runits", "Deg", "", "r axis", "thi", "", NULL, 0, NULL}};

stateinfo state_2d_noncol_cyl[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_2d_noncol_cyl[0]}};

/************************ 3D Cartesian Non-Collinear *************************/

chunkinfo chunk_3d_noncol = {TIO_3D, 0, 10, 0, 7, 0, 4, pointx, pointy, pointz, 0, 0};

meshinfo mesh_3d_noncol[] = {
  {"mesh", TIO_MESH_QUAD_NONCOLINEAR, TIO_COORD_CARTESIAN,
    TIO_FALSE, "mesh", 1, TIO_3D, 11, 8, 5, 0, 1, &chunk_3d_noncol, "xunits",
    "yunits", "zunits", "x axis", "yaxis", "zaxis", NULL, 0, NULL}};

stateinfo state_3d_noncol[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_3d_noncol[0]}};

/************************ 3D Spherical Non-Collinear *************************/

double r_sph_non_3d[] = {
/* Generated in IDL
  val = fltarr(3, 4, 7)
  for thi = 0, 6 do for theta = 0, 3 do for r = 0, 2 do begin & $
    val[r, theta, thi] = thi & $
  endfor
  
  print, val, format = '(3(f4.1, :,  ","))'
*/
 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0,
 0.0, 0.0, 0.0,
 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0,
 1.0, 1.0, 1.0,
 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0,
 2.0, 2.0, 2.0,
 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0,
 3.0, 3.0, 3.0,
 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0,
 4.0, 4.0, 4.0,
 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0,
 5.0, 5.0, 5.0,
 6.0, 6.0, 6.0,
 6.0, 6.0, 6.0,
 6.0, 6.0, 6.0,
 6.0, 6.0, 6.0
 };

quantchunk non_sphere_chunk_3d[] = {
  {r_sph_non_3d, NULL}};

quantinfo non_sphvar_3d[] = {
  {"R", TIO_CENTRE_CELL, TIO_GHOSTS_NONE, TIO_FALSE, "", 1, non_sphere_chunk_3d}};

chunkinfo chunk_3d_noncol_sph = {TIO_3D, 0, 3, 0, 4, 0, 7, &point_r[1], &point_theta[1],
                                 &point_thisph[1], 0, 0};

meshinfo mesh_3d_noncol_sph[] = {
  {"mesh", TIO_MESH_QUAD_NONCOLINEAR, TIO_COORD_SPHERICAL,
    TIO_FALSE, "mesh", 1, TIO_3D, 4, 5, 8, 0, 1, &chunk_3d_noncol_sph, "runits", "deg", "deg", "r axis", "theta", "thi", NULL,
    1, non_sphvar_3d}};

stateinfo state_3d_noncol_sph[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_3d_noncol_sph[0]}};

/*********************** 3D Cylindrical Non-Collinear ************************/

chunkinfo chunk_3d_noncol_cyl = {TIO_3D, 0, 4, 0, 7, 0, 4, noncol_rcyl, noncol_thicyl,
                                 noncol_z, 0, 0};

meshinfo mesh_3d_noncol_cyl[] = {
  {"mesh", TIO_MESH_QUAD_NONCOLINEAR, TIO_COORD_CYLINDRICAL,
    TIO_FALSE, "mesh", 1, TIO_3D, 5, 8, 5, 0, 1, &chunk_3d_noncol_cyl,
    "runits", "Deg", "zunits", "r axis", "thi", "z", NULL, 0, NULL}};
stateinfo state_3d_noncol_cyl[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_3d_noncol_cyl[0]}};

/*********************** 2D Axi symmetric Collinear ************************/

chunkinfo chunk_2d_axi = {TIO_2D, 0, 10, 0, 7, 0, 0, x, y, NULL, 9, 19};

meshinfo mesh_2d_axi[] = {
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CYLINDRICAL_AXISYMMETRIC, TIO_FALSE, "mesh", 1, TIO_2D, 11, 8, 0, 0, 1, &chunk_2d_axi,
   "zunits", "runits", "", "z axis", "r axis", "", &mat_2d[0], 2, var_2d[0]},
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CYLINDRICAL_AXISYMMETRIC, TIO_FALSE, "mesh", 1, TIO_2D, 11, 8, 0, 0, 1, &chunk_2d_axi,
   "zunits", "runits", "", "z axis", "r axis", "", &mat_2d[1], 2, var_2d[1]},
  {"mesh", TIO_MESH_QUAD_COLINEAR, TIO_COORD_CYLINDRICAL_AXISYMMETRIC, TIO_FALSE, "mesh", 1, TIO_2D, 11, 8, 0, 0, 1, &chunk_2d_axi,
   "zunits", "runits", "", "z axis", "r axis", "", &mat_2d[2], 2, var_2d[2]}};

stateinfo state_2d_axi[] = {
  {"State000", 0,   0.0,  "us", 1, &mesh_2d_axi[0]},
  {"State001", 100, 1.02, "us", 1, &mesh_2d_axi[1]},
  {"State002", 200, 2.02, "us", 1, &mesh_2d_axi[2]}};

/********************************* Dummy Files *********************************/

fileinfo FILES[] = {
  {"3d_dummy_v1.h5", "0.0.0", "12/9/03", "Dummy 3D Structured Data", 
   4, state_3d},
  {"3d_chunk_v1.h5", "0.0.1", "24/10/07", "Dummy Chunked 3D Structured Data",
   1, state_3d_c},
  {"2d_dummy_v1.h5", "0.0.1", "14/9/03", "Dummy 2D Structured Data", 
   3, state_2d},
  {"2d_chunk_v1.h5", "0.0.1", "12/3/04", "Dummy Chunked 2D Structured Data",
   3, state_2d_c},
  {"2d_amr_v1.h5", "0.1.0", "18/8/04", "Dummy 2D AMR Structured Data",
   7, state_2d_amr},
  {"2d_amr_r4_v1.h5", "0.1.0", "30/10/07", "Dummy 2D AMR Structured Data",
   1, state_2d_amr_r4},
  {"2d_point_amr_v1.h5", "0.0.1", "2/4/04", "Dummy 2D AMR Point Data",
   7, state_2d_point_amr},
  {"3d_amr_v1.h5", "0.0.1", "26/3/04", "Dummy 3D AMR Structured Data",
   25, state_3d_amr},
  {"3d_amr_r4_v1.h5", "0.0.1", "19/02/08", "Dummy 3D AMR Structured Data",
   1, state_3d_amr_r4},
  {"2d_2m_dummy_v1.h5", "0.0.1", "14/9/03", "Dummy 2D Structured Data", 
   3, state_2d_2m},
  {"1d_dummy_v1.h5", "0.0.2", "15/9/03", "Dummy 1D Structured Data",
   6, state_1d},
  {"1d_point_v1.h5", "0.0.1", "1/4/04", "Dummy 1D Point Data", 
   4, state_1d_point},
  {"2d_point_v1.h5", "0.0.1", "1/4/04", "Dummy 2D Point Data", 
   4, state_2d_point},
  {"3d_point_v1.h5", "0.0.1", "15/3/04", "Dummy 3D Point Data", 
   4, state_3d_point},
  {"1d_point_sph_v1.h5", "0.0.1", "30/9/04", "1D Spherical Polars",
   1, state_1d_point_sph},
  {"2d_point_sph_v1.h5", "0.0.1", "30/9/04", "2D Spherical Polars",
   1, state_2d_point_sph},
  {"3d_point_sph_v1.h5", "0.0.2", "30/9/04", "3D Spherical Polars",
   1, state_3d_point_sph},
  {"1d_point_cyl_v1.h5", "0.0.1", "30/9/04", "1D Cylindrical Polars", 
   1, state_1d_point_cyl},
  {"2d_point_cyl_v1.h5", "0.0.1", "30/9/04", "2D Cylindrical Polars", 
   1, state_2d_point_cyl},
  {"3d_point_cyl_v1.h5", "0.0.2", "30/9/04", "3D Cylindrical Polars", 
   1, state_3d_point_cyl},
  {"1d_sph_v1.h5", "0.0.1", "30/9/04", "1D Spherical Polars",
    1, state_1d_sph},
  {"1d_cyl_v1.h5", "0.0.1", "30/9/04", "1D Cylindrical Polars",
    1, state_1d_cyl},
  {"2d_sph_v1.h5", "0.0.1", "29/9/04", "2D Spherical Polars",
    1, state_2d_sph},
  {"2d_cyl_v1.h5", "0.0.1", "29/9/04", "2D Cylindrical Polars",
    1, state_2d_cyl},
  {"3d_sph_v1.h5", "0.0.1", "21/9/04", "3D Spherical Polars",
    1, state_3d_sph},
  {"3d_cyl_v1.h5", "0.0.1", "21/9/04", "3D Cylindrical Polars",
    1, state_3d_cyl},
  {"1d_noncol_v1.h5", "0.0.1", "9/9/05", "1D Non-Collinear",
    1, state_1d_noncol},
  {"1d_noncol_sph_v1.h5", "0.0.1", "9/9/05", "1D Non-Collinear Spherical Polars",
    1, state_1d_noncol_sph},
  {"1d_noncol_cyl_v1.h5", "0.0.1", "9/9/05", "1D Non-Collinear Cylindrical Polars",
    1, state_1d_noncol_cyl},
  {"2d_noncol_v1.h5", "0.0.1", "9/9/05", "2D Non-Collinear",
    1, state_2d_noncol},
  {"2d_noncol_sph_v1.h5", "0.0.1", "9/9/05", "2D Non-Collinear Spherical Polars",
    1, state_2d_noncol_sph},
  {"2d_noncol_cyl_v1.h5", "0.0.1", "9/9/05", "2D Non-Collinear Cylindrical Polars",
   1, state_2d_noncol_cyl},
  {"3d_noncol_v1.h5", "0.0.1", "9/9/05", "3D Non-Collinear",
   1, state_3d_noncol},
  {"3d_noncol_sph_v1.h5", "0.0.1", "9/9/05", "3D Non-Collinear Spherical Polars",
   1, state_3d_noncol_sph},
  {"3d_noncol_cyl_v1.h5", "0.0.1", "9/9/05", "3D Non-Collinear Cylindrical Polars",
   1, state_3d_noncol_cyl},
  {"2d_dummy_axi_v1.h5", "0.0.1", "22/11/04", "2D Axi symmetric Collinear", 
   3, state_2d_axi}
 };
#endif
